{"version":3,"file":"heat-sdk.js","sources":["../src/converters.ts","../node_modules/big.js/big.js","../node_modules/pako/lib/utils/common.js","../node_modules/pako/lib/zlib/trees.js","../node_modules/pako/lib/zlib/adler32.js","../node_modules/pako/lib/zlib/crc32.js","../node_modules/pako/lib/zlib/messages.js","../node_modules/pako/lib/zlib/deflate.js","../node_modules/pako/lib/utils/strings.js","../node_modules/pako/lib/zlib/zstream.js","../node_modules/pako/lib/deflate.js","../node_modules/pako/lib/zlib/inffast.js","../node_modules/pako/lib/zlib/inftrees.js","../node_modules/pako/lib/zlib/inflate.js","../node_modules/pako/lib/zlib/constants.js","../node_modules/pako/lib/zlib/gzheader.js","../node_modules/pako/lib/inflate.js","../node_modules/pako/index.js","../node_modules/long/dist/long.js","../src/random-bytes.ts","../src/crypto.ts","../src/utils.ts","../src/constants.ts","../src/fee.ts","../src/appendix.ts","../src/transaction-type.ts","../src/attachment.ts","../node_modules/bytebuffer/dist/bytebuffer-node.js","../src/builder.ts","../src/transaction.ts","../node_modules/iconv-lite/lib/bom-handling.js","../node_modules/safe-buffer/index.js","../node_modules/string_decoder/lib/string_decoder.js","../node_modules/iconv-lite/encodings/internal.js","../node_modules/iconv-lite/encodings/utf16.js","../node_modules/iconv-lite/encodings/utf7.js","../node_modules/iconv-lite/encodings/sbcs-codec.js","../node_modules/iconv-lite/encodings/sbcs-data.js","../node_modules/iconv-lite/encodings/sbcs-data-generated.js","../node_modules/iconv-lite/encodings/dbcs-codec.js","../node_modules/iconv-lite/encodings/dbcs-data.js","../node_modules/iconv-lite/encodings/index.js","../node_modules/iconv-lite/lib/streams.js","../node_modules/iconv-lite/lib/extend-node.js","../node_modules/iconv-lite/lib/index.js","../node_modules/encoding/lib/iconv-loader.js","../node_modules/encoding/lib/encoding.js","../node_modules/is-stream/index.js","../node_modules/node-fetch/lib/fetch-error.js","../node_modules/node-fetch/lib/body.js","../node_modules/node-fetch/lib/headers.js","../node_modules/node-fetch/lib/response.js","../node_modules/node-fetch/lib/request.js","../node_modules/node-fetch/index.js","../src/heat-api.ts","../src/subscription.ts","../node_modules/ultron/index.js","../node_modules/async-limiter/index.js","../node_modules/ws/lib/BufferUtil.js","../node_modules/ws/lib/PerMessageDeflate.js","../node_modules/ws/lib/EventTarget.js","../node_modules/ws/lib/Extensions.js","../node_modules/ws/lib/Constants.js","../node_modules/ws/lib/Validation.js","../node_modules/ws/lib/ErrorCodes.js","../node_modules/ws/lib/Receiver.js","../node_modules/ws/lib/Sender.js","../node_modules/ws/lib/WebSocket.js","../node_modules/ws/lib/WebSocketServer.js","../node_modules/ws/index.js","../src/subscriber-base.ts","../src/subscriber-topic.ts","../src/heat-subscriber.ts","../src/secret-generator.ts","../src/avro-types/avro-utils.js","../src/avro-types/avro-types.js","../src/avro.ts","../src/types.ts","../src/socket.ts","../src/heat-rpc.ts","../src/heat-sdk.ts"],"sourcesContent":["/*\n * The MIT License (MIT)\n * Copyright (c) 2017 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\ndeclare function unescape(s: string): string\ndeclare function escape(s: string): string\n\nvar charToNibble: { [key: string]: number } = {}\nvar nibbleToChar: string[] = []\nvar i\nfor (i = 0; i <= 9; ++i) {\n  var character = i.toString()\n  charToNibble[character] = i\n  nibbleToChar.push(character)\n}\n\nfor (i = 10; i <= 15; ++i) {\n  var lowerChar = String.fromCharCode(\"a\".charCodeAt(0) + i - 10)\n  var upperChar = String.fromCharCode(\"A\".charCodeAt(0) + i - 10)\n\n  charToNibble[lowerChar] = i\n  charToNibble[upperChar] = i\n  nibbleToChar.push(lowerChar)\n}\n\nexport function byteArrayToHexString(bytes: Array<number>): string {\n  var str = \"\"\n  for (var i = 0; i < bytes.length; ++i) {\n    if (bytes[i] < 0) {\n      bytes[i] += 256\n    }\n    str += nibbleToChar[bytes[i] >> 4] + nibbleToChar[bytes[i] & 0x0f]\n  }\n  return str\n}\n\nexport function stringToByteArray(stringValue: string): Array<number> {\n  var str = unescape(encodeURIComponent(stringValue)) //temporary\n  var bytes = new Array(str.length)\n  for (var i = 0; i < str.length; ++i) {\n    bytes[i] = str.charCodeAt(i)\n  }\n  return bytes\n}\n\nexport function hexStringToByteArray(str: string): Array<number> {\n  var bytes = []\n  var i = 0\n  if (0 !== str.length % 2) {\n    bytes.push(charToNibble[str.charAt(0)])\n    ++i\n  }\n  for (; i < str.length - 1; i += 2) {\n    bytes.push(\n      (charToNibble[str.charAt(i)] << 4) + charToNibble[str.charAt(i + 1)]\n    )\n  }\n  return bytes\n}\n\nexport function stringToHexString(str: string): string {\n  return byteArrayToHexString(stringToByteArray(str))\n}\n\nexport function hexStringToString(hex: string): string {\n  return byteArrayToString(hexStringToByteArray(hex))\n}\n\nfunction checkBytesToIntInput(\n  bytes: Array<number>,\n  numBytes: number,\n  opt_startIndex?: number\n): number {\n  var startIndex = opt_startIndex || 0\n  if (startIndex < 0) {\n    throw new Error(\"Start index should not be negative\")\n  }\n  if (bytes.length < startIndex + numBytes) {\n    throw new Error(\n      \"Need at least \" + numBytes + \" bytes to convert to an integer\"\n    )\n  }\n  return startIndex\n}\n\nexport function byteArrayToSignedShort(\n  bytes: Array<number>,\n  opt_startIndex?: number\n): any {\n  var index = checkBytesToIntInput(bytes, 2, opt_startIndex)\n  var value = bytes[index]\n  value += bytes[index + 1] << 8\n  return value\n}\n\nexport function byteArrayToSignedInt32(\n  bytes: Array<number>,\n  opt_startIndex?: number\n) {\n  var index = checkBytesToIntInput(bytes, 4, opt_startIndex)\n  var value = bytes[index]\n  value += bytes[index + 1] << 8\n  value += bytes[index + 2] << 16\n  value += bytes[index + 3] << 24\n  return value\n}\n\nexport function byteArrayToBigInteger(\n  bytes: Array<number>,\n  opt_startIndex?: number\n): BigJsLibrary.BigJS {\n  var value = new Big(\"0\")\n  var temp1, temp2\n  for (var i = 7; i >= 0; i--) {\n    temp1 = value.times(new Big(\"256\"))\n    temp2 = temp1.plus(new Big(bytes[opt_startIndex || 0 + i].toString(10)))\n    value = temp2\n  }\n  return value\n}\n\nexport interface IWordArray {\n  sigBytes: number\n  words: Uint32Array\n}\n\n// create a wordArray that is Big-Endian\nexport function byteArrayToWordArray(byteArray: Array<number>): IWordArray {\n  var i = 0,\n    offset = 0,\n    word = 0,\n    len = byteArray.length\n  var words = new Uint32Array(((len / 4) | 0) + (len % 4 == 0 ? 0 : 1))\n  while (i < len - len % 4) {\n    words[offset++] =\n      (byteArray[i++] << 24) |\n      (byteArray[i++] << 16) |\n      (byteArray[i++] << 8) |\n      byteArray[i++]\n  }\n  if (len % 4 != 0) {\n    word = byteArray[i++] << 24\n    if (len % 4 > 1) {\n      word = word | (byteArray[i++] << 16)\n    }\n    if (len % 4 > 2) {\n      word = word | (byteArray[i++] << 8)\n    }\n    words[offset] = word\n  }\n  return { sigBytes: len, words: words }\n}\n\n// assumes wordArray is Big-Endian\nexport function wordArrayToByteArray(wordArray: IWordArray): Array<number> {\n  var len = wordArray.words.length\n  if (len == 0) {\n    return new Array(0)\n  }\n  var byteArray = new Array(wordArray.sigBytes)\n  var offset = 0,\n    word,\n    i\n  for (i = 0; i < len - 1; i++) {\n    word = wordArray.words[i]\n    byteArray[offset++] = word >> 24\n    byteArray[offset++] = (word >> 16) & 0xff\n    byteArray[offset++] = (word >> 8) & 0xff\n    byteArray[offset++] = word & 0xff\n  }\n  word = wordArray.words[len - 1]\n  byteArray[offset++] = word >> 24\n  if (wordArray.sigBytes % 4 == 0) {\n    byteArray[offset++] = (word >> 16) & 0xff\n    byteArray[offset++] = (word >> 8) & 0xff\n    byteArray[offset++] = word & 0xff\n  }\n  if (wordArray.sigBytes % 4 > 1) {\n    byteArray[offset++] = (word >> 16) & 0xff\n  }\n  if (wordArray.sigBytes % 4 > 2) {\n    byteArray[offset++] = (word >> 8) & 0xff\n  }\n  return byteArray\n}\n\n// TODO @opt_startIndex and @length dont seem to be used, verify with rest of code and remove if unused\nexport function byteArrayToString(\n  bytes: Array<number>,\n  opt_startIndex?: any,\n  length?: any\n): string {\n  if (length == 0) {\n    return \"\"\n  }\n  if (opt_startIndex && length) {\n    bytes = bytes.slice(opt_startIndex, opt_startIndex + length)\n  }\n  return decodeURIComponent(escape(String.fromCharCode.apply(null, bytes)))\n}\n\nexport function byteArrayToShortArray(byteArray: Array<number>): Array<number> {\n  var shortArray = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  var i\n  for (i = 0; i < 16; i++) {\n    shortArray[i] = byteArray[i * 2] | (byteArray[i * 2 + 1] << 8)\n  }\n  return shortArray\n}\n\nexport function shortArrayToByteArray(\n  shortArray: Array<number>\n): Array<number> {\n  var byteArray = [\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0\n  ]\n  var i\n  for (i = 0; i < 16; i++) {\n    byteArray[2 * i] = shortArray[i] & 0xff\n    byteArray[2 * i + 1] = shortArray[i] >> 8\n  }\n  return byteArray\n}\n\n// export function shortArrayToHexString(ary:Array<number>):string {\n//   var res = \"\";\n//   for (var i = 0; i < ary.length; i++) {\n//     res += nibbleToChar[(ary[i] >> 4) & 0x0f] + nibbleToChar[ary[i] & 0x0f] + nibbleToChar[(ary[i] >> 12) & 0x0f] + nibbleToChar[(ary[i] >> 8) & 0x0f];\n//   }\n//   return res;\n// }\n\n// slightly optimized (without string concatenation - heat)\nexport function shortArrayToHexString(ary: Array<number>): string {\n  var res: Array<string> = []\n  for (var i = 0; i < ary.length; i++) {\n    res.push(\n      nibbleToChar[(ary[i] >> 4) & 0x0f],\n      nibbleToChar[ary[i] & 0x0f],\n      nibbleToChar[(ary[i] >> 12) & 0x0f],\n      nibbleToChar[(ary[i] >> 8) & 0x0f]\n    )\n  }\n  return res.join(\"\")\n}\n\nexport function int32ToBytes(x: number, opt_bigEndian: boolean) {\n  return intToBytes_(x, 4, 4294967295, opt_bigEndian)\n}\n\n/**\n * Produces an array of the specified number of bytes to represent the integer\n * value. Default output encodes ints in little endian format. Handles signed\n * as well as unsigned integers. Due to limitations in JavaScript's number\n * format, x cannot be a true 64 bit integer (8 bytes).\n */\nfunction intToBytes_(\n  x: number,\n  numBytes: number,\n  unsignedMax: number,\n  opt_bigEndian: boolean\n): Array<number> {\n  var signedMax = Math.floor(unsignedMax / 2)\n  var negativeMax = (signedMax + 1) * -1\n  if (x != Math.floor(x) || x < negativeMax || x > unsignedMax) {\n    throw new Error(x + \" is not a \" + numBytes * 8 + \" bit integer\")\n  }\n  var bytes = []\n  var current\n  // Number type 0 is in the positive int range, 1 is larger than signed int,\n  // and 2 is negative int.\n  var numberType =\n    x >= 0 && x <= signedMax ? 0 : x > signedMax && x <= unsignedMax ? 1 : 2\n  if (numberType == 2) {\n    x = x * -1 - 1\n  }\n  for (var i = 0; i < numBytes; i++) {\n    if (numberType == 2) {\n      current = 255 - x % 256\n    } else {\n      current = x % 256\n    }\n\n    if (opt_bigEndian) {\n      bytes.unshift(current)\n    } else {\n      bytes.push(current)\n    }\n\n    if (numberType == 1) {\n      x = Math.floor(x / 256)\n    } else {\n      x = x >> 8\n    }\n  }\n  return bytes\n}\n","/* big.js v3.1.3 https://github.com/MikeMcl/big.js/LICENCE */\r\n;(function (global) {\r\n    'use strict';\r\n\r\n/*\r\n  big.js v3.1.3\r\n  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\r\n  https://github.com/MikeMcl/big.js/\r\n  Copyright (c) 2014 Michael Mclaughlin <M8ch88l@gmail.com>\r\n  MIT Expat Licence\r\n*/\r\n\r\n/***************************** EDITABLE DEFAULTS ******************************/\r\n\r\n    // The default values below must be integers within the stated ranges.\r\n\r\n    /*\r\n     * The maximum number of decimal places of the results of operations\r\n     * involving division: div and sqrt, and pow with negative exponents.\r\n     */\r\n    var DP = 20,                           // 0 to MAX_DP\r\n\r\n        /*\r\n         * The rounding mode used when rounding to the above decimal places.\r\n         *\r\n         * 0 Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\r\n         * 1 To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\r\n         * 2 To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\r\n         * 3 Away from zero.                                  (ROUND_UP)\r\n         */\r\n        RM = 1,                            // 0, 1, 2 or 3\r\n\r\n        // The maximum value of DP and Big.DP.\r\n        MAX_DP = 1E6,                      // 0 to 1000000\r\n\r\n        // The maximum magnitude of the exponent argument to the pow method.\r\n        MAX_POWER = 1E6,                   // 1 to 1000000\r\n\r\n        /*\r\n         * The exponent value at and beneath which toString returns exponential\r\n         * notation.\r\n         * JavaScript's Number type: -7\r\n         * -1000000 is the minimum recommended exponent value of a Big.\r\n         */\r\n        E_NEG = -7,                   // 0 to -1000000\r\n\r\n        /*\r\n         * The exponent value at and above which toString returns exponential\r\n         * notation.\r\n         * JavaScript's Number type: 21\r\n         * 1000000 is the maximum recommended exponent value of a Big.\r\n         * (This limit is not enforced or checked.)\r\n         */\r\n        E_POS = 21,                   // 0 to 1000000\r\n\r\n/******************************************************************************/\r\n\r\n        // The shared prototype object.\r\n        P = {},\r\n        isValid = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\r\n        Big;\r\n\r\n\r\n    /*\r\n     * Create and return a Big constructor.\r\n     *\r\n     */\r\n    function bigFactory() {\r\n\r\n        /*\r\n         * The Big constructor and exported function.\r\n         * Create and return a new instance of a Big number object.\r\n         *\r\n         * n {number|string|Big} A numeric value.\r\n         */\r\n        function Big(n) {\r\n            var x = this;\r\n\r\n            // Enable constructor usage without new.\r\n            if (!(x instanceof Big)) {\r\n                return n === void 0 ? bigFactory() : new Big(n);\r\n            }\r\n\r\n            // Duplicate.\r\n            if (n instanceof Big) {\r\n                x.s = n.s;\r\n                x.e = n.e;\r\n                x.c = n.c.slice();\r\n            } else {\r\n                parse(x, n);\r\n            }\r\n\r\n            /*\r\n             * Retain a reference to this Big constructor, and shadow\r\n             * Big.prototype.constructor which points to Object.\r\n             */\r\n            x.constructor = Big;\r\n        }\r\n\r\n        Big.prototype = P;\r\n        Big.DP = DP;\r\n        Big.RM = RM;\r\n        Big.E_NEG = E_NEG;\r\n        Big.E_POS = E_POS;\r\n\r\n        return Big;\r\n    }\r\n\r\n\r\n    // Private functions\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of Big x in normal or exponential\r\n     * notation to dp fixed decimal places or significant digits.\r\n     *\r\n     * x {Big} The Big to format.\r\n     * dp {number} Integer, 0 to MAX_DP inclusive.\r\n     * toE {number} 1 (toExponential), 2 (toPrecision) or undefined (toFixed).\r\n     */\r\n    function format(x, dp, toE) {\r\n        var Big = x.constructor,\r\n\r\n            // The index (normal notation) of the digit that may be rounded up.\r\n            i = dp - (x = new Big(x)).e,\r\n            c = x.c;\r\n\r\n        // Round?\r\n        if (c.length > ++dp) {\r\n            rnd(x, i, Big.RM);\r\n        }\r\n\r\n        if (!c[0]) {\r\n            ++i;\r\n        } else if (toE) {\r\n            i = dp;\r\n\r\n        // toFixed\r\n        } else {\r\n            c = x.c;\r\n\r\n            // Recalculate i as x.e may have changed if value rounded up.\r\n            i = x.e + i + 1;\r\n        }\r\n\r\n        // Append zeros?\r\n        for (; c.length < i; c.push(0)) {\r\n        }\r\n        i = x.e;\r\n\r\n        /*\r\n         * toPrecision returns exponential notation if the number of\r\n         * significant digits specified is less than the number of digits\r\n         * necessary to represent the integer part of the value in normal\r\n         * notation.\r\n         */\r\n        return toE === 1 || toE && (dp <= i || i <= Big.E_NEG) ?\r\n\r\n          // Exponential notation.\r\n          (x.s < 0 && c[0] ? '-' : '') +\r\n            (c.length > 1 ? c[0] + '.' + c.join('').slice(1) : c[0]) +\r\n              (i < 0 ? 'e' : 'e+') + i\r\n\r\n          // Normal notation.\r\n          : x.toString();\r\n    }\r\n\r\n\r\n    /*\r\n     * Parse the number or string value passed to a Big constructor.\r\n     *\r\n     * x {Big} A Big number instance.\r\n     * n {number|string} A numeric value.\r\n     */\r\n    function parse(x, n) {\r\n        var e, i, nL;\r\n\r\n        // Minus zero?\r\n        if (n === 0 && 1 / n < 0) {\r\n            n = '-0';\r\n\r\n        // Ensure n is string and check validity.\r\n        } else if (!isValid.test(n += '')) {\r\n            throwErr(NaN);\r\n        }\r\n\r\n        // Determine sign.\r\n        x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\r\n\r\n        // Decimal point?\r\n        if ((e = n.indexOf('.')) > -1) {\r\n            n = n.replace('.', '');\r\n        }\r\n\r\n        // Exponential form?\r\n        if ((i = n.search(/e/i)) > 0) {\r\n\r\n            // Determine exponent.\r\n            if (e < 0) {\r\n                e = i;\r\n            }\r\n            e += +n.slice(i + 1);\r\n            n = n.substring(0, i);\r\n\r\n        } else if (e < 0) {\r\n\r\n            // Integer.\r\n            e = n.length;\r\n        }\r\n\r\n        nL = n.length;\r\n\r\n        // Determine leading zeros.\r\n        for (i = 0; i < nL && n.charAt(i) == '0'; i++) {\r\n        }\r\n\r\n        if (i == nL) {\r\n\r\n            // Zero.\r\n            x.c = [ x.e = 0 ];\r\n        } else {\r\n\r\n            // Determine trailing zeros.\r\n            for (; nL > 0 && n.charAt(--nL) == '0';) {\r\n            }\r\n\r\n            x.e = e - i - 1;\r\n            x.c = [];\r\n\r\n            // Convert string to array of digits without leading/trailing zeros.\r\n            //for (e = 0; i <= nL; x.c[e++] = +n.charAt(i++)) {\r\n            for (; i <= nL; x.c.push(+n.charAt(i++))) {\r\n            }\r\n        }\r\n\r\n        return x;\r\n    }\r\n\r\n\r\n    /*\r\n     * Round Big x to a maximum of dp decimal places using rounding mode rm.\r\n     * Called by div, sqrt and round.\r\n     *\r\n     * x {Big} The Big to round.\r\n     * dp {number} Integer, 0 to MAX_DP inclusive.\r\n     * rm {number} 0, 1, 2 or 3 (DOWN, HALF_UP, HALF_EVEN, UP)\r\n     * [more] {boolean} Whether the result of division was truncated.\r\n     */\r\n    function rnd(x, dp, rm, more) {\r\n        var u,\r\n            xc = x.c,\r\n            i = x.e + dp + 1;\r\n\r\n        if (rm === 1) {\r\n\r\n            // xc[i] is the digit after the digit that may be rounded up.\r\n            more = xc[i] >= 5;\r\n        } else if (rm === 2) {\r\n            more = xc[i] > 5 || xc[i] == 5 &&\r\n              (more || i < 0 || xc[i + 1] !== u || xc[i - 1] & 1);\r\n        } else if (rm === 3) {\r\n            more = more || xc[i] !== u || i < 0;\r\n        } else {\r\n            more = false;\r\n\r\n            if (rm !== 0) {\r\n                throwErr('!Big.RM!');\r\n            }\r\n        }\r\n\r\n        if (i < 1 || !xc[0]) {\r\n\r\n            if (more) {\r\n\r\n                // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n                x.e = -dp;\r\n                x.c = [1];\r\n            } else {\r\n\r\n                // Zero.\r\n                x.c = [x.e = 0];\r\n            }\r\n        } else {\r\n\r\n            // Remove any digits after the required decimal places.\r\n            xc.length = i--;\r\n\r\n            // Round up?\r\n            if (more) {\r\n\r\n                // Rounding up may mean the previous digit has to be rounded up.\r\n                for (; ++xc[i] > 9;) {\r\n                    xc[i] = 0;\r\n\r\n                    if (!i--) {\r\n                        ++x.e;\r\n                        xc.unshift(1);\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Remove trailing zeros.\r\n            for (i = xc.length; !xc[--i]; xc.pop()) {\r\n            }\r\n        }\r\n\r\n        return x;\r\n    }\r\n\r\n\r\n    /*\r\n     * Throw a BigError.\r\n     *\r\n     * message {string} The error message.\r\n     */\r\n    function throwErr(message) {\r\n        var err = new Error(message);\r\n        err.name = 'BigError';\r\n\r\n        throw err;\r\n    }\r\n\r\n\r\n    // Prototype/instance methods\r\n\r\n\r\n    /*\r\n     * Return a new Big whose value is the absolute value of this Big.\r\n     */\r\n    P.abs = function () {\r\n        var x = new this.constructor(this);\r\n        x.s = 1;\r\n\r\n        return x;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return\r\n     * 1 if the value of this Big is greater than the value of Big y,\r\n     * -1 if the value of this Big is less than the value of Big y, or\r\n     * 0 if they have the same value.\r\n    */\r\n    P.cmp = function (y) {\r\n        var xNeg,\r\n            x = this,\r\n            xc = x.c,\r\n            yc = (y = new x.constructor(y)).c,\r\n            i = x.s,\r\n            j = y.s,\r\n            k = x.e,\r\n            l = y.e;\r\n\r\n        // Either zero?\r\n        if (!xc[0] || !yc[0]) {\r\n            return !xc[0] ? !yc[0] ? 0 : -j : i;\r\n        }\r\n\r\n        // Signs differ?\r\n        if (i != j) {\r\n            return i;\r\n        }\r\n        xNeg = i < 0;\r\n\r\n        // Compare exponents.\r\n        if (k != l) {\r\n            return k > l ^ xNeg ? 1 : -1;\r\n        }\r\n\r\n        i = -1;\r\n        j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n        // Compare digit by digit.\r\n        for (; ++i < j;) {\r\n\r\n            if (xc[i] != yc[i]) {\r\n                return xc[i] > yc[i] ^ xNeg ? 1 : -1;\r\n            }\r\n        }\r\n\r\n        // Compare lengths.\r\n        return k == l ? 0 : k > l ^ xNeg ? 1 : -1;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new Big whose value is the value of this Big divided by the\r\n     * value of Big y, rounded, if necessary, to a maximum of Big.DP decimal\r\n     * places using rounding mode Big.RM.\r\n     */\r\n    P.div = function (y) {\r\n        var x = this,\r\n            Big = x.constructor,\r\n            // dividend\r\n            dvd = x.c,\r\n            //divisor\r\n            dvs = (y = new Big(y)).c,\r\n            s = x.s == y.s ? 1 : -1,\r\n            dp = Big.DP;\r\n\r\n        if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n            throwErr('!Big.DP!');\r\n        }\r\n\r\n        // Either 0?\r\n        if (!dvd[0] || !dvs[0]) {\r\n\r\n            // If both are 0, throw NaN\r\n            if (dvd[0] == dvs[0]) {\r\n                throwErr(NaN);\r\n            }\r\n\r\n            // If dvs is 0, throw +-Infinity.\r\n            if (!dvs[0]) {\r\n                throwErr(s / 0);\r\n            }\r\n\r\n            // dvd is 0, return +-0.\r\n            return new Big(s * 0);\r\n        }\r\n\r\n        var dvsL, dvsT, next, cmp, remI, u,\r\n            dvsZ = dvs.slice(),\r\n            dvdI = dvsL = dvs.length,\r\n            dvdL = dvd.length,\r\n            // remainder\r\n            rem = dvd.slice(0, dvsL),\r\n            remL = rem.length,\r\n            // quotient\r\n            q = y,\r\n            qc = q.c = [],\r\n            qi = 0,\r\n            digits = dp + (q.e = x.e - y.e) + 1;\r\n\r\n        q.s = s;\r\n        s = digits < 0 ? 0 : digits;\r\n\r\n        // Create version of divisor with leading zero.\r\n        dvsZ.unshift(0);\r\n\r\n        // Add zeros to make remainder as long as divisor.\r\n        for (; remL++ < dvsL; rem.push(0)) {\r\n        }\r\n\r\n        do {\r\n\r\n            // 'next' is how many times the divisor goes into current remainder.\r\n            for (next = 0; next < 10; next++) {\r\n\r\n                // Compare divisor and remainder.\r\n                if (dvsL != (remL = rem.length)) {\r\n                    cmp = dvsL > remL ? 1 : -1;\r\n                } else {\r\n\r\n                    for (remI = -1, cmp = 0; ++remI < dvsL;) {\r\n\r\n                        if (dvs[remI] != rem[remI]) {\r\n                            cmp = dvs[remI] > rem[remI] ? 1 : -1;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // If divisor < remainder, subtract divisor from remainder.\r\n                if (cmp < 0) {\r\n\r\n                    // Remainder can't be more than 1 digit longer than divisor.\r\n                    // Equalise lengths using divisor with extra leading zero?\r\n                    for (dvsT = remL == dvsL ? dvs : dvsZ; remL;) {\r\n\r\n                        if (rem[--remL] < dvsT[remL]) {\r\n                            remI = remL;\r\n\r\n                            for (; remI && !rem[--remI]; rem[remI] = 9) {\r\n                            }\r\n                            --rem[remI];\r\n                            rem[remL] += 10;\r\n                        }\r\n                        rem[remL] -= dvsT[remL];\r\n                    }\r\n                    for (; !rem[0]; rem.shift()) {\r\n                    }\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Add the 'next' digit to the result array.\r\n            qc[qi++] = cmp ? next : ++next;\r\n\r\n            // Update the remainder.\r\n            if (rem[0] && cmp) {\r\n                rem[remL] = dvd[dvdI] || 0;\r\n            } else {\r\n                rem = [ dvd[dvdI] ];\r\n            }\r\n\r\n        } while ((dvdI++ < dvdL || rem[0] !== u) && s--);\r\n\r\n        // Leading zero? Do not remove if result is simply zero (qi == 1).\r\n        if (!qc[0] && qi != 1) {\r\n\r\n            // There can't be more than one zero.\r\n            qc.shift();\r\n            q.e--;\r\n        }\r\n\r\n        // Round?\r\n        if (qi > digits) {\r\n            rnd(q, dp, Big.RM, rem[0] !== u);\r\n        }\r\n\r\n        return q;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this Big is equal to the value of Big y,\r\n     * otherwise returns false.\r\n     */\r\n    P.eq = function (y) {\r\n        return !this.cmp(y);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this Big is greater than the value of Big y,\r\n     * otherwise returns false.\r\n     */\r\n    P.gt = function (y) {\r\n        return this.cmp(y) > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this Big is greater than or equal to the\r\n     * value of Big y, otherwise returns false.\r\n     */\r\n    P.gte = function (y) {\r\n        return this.cmp(y) > -1;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this Big is less than the value of Big y,\r\n     * otherwise returns false.\r\n     */\r\n    P.lt = function (y) {\r\n        return this.cmp(y) < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this Big is less than or equal to the value\r\n     * of Big y, otherwise returns false.\r\n     */\r\n    P.lte = function (y) {\r\n         return this.cmp(y) < 1;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new Big whose value is the value of this Big minus the value\r\n     * of Big y.\r\n     */\r\n    P.sub = P.minus = function (y) {\r\n        var i, j, t, xLTy,\r\n            x = this,\r\n            Big = x.constructor,\r\n            a = x.s,\r\n            b = (y = new Big(y)).s;\r\n\r\n        // Signs differ?\r\n        if (a != b) {\r\n            y.s = -b;\r\n            return x.plus(y);\r\n        }\r\n\r\n        var xc = x.c.slice(),\r\n            xe = x.e,\r\n            yc = y.c,\r\n            ye = y.e;\r\n\r\n        // Either zero?\r\n        if (!xc[0] || !yc[0]) {\r\n\r\n            // y is non-zero? x is non-zero? Or both are zero.\r\n            return yc[0] ? (y.s = -b, y) : new Big(xc[0] ? x : 0);\r\n        }\r\n\r\n        // Determine which is the bigger number.\r\n        // Prepend zeros to equalise exponents.\r\n        if (a = xe - ye) {\r\n\r\n            if (xLTy = a < 0) {\r\n                a = -a;\r\n                t = xc;\r\n            } else {\r\n                ye = xe;\r\n                t = yc;\r\n            }\r\n\r\n            t.reverse();\r\n            for (b = a; b--; t.push(0)) {\r\n            }\r\n            t.reverse();\r\n        } else {\r\n\r\n            // Exponents equal. Check digit by digit.\r\n            j = ((xLTy = xc.length < yc.length) ? xc : yc).length;\r\n\r\n            for (a = b = 0; b < j; b++) {\r\n\r\n                if (xc[b] != yc[b]) {\r\n                    xLTy = xc[b] < yc[b];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        // x < y? Point xc to the array of the bigger number.\r\n        if (xLTy) {\r\n            t = xc;\r\n            xc = yc;\r\n            yc = t;\r\n            y.s = -y.s;\r\n        }\r\n\r\n        /*\r\n         * Append zeros to xc if shorter. No need to add zeros to yc if shorter\r\n         * as subtraction only needs to start at yc.length.\r\n         */\r\n        if (( b = (j = yc.length) - (i = xc.length) ) > 0) {\r\n\r\n            for (; b--; xc[i++] = 0) {\r\n            }\r\n        }\r\n\r\n        // Subtract yc from xc.\r\n        for (b = i; j > a;){\r\n\r\n            if (xc[--j] < yc[j]) {\r\n\r\n                for (i = j; i && !xc[--i]; xc[i] = 9) {\r\n                }\r\n                --xc[i];\r\n                xc[j] += 10;\r\n            }\r\n            xc[j] -= yc[j];\r\n        }\r\n\r\n        // Remove trailing zeros.\r\n        for (; xc[--b] === 0; xc.pop()) {\r\n        }\r\n\r\n        // Remove leading zeros and adjust exponent accordingly.\r\n        for (; xc[0] === 0;) {\r\n            xc.shift();\r\n            --ye;\r\n        }\r\n\r\n        if (!xc[0]) {\r\n\r\n            // n - n = +0\r\n            y.s = 1;\r\n\r\n            // Result must be zero.\r\n            xc = [ye = 0];\r\n        }\r\n\r\n        y.c = xc;\r\n        y.e = ye;\r\n\r\n        return y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new Big whose value is the value of this Big modulo the\r\n     * value of Big y.\r\n     */\r\n    P.mod = function (y) {\r\n        var yGTx,\r\n            x = this,\r\n            Big = x.constructor,\r\n            a = x.s,\r\n            b = (y = new Big(y)).s;\r\n\r\n        if (!y.c[0]) {\r\n            throwErr(NaN);\r\n        }\r\n\r\n        x.s = y.s = 1;\r\n        yGTx = y.cmp(x) == 1;\r\n        x.s = a;\r\n        y.s = b;\r\n\r\n        if (yGTx) {\r\n            return new Big(x);\r\n        }\r\n\r\n        a = Big.DP;\r\n        b = Big.RM;\r\n        Big.DP = Big.RM = 0;\r\n        x = x.div(y);\r\n        Big.DP = a;\r\n        Big.RM = b;\r\n\r\n        return this.minus( x.times(y) );\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new Big whose value is the value of this Big plus the value\r\n     * of Big y.\r\n     */\r\n    P.add = P.plus = function (y) {\r\n        var t,\r\n            x = this,\r\n            Big = x.constructor,\r\n            a = x.s,\r\n            b = (y = new Big(y)).s;\r\n\r\n        // Signs differ?\r\n        if (a != b) {\r\n            y.s = -b;\r\n            return x.minus(y);\r\n        }\r\n\r\n        var xe = x.e,\r\n            xc = x.c,\r\n            ye = y.e,\r\n            yc = y.c;\r\n\r\n        // Either zero?\r\n        if (!xc[0] || !yc[0]) {\r\n\r\n            // y is non-zero? x is non-zero? Or both are zero.\r\n            return yc[0] ? y : new Big(xc[0] ? x : a * 0);\r\n        }\r\n        xc = xc.slice();\r\n\r\n        // Prepend zeros to equalise exponents.\r\n        // Note: Faster to use reverse then do unshifts.\r\n        if (a = xe - ye) {\r\n\r\n            if (a > 0) {\r\n                ye = xe;\r\n                t = yc;\r\n            } else {\r\n                a = -a;\r\n                t = xc;\r\n            }\r\n\r\n            t.reverse();\r\n            for (; a--; t.push(0)) {\r\n            }\r\n            t.reverse();\r\n        }\r\n\r\n        // Point xc to the longer array.\r\n        if (xc.length - yc.length < 0) {\r\n            t = yc;\r\n            yc = xc;\r\n            xc = t;\r\n        }\r\n        a = yc.length;\r\n\r\n        /*\r\n         * Only start adding at yc.length - 1 as the further digits of xc can be\r\n         * left as they are.\r\n         */\r\n        for (b = 0; a;) {\r\n            b = (xc[--a] = xc[a] + yc[a] + b) / 10 | 0;\r\n            xc[a] %= 10;\r\n        }\r\n\r\n        // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n\r\n        if (b) {\r\n            xc.unshift(b);\r\n            ++ye;\r\n        }\r\n\r\n         // Remove trailing zeros.\r\n        for (a = xc.length; xc[--a] === 0; xc.pop()) {\r\n        }\r\n\r\n        y.c = xc;\r\n        y.e = ye;\r\n\r\n        return y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a Big whose value is the value of this Big raised to the power n.\r\n     * If n is negative, round, if necessary, to a maximum of Big.DP decimal\r\n     * places using rounding mode Big.RM.\r\n     *\r\n     * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\r\n     */\r\n    P.pow = function (n) {\r\n        var x = this,\r\n            one = new x.constructor(1),\r\n            y = one,\r\n            isNeg = n < 0;\r\n\r\n        if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER) {\r\n            throwErr('!pow!');\r\n        }\r\n\r\n        n = isNeg ? -n : n;\r\n\r\n        for (;;) {\r\n\r\n            if (n & 1) {\r\n                y = y.times(x);\r\n            }\r\n            n >>= 1;\r\n\r\n            if (!n) {\r\n                break;\r\n            }\r\n            x = x.times(x);\r\n        }\r\n\r\n        return isNeg ? one.div(y) : y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new Big whose value is the value of this Big rounded to a\r\n     * maximum of dp decimal places using rounding mode rm.\r\n     * If dp is not specified, round to 0 decimal places.\r\n     * If rm is not specified, use Big.RM.\r\n     *\r\n     * [dp] {number} Integer, 0 to MAX_DP inclusive.\r\n     * [rm] 0, 1, 2 or 3 (ROUND_DOWN, ROUND_HALF_UP, ROUND_HALF_EVEN, ROUND_UP)\r\n     */\r\n    P.round = function (dp, rm) {\r\n        var x = this,\r\n            Big = x.constructor;\r\n\r\n        if (dp == null) {\r\n            dp = 0;\r\n        } else if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n            throwErr('!round!');\r\n        }\r\n        rnd(x = new Big(x), dp, rm == null ? Big.RM : rm);\r\n\r\n        return x;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new Big whose value is the square root of the value of this Big,\r\n     * rounded, if necessary, to a maximum of Big.DP decimal places using\r\n     * rounding mode Big.RM.\r\n     */\r\n    P.sqrt = function () {\r\n        var estimate, r, approx,\r\n            x = this,\r\n            Big = x.constructor,\r\n            xc = x.c,\r\n            i = x.s,\r\n            e = x.e,\r\n            half = new Big('0.5');\r\n\r\n        // Zero?\r\n        if (!xc[0]) {\r\n            return new Big(x);\r\n        }\r\n\r\n        // If negative, throw NaN.\r\n        if (i < 0) {\r\n            throwErr(NaN);\r\n        }\r\n\r\n        // Estimate.\r\n        i = Math.sqrt(x.toString());\r\n\r\n        // Math.sqrt underflow/overflow?\r\n        // Pass x to Math.sqrt as integer, then adjust the result exponent.\r\n        if (i === 0 || i === 1 / 0) {\r\n            estimate = xc.join('');\r\n\r\n            if (!(estimate.length + e & 1)) {\r\n                estimate += '0';\r\n            }\r\n\r\n            r = new Big( Math.sqrt(estimate).toString() );\r\n            r.e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\r\n        } else {\r\n            r = new Big(i.toString());\r\n        }\r\n\r\n        i = r.e + (Big.DP += 4);\r\n\r\n        // Newton-Raphson iteration.\r\n        do {\r\n            approx = r;\r\n            r = half.times( approx.plus( x.div(approx) ) );\r\n        } while ( approx.c.slice(0, i).join('') !==\r\n                       r.c.slice(0, i).join('') );\r\n\r\n        rnd(r, Big.DP -= 4, Big.RM);\r\n\r\n        return r;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new Big whose value is the value of this Big times the value of\r\n     * Big y.\r\n     */\r\n    P.mul = P.times = function (y) {\r\n        var c,\r\n            x = this,\r\n            Big = x.constructor,\r\n            xc = x.c,\r\n            yc = (y = new Big(y)).c,\r\n            a = xc.length,\r\n            b = yc.length,\r\n            i = x.e,\r\n            j = y.e;\r\n\r\n        // Determine sign of result.\r\n        y.s = x.s == y.s ? 1 : -1;\r\n\r\n        // Return signed 0 if either 0.\r\n        if (!xc[0] || !yc[0]) {\r\n            return new Big(y.s * 0);\r\n        }\r\n\r\n        // Initialise exponent of result as x.e + y.e.\r\n        y.e = i + j;\r\n\r\n        // If array xc has fewer digits than yc, swap xc and yc, and lengths.\r\n        if (a < b) {\r\n            c = xc;\r\n            xc = yc;\r\n            yc = c;\r\n            j = a;\r\n            a = b;\r\n            b = j;\r\n        }\r\n\r\n        // Initialise coefficient array of result with zeros.\r\n        for (c = new Array(j = a + b); j--; c[j] = 0) {\r\n        }\r\n\r\n        // Multiply.\r\n\r\n        // i is initially xc.length.\r\n        for (i = b; i--;) {\r\n            b = 0;\r\n\r\n            // a is yc.length.\r\n            for (j = a + i; j > i;) {\r\n\r\n                // Current sum of products at this digit position, plus carry.\r\n                b = c[j] + yc[i] * xc[j - i - 1] + b;\r\n                c[j--] = b % 10;\r\n\r\n                // carry\r\n                b = b / 10 | 0;\r\n            }\r\n            c[j] = (c[j] + b) % 10;\r\n        }\r\n\r\n        // Increment result exponent if there is a final carry.\r\n        if (b) {\r\n            ++y.e;\r\n        }\r\n\r\n        // Remove any leading zero.\r\n        if (!c[0]) {\r\n            c.shift();\r\n        }\r\n\r\n        // Remove trailing zeros.\r\n        for (i = c.length; !c[--i]; c.pop()) {\r\n        }\r\n        y.c = c;\r\n\r\n        return y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this Big.\r\n     * Return exponential notation if this Big has a positive exponent equal to\r\n     * or greater than Big.E_POS, or a negative exponent equal to or less than\r\n     * Big.E_NEG.\r\n     */\r\n    P.toString = P.valueOf = P.toJSON = function () {\r\n        var x = this,\r\n            Big = x.constructor,\r\n            e = x.e,\r\n            str = x.c.join(''),\r\n            strL = str.length;\r\n\r\n        // Exponential notation?\r\n        if (e <= Big.E_NEG || e >= Big.E_POS) {\r\n            str = str.charAt(0) + (strL > 1 ? '.' + str.slice(1) : '') +\r\n              (e < 0 ? 'e' : 'e+') + e;\r\n\r\n        // Negative exponent?\r\n        } else if (e < 0) {\r\n\r\n            // Prepend zeros.\r\n            for (; ++e; str = '0' + str) {\r\n            }\r\n            str = '0.' + str;\r\n\r\n        // Positive exponent?\r\n        } else if (e > 0) {\r\n\r\n            if (++e > strL) {\r\n\r\n                // Append zeros.\r\n                for (e -= strL; e-- ; str += '0') {\r\n                }\r\n            } else if (e < strL) {\r\n                str = str.slice(0, e) + '.' + str.slice(e);\r\n            }\r\n\r\n        // Exponent zero.\r\n        } else if (strL > 1) {\r\n            str = str.charAt(0) + '.' + str.slice(1);\r\n        }\r\n\r\n        // Avoid '-0'\r\n        return x.s < 0 && x.c[0] ? '-' + str : str;\r\n    };\r\n\r\n\r\n    /*\r\n     ***************************************************************************\r\n     * If toExponential, toFixed, toPrecision and format are not required they\r\n     * can safely be commented-out or deleted. No redundant code will be left.\r\n     * format is used only by toExponential, toFixed and toPrecision.\r\n     ***************************************************************************\r\n     */\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this Big in exponential\r\n     * notation to dp fixed decimal places and rounded, if necessary, using\r\n     * Big.RM.\r\n     *\r\n     * [dp] {number} Integer, 0 to MAX_DP inclusive.\r\n     */\r\n    P.toExponential = function (dp) {\r\n\r\n        if (dp == null) {\r\n            dp = this.c.length - 1;\r\n        } else if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n            throwErr('!toExp!');\r\n        }\r\n\r\n        return format(this, dp, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this Big in normal notation\r\n     * to dp fixed decimal places and rounded, if necessary, using Big.RM.\r\n     *\r\n     * [dp] {number} Integer, 0 to MAX_DP inclusive.\r\n     */\r\n    P.toFixed = function (dp) {\r\n        var str,\r\n            x = this,\r\n            Big = x.constructor,\r\n            neg = Big.E_NEG,\r\n            pos = Big.E_POS;\r\n\r\n        // Prevent the possibility of exponential notation.\r\n        Big.E_NEG = -(Big.E_POS = 1 / 0);\r\n\r\n        if (dp == null) {\r\n            str = x.toString();\r\n        } else if (dp === ~~dp && dp >= 0 && dp <= MAX_DP) {\r\n            str = format(x, x.e + dp);\r\n\r\n            // (-0).toFixed() is '0', but (-0.1).toFixed() is '-0'.\r\n            // (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n            if (x.s < 0 && x.c[0] && str.indexOf('-') < 0) {\r\n        //E.g. -0.5 if rounded to -0 will cause toString to omit the minus sign.\r\n                str = '-' + str;\r\n            }\r\n        }\r\n        Big.E_NEG = neg;\r\n        Big.E_POS = pos;\r\n\r\n        if (!str) {\r\n            throwErr('!toFix!');\r\n        }\r\n\r\n        return str;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this Big rounded to sd\r\n     * significant digits using Big.RM. Use exponential notation if sd is less\r\n     * than the number of digits necessary to represent the integer part of the\r\n     * value in normal notation.\r\n     *\r\n     * sd {number} Integer, 1 to MAX_DP inclusive.\r\n     */\r\n    P.toPrecision = function (sd) {\r\n\r\n        if (sd == null) {\r\n            return this.toString();\r\n        } else if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\r\n            throwErr('!toPre!');\r\n        }\r\n\r\n        return format(this, sd - 1, 2);\r\n    };\r\n\r\n\r\n    // Export\r\n\r\n\r\n    Big = bigFactory();\r\n\r\n    //AMD.\r\n    if (typeof define === 'function' && define.amd) {\r\n        define(function () {\r\n            return Big;\r\n        });\r\n\r\n    // Node and other CommonJS-like environments that support module.exports.\r\n    } else if (typeof module !== 'undefined' && module.exports) {\r\n        module.exports = Big;\r\n        module.exports.Big = Big;\r\n\r\n    //Browser.\r\n    } else {\r\n        global.Big = Big;\r\n    }\r\n})(this);\r\n","'use strict';\n\n\nvar TYPED_OK =  (typeof Uint8Array !== 'undefined') &&\n                (typeof Uint16Array !== 'undefined') &&\n                (typeof Int32Array !== 'undefined');\n\nfunction _has(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexports.assign = function (obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    var source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (var p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// reduce buffer size, avoiding mem copy\nexports.shrinkBuf = function (buf, size) {\n  if (buf.length === size) { return buf; }\n  if (buf.subarray) { return buf.subarray(0, size); }\n  buf.length = size;\n  return buf;\n};\n\n\nvar fnTyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    if (src.subarray && dest.subarray) {\n      dest.set(src.subarray(src_offs, src_offs + len), dest_offs);\n      return;\n    }\n    // Fallback to ordinary array\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    var i, l, len, pos, chunk, result;\n\n    // calculate data length\n    len = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      len += chunks[i].length;\n    }\n\n    // join chunks\n    result = new Uint8Array(len);\n    pos = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      chunk = chunks[i];\n      result.set(chunk, pos);\n      pos += chunk.length;\n    }\n\n    return result;\n  }\n};\n\nvar fnUntyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    return [].concat.apply([], chunks);\n  }\n};\n\n\n// Enable/Disable typed arrays use, for testing\n//\nexports.setTyped = function (on) {\n  if (on) {\n    exports.Buf8  = Uint8Array;\n    exports.Buf16 = Uint16Array;\n    exports.Buf32 = Int32Array;\n    exports.assign(exports, fnTyped);\n  } else {\n    exports.Buf8  = Array;\n    exports.Buf16 = Array;\n    exports.Buf32 = Array;\n    exports.assign(exports, fnUntyped);\n  }\n};\n\nexports.setTyped(TYPED_OK);\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils = require('../utils/common');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//var Z_FILTERED          = 1;\n//var Z_HUFFMAN_ONLY      = 2;\n//var Z_RLE               = 3;\nvar Z_FIXED               = 4;\n//var Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nvar Z_BINARY              = 0;\nvar Z_TEXT                = 1;\n//var Z_ASCII             = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n/*============================================================================*/\n\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nvar STORED_BLOCK = 0;\nvar STATIC_TREES = 1;\nvar DYN_TREES    = 2;\n/* The three kinds of block type */\n\nvar MIN_MATCH    = 3;\nvar MAX_MATCH    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\n\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nvar D_CODES       = 30;\n/* number of distance codes */\n\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\n\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\n\nvar MAX_BITS      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nvar MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nvar END_BLOCK   = 256;\n/* end of block literal code */\n\nvar REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nvar REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nvar REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nvar extra_lbits =   /* extra bits for each length code */\n  [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];\n\nvar extra_dbits =   /* extra bits for each distance code */\n  [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];\n\nvar extra_blbits =  /* extra bits for each bit length code */\n  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];\n\nvar bl_order =\n  [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nvar DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nvar static_ltree  = new Array((L_CODES + 2) * 2);\nzero(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nvar static_dtree  = new Array(D_CODES * 2);\nzero(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nvar _dist_code    = new Array(DIST_CODE_LEN);\nzero(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nvar _length_code  = new Array(MAX_MATCH - MIN_MATCH + 1);\nzero(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nvar base_length   = new Array(LENGTH_CODES);\nzero(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nvar base_dist     = new Array(D_CODES);\nzero(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nvar static_l_desc;\nvar static_d_desc;\nvar static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nfunction d_code(dist) {\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n}\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nfunction put_short(s, w) {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n}\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nfunction send_bits(s, value, length) {\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n}\n\n\nfunction send_code(s, c, tree) {\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n}\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nfunction bi_reverse(code, len) {\n  var res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nfunction bi_flush(s) {\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n}\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nfunction gen_bitlen(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n{\n  var tree            = desc.dyn_tree;\n  var max_code        = desc.max_code;\n  var stree           = desc.stat_desc.static_tree;\n  var has_stree       = desc.stat_desc.has_stree;\n  var extra           = desc.stat_desc.extra_bits;\n  var base            = desc.stat_desc.extra_base;\n  var max_length      = desc.stat_desc.max_length;\n  var h;              /* heap index */\n  var n, m;           /* iterate over the tree elements */\n  var bits;           /* bit length */\n  var xbits;          /* extra bits */\n  var f;              /* frequency */\n  var overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Trace((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Trace((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nfunction gen_codes(tree, max_code, bl_count)\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n{\n  var next_code = new Array(MAX_BITS + 1); /* next code value for each bit length */\n  var code = 0;              /* running code value */\n  var bits;                  /* bit index */\n  var n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS; bits++) {\n    next_code[bits] = code = (code + bl_count[bits - 1]) << 1;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    var len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n}\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nfunction tr_static_init() {\n  var n;        /* iterates over tree elements */\n  var bits;     /* bit counter */\n  var length;   /* length value */\n  var code;     /* code value */\n  var dist;     /* distance index */\n  var bl_count = new Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);\n\n  //static_init_done = true;\n}\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nfunction init_block(s) {\n  var n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.last_lit = s.matches = 0;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nfunction bi_windup(s)\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n}\n\n/* ===========================================================================\n * Copy a stored block, storing first the length and its\n * one's complement if requested.\n */\nfunction copy_block(s, buf, len, header)\n//DeflateState *s;\n//charf    *buf;    /* the input data */\n//unsigned len;     /* its length */\n//int      header;  /* true if block header must be written */\n{\n  bi_windup(s);        /* align on byte boundary */\n\n  if (header) {\n    put_short(s, len);\n    put_short(s, ~len);\n  }\n//  while (len--) {\n//    put_byte(s, *buf++);\n//  }\n  utils.arraySet(s.pending_buf, s.window, buf, len, s.pending);\n  s.pending += len;\n}\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nfunction smaller(tree, n, m, depth) {\n  var _n2 = n * 2;\n  var _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n}\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nfunction pqdownheap(s, tree, k)\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n{\n  var v = s.heap[k];\n  var j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n}\n\n\n// inlined manually\n// var SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nfunction compress_block(s, ltree, dtree)\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n{\n  var dist;           /* distance of matched string */\n  var lc;             /* match length or unmatched char (if dist == 0) */\n  var lx = 0;         /* running index in l_buf */\n  var code;           /* the code to send */\n  var extra;          /* number of extra bits to send */\n\n  if (s.last_lit !== 0) {\n    do {\n      dist = (s.pending_buf[s.d_buf + lx * 2] << 8) | (s.pending_buf[s.d_buf + lx * 2 + 1]);\n      lc = s.pending_buf[s.l_buf + lx];\n      lx++;\n\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */\n      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,\n      //       \"pendingBuf overflow\");\n\n    } while (lx < s.last_lit);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n}\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nfunction build_tree(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n{\n  var tree     = desc.dyn_tree;\n  var stree    = desc.stat_desc.static_tree;\n  var has_stree = desc.stat_desc.has_stree;\n  var elems    = desc.stat_desc.elems;\n  var n, m;          /* iterate over heap elements */\n  var max_code = -1; /* largest code with non zero frequency */\n  var node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n}\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nfunction scan_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nfunction send_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nfunction build_bl_tree(s) {\n  var max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n}\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nfunction send_all_trees(s, lcodes, dcodes, blcodes)\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n{\n  var rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n}\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"black list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"white list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nfunction detect_data_type(s) {\n  /* black_mask is the bit mask of black-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  var black_mask = 0xf3ffc07f;\n  var n;\n\n  /* Check for non-textual (\"black-listed\") bytes. */\n  for (n = 0; n <= 31; n++, black_mask >>>= 1) {\n    if ((black_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"white-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"black-listed\" or \"white-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n}\n\n\nvar static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nfunction _tr_init(s)\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n}\n\n\n/* ===========================================================================\n * Send a stored block\n */\nfunction _tr_stored_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  copy_block(s, buf, stored_len, true); /* with header */\n}\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nfunction _tr_align(s) {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n}\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and output the encoded block to the zip file.\n */\nfunction _tr_flush_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  var opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  var max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->last_lit));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n}\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nfunction _tr_tally(s, dist, lc)\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n{\n  //var out_length, in_length, dcode;\n\n  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;\n  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;\n\n  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;\n  s.last_lit++;\n\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n\n//#ifdef TRUNCATE_BLOCK\n//  /* Try to guess if it is profitable to stop the current block here */\n//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {\n//    /* Compute an upper bound for the compressed length */\n//    out_length = s.last_lit*8;\n//    in_length = s.strstart - s.block_start;\n//\n//    for (dcode = 0; dcode < D_CODES; dcode++) {\n//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);\n//    }\n//    out_length >>>= 3;\n//    //Tracev((stderr,\"\\nlast_lit %u, in %ld, out ~%ld(%ld%%) \",\n//    //       s->last_lit, in_length, out_length,\n//    //       100L - out_length*100L/in_length));\n//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {\n//      return true;\n//    }\n//  }\n//#endif\n\n  return (s.last_lit === s.lit_bufsize - 1);\n  /* We avoid equality with lit_bufsize because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n}\n\nexports._tr_init  = _tr_init;\nexports._tr_stored_block = _tr_stored_block;\nexports._tr_flush_block  = _tr_flush_block;\nexports._tr_tally = _tr_tally;\nexports._tr_align = _tr_align;\n","'use strict';\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction adler32(adler, buf, len, pos) {\n  var s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n}\n\n\nmodule.exports = adler32;\n","'use strict';\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nfunction makeTable() {\n  var c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n}\n\n// Create table on load. Just 255 signed longs. Not a problem.\nvar crcTable = makeTable();\n\n\nfunction crc32(crc, buf, len, pos) {\n  var t = crcTable,\n      end = pos + len;\n\n  crc ^= -1;\n\n  for (var i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n}\n\n\nmodule.exports = crc32;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils   = require('../utils/common');\nvar trees   = require('./trees');\nvar adler32 = require('./adler32');\nvar crc32   = require('./crc32');\nvar msg     = require('./messages');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\nvar Z_NO_FLUSH      = 0;\nvar Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\nvar Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\n//var Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\n//var Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\n//var Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n\n/* compression levels */\n//var Z_NO_COMPRESSION      = 0;\n//var Z_BEST_SPEED          = 1;\n//var Z_BEST_COMPRESSION    = 9;\nvar Z_DEFAULT_COMPRESSION = -1;\n\n\nvar Z_FILTERED            = 1;\nvar Z_HUFFMAN_ONLY        = 2;\nvar Z_RLE                 = 3;\nvar Z_FIXED               = 4;\nvar Z_DEFAULT_STRATEGY    = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\n//var Z_BINARY              = 0;\n//var Z_TEXT                = 1;\n//var Z_ASCII               = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n/*============================================================================*/\n\n\nvar MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_MEM_LEVEL = 8;\n\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nvar D_CODES       = 30;\n/* number of distance codes */\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nvar MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar MIN_MATCH = 3;\nvar MAX_MATCH = 258;\nvar MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nvar PRESET_DICT = 0x20;\n\nvar INIT_STATE = 42;\nvar EXTRA_STATE = 69;\nvar NAME_STATE = 73;\nvar COMMENT_STATE = 91;\nvar HCRC_STATE = 103;\nvar BUSY_STATE = 113;\nvar FINISH_STATE = 666;\n\nvar BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nvar BS_BLOCK_DONE     = 2; /* block flush performed */\nvar BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nvar BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nvar OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nfunction err(strm, errorCode) {\n  strm.msg = msg[errorCode];\n  return errorCode;\n}\n\nfunction rank(f) {\n  return ((f) << 1) - ((f) > 4 ? 9 : 0);\n}\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output goes\n * through this function so some applications may wish to modify it\n * to avoid allocating a large strm->output buffer and copying into it.\n * (See also read_buf()).\n */\nfunction flush_pending(strm) {\n  var s = strm.state;\n\n  //_tr_flush_bits(s);\n  var len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  utils.arraySet(strm.output, s.pending_buf, s.pending_out, len, strm.next_out);\n  strm.next_out += len;\n  s.pending_out += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n}\n\n\nfunction flush_block_only(s, last) {\n  trees._tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n}\n\n\nfunction put_byte(s, b) {\n  s.pending_buf[s.pending++] = b;\n}\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nfunction putShortMSB(s, b) {\n//  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n}\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nfunction read_buf(strm, buf, start, size) {\n  var len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  utils.arraySet(buf, strm.input, strm.next_in, len, start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n}\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nfunction longest_match(s, cur_match) {\n  var chain_length = s.max_chain_length;      /* max hash chain length */\n  var scan = s.strstart; /* current string */\n  var match;                       /* matched string */\n  var len;                           /* length of current match */\n  var best_len = s.prev_length;              /* best match length so far */\n  var nice_match = s.nice_match;             /* stop if match long enough */\n  var limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  var _win = s.window; // shortcut\n\n  var wmask = s.w_mask;\n  var prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  var strend = s.strstart + MAX_MATCH;\n  var scan_end1  = _win[scan + best_len - 1];\n  var scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n}\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nfunction fill_window(s) {\n  var _w_size = s.w_size;\n  var p, n, m, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      utils.arraySet(s.window, s.window, _w_size, _w_size, 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n\n      /* Slide the hash table (could be avoided with 32 bit values\n       at the expense of memory usage). We slide even when level == 0\n       to keep the hash table consistent if we switch back to level > 0\n       later. (Using level 0 permanently is not an optimal usage of\n       zlib, so we don't care about this pathological case.)\n       */\n\n      n = s.hash_size;\n      p = n;\n      do {\n        m = s.head[--p];\n        s.head[p] = (m >= _w_size ? m - _w_size : 0);\n      } while (--n);\n\n      n = _w_size;\n      p = n;\n      do {\n        m = s.prev[--p];\n        s.prev[p] = (m >= _w_size ? m - _w_size : 0);\n        /* If n is not on any hash chain, prev[n] is garbage but\n         * its value will never be used.\n         */\n      } while (--n);\n\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + 1]) & s.hash_mask;\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    var curr = s.strstart + s.lookahead;\n//    var init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n}\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n * This function does not insert new strings in the dictionary since\n * uncompressible data is probably not useful. This function is used\n * only for the level=0 compression option.\n * NOTE: this function should be optimized to avoid extra copying from\n * window to pending_buf.\n */\nfunction deflate_stored(s, flush) {\n  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited\n   * to pending_buf_size, and each stored block has a 5 byte header:\n   */\n  var max_block_size = 0xffff;\n\n  if (max_block_size > s.pending_buf_size - 5) {\n    max_block_size = s.pending_buf_size - 5;\n  }\n\n  /* Copy as much as possible from input to output: */\n  for (;;) {\n    /* Fill the window as much as possible: */\n    if (s.lookahead <= 1) {\n\n      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||\n      //  s->block_start >= (long)s->w_size, \"slide too late\");\n//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||\n//        s.block_start >= s.w_size)) {\n//        throw  new Error(\"slide too late\");\n//      }\n\n      fill_window(s);\n      if (s.lookahead === 0 && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n\n      if (s.lookahead === 0) {\n        break;\n      }\n      /* flush the current block */\n    }\n    //Assert(s->block_start >= 0L, \"block gone\");\n//    if (s.block_start < 0) throw new Error(\"block gone\");\n\n    s.strstart += s.lookahead;\n    s.lookahead = 0;\n\n    /* Emit a stored block if pending_buf will be full: */\n    var max_start = s.block_start + max_block_size;\n\n    if (s.strstart === 0 || s.strstart >= max_start) {\n      /* strstart == 0 is possible when wraparound on 16-bit machine */\n      s.lookahead = s.strstart - max_start;\n      s.strstart = max_start;\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n\n\n    }\n    /* Flush if we may have to slide, otherwise block_start may become\n     * negative and the data will be gone:\n     */\n    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n\n  s.insert = 0;\n\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n\n  if (s.strstart > s.block_start) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_NEED_MORE;\n}\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nfunction deflate_fast(s, flush) {\n  var hash_head;        /* head of the hash chain */\n  var bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + 1]) & s.hash_mask;\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nfunction deflate_slow(s, flush) {\n  var hash_head;          /* head of hash chain */\n  var bflush;              /* set if current block must be flushed */\n\n  var max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = trees._tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n}\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nfunction deflate_rle(s, flush) {\n  var bflush;            /* set if current block must be flushed */\n  var prev;              /* byte at distance one to match */\n  var scan, strend;      /* scan goes up to strend for length of run */\n\n  var _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nfunction deflate_huff(s, flush) {\n  var bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nvar configuration_table;\n\nconfiguration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nfunction lm_init(s) {\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n}\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new utils.Buf16(HEAP_SIZE * 2);\n  this.dyn_dtree  = new utils.Buf16((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new utils.Buf16((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new utils.Buf16(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new utils.Buf16(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new utils.Buf16(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.l_buf = 0;          /* buffer index for literals or lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.last_lit = 0;      /* running index in l_buf */\n\n  this.d_buf = 0;\n  /* Buffer index for distances. To simplify the code, d_buf and l_buf have\n   * the same number of elements. To use different lengths, an extra flag\n   * array would be necessary.\n   */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\nfunction deflateResetKeep(strm) {\n  var s;\n\n  if (!strm || !strm.state) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = Z_NO_FLUSH;\n  trees._tr_init(s);\n  return Z_OK;\n}\n\n\nfunction deflateReset(strm) {\n  var ret = deflateResetKeep(strm);\n  if (ret === Z_OK) {\n    lm_init(strm.state);\n  }\n  return ret;\n}\n\n\nfunction deflateSetHeader(strm, head) {\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR; }\n  strm.state.gzhead = head;\n  return Z_OK;\n}\n\n\nfunction deflateInit2(strm, level, method, windowBits, memLevel, strategy) {\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR;\n  }\n  var wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  var s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new utils.Buf8(s.w_size * 2);\n  s.head = new utils.Buf16(s.hash_size);\n  s.prev = new utils.Buf16(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n\n  //overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);\n  //s->pending_buf = (uchf *) overlay;\n  s.pending_buf = new utils.Buf8(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);\n  s.d_buf = 1 * s.lit_bufsize;\n\n  //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;\n  s.l_buf = (1 + 2) * s.lit_bufsize;\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n}\n\nfunction deflateInit(strm, level) {\n  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);\n}\n\n\nfunction deflate(strm, flush) {\n  var old_flush, s;\n  var beg, val; // for gzip header write only\n\n  if (!strm || !strm.state ||\n    flush > Z_BLOCK || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n\n  if (!strm.output ||\n      (!strm.input && strm.avail_in !== 0) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);\n  }\n\n  s.strm = strm; /* just in case */\n  old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Write the header */\n  if (s.status === INIT_STATE) {\n\n    if (s.wrap === 2) { // GZIP header\n      strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n      put_byte(s, 31);\n      put_byte(s, 139);\n      put_byte(s, 8);\n      if (!s.gzhead) { // s->gzhead == Z_NULL\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, OS_CODE);\n        s.status = BUSY_STATE;\n      }\n      else {\n        put_byte(s, (s.gzhead.text ? 1 : 0) +\n                    (s.gzhead.hcrc ? 2 : 0) +\n                    (!s.gzhead.extra ? 0 : 4) +\n                    (!s.gzhead.name ? 0 : 8) +\n                    (!s.gzhead.comment ? 0 : 16)\n                );\n        put_byte(s, s.gzhead.time & 0xff);\n        put_byte(s, (s.gzhead.time >> 8) & 0xff);\n        put_byte(s, (s.gzhead.time >> 16) & 0xff);\n        put_byte(s, (s.gzhead.time >> 24) & 0xff);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, s.gzhead.os & 0xff);\n        if (s.gzhead.extra && s.gzhead.extra.length) {\n          put_byte(s, s.gzhead.extra.length & 0xff);\n          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n        }\n        if (s.gzhead.hcrc) {\n          strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);\n        }\n        s.gzindex = 0;\n        s.status = EXTRA_STATE;\n      }\n    }\n    else // DEFLATE header\n    {\n      var header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;\n      var level_flags = -1;\n\n      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n        level_flags = 0;\n      } else if (s.level < 6) {\n        level_flags = 1;\n      } else if (s.level === 6) {\n        level_flags = 2;\n      } else {\n        level_flags = 3;\n      }\n      header |= (level_flags << 6);\n      if (s.strstart !== 0) { header |= PRESET_DICT; }\n      header += 31 - (header % 31);\n\n      s.status = BUSY_STATE;\n      putShortMSB(s, header);\n\n      /* Save the adler32 of the preset dictionary: */\n      if (s.strstart !== 0) {\n        putShortMSB(s, strm.adler >>> 16);\n        putShortMSB(s, strm.adler & 0xffff);\n      }\n      strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    }\n  }\n\n//#ifdef GZIP\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n\n      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            break;\n          }\n        }\n        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);\n        s.gzindex++;\n      }\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (s.gzindex === s.gzhead.extra.length) {\n        s.gzindex = 0;\n        s.status = NAME_STATE;\n      }\n    }\n    else {\n      s.status = NAME_STATE;\n    }\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.gzindex = 0;\n        s.status = COMMENT_STATE;\n      }\n    }\n    else {\n      s.status = COMMENT_STATE;\n    }\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.status = HCRC_STATE;\n      }\n    }\n    else {\n      s.status = HCRC_STATE;\n    }\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n      }\n      if (s.pending + 2 <= s.pending_buf_size) {\n        put_byte(s, strm.adler & 0xff);\n        put_byte(s, (strm.adler >> 8) & 0xff);\n        strm.adler = 0; //crc32(0L, Z_NULL, 0);\n        s.status = BUSY_STATE;\n      }\n    }\n    else {\n      s.status = BUSY_STATE;\n    }\n  }\n//#endif\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {\n    var bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :\n      (s.strategy === Z_RLE ? deflate_rle(s, flush) :\n        configuration_table[s.level].func(s, flush));\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        trees._tr_align(s);\n      }\n      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        trees._tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK;\n      }\n    }\n  }\n  //Assert(strm->avail_out > 0, \"bug2\");\n  //if (strm.avail_out <= 0) { throw new Error(\"bug2\");}\n\n  if (flush !== Z_FINISH) { return Z_OK; }\n  if (s.wrap <= 0) { return Z_STREAM_END; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK : Z_STREAM_END;\n}\n\nfunction deflateEnd(strm) {\n  var status;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  status = strm.state.status;\n  if (status !== INIT_STATE &&\n    status !== EXTRA_STATE &&\n    status !== NAME_STATE &&\n    status !== COMMENT_STATE &&\n    status !== HCRC_STATE &&\n    status !== BUSY_STATE &&\n    status !== FINISH_STATE\n  ) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;\n}\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nfunction deflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var s;\n  var str, n;\n  var wrap;\n  var avail;\n  var next;\n  var input;\n  var tmpDict;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n  wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    tmpDict = new utils.Buf8(s.w_size);\n    utils.arraySet(tmpDict, dictionary, dictLength - s.w_size, s.w_size, 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  avail = strm.avail_in;\n  next = strm.next_in;\n  input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    str = s.strstart;\n    n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK;\n}\n\n\nexports.deflateInit = deflateInit;\nexports.deflateInit2 = deflateInit2;\nexports.deflateReset = deflateReset;\nexports.deflateResetKeep = deflateResetKeep;\nexports.deflateSetHeader = deflateSetHeader;\nexports.deflate = deflate;\nexports.deflateEnd = deflateEnd;\nexports.deflateSetDictionary = deflateSetDictionary;\nexports.deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nexports.deflateBound = deflateBound;\nexports.deflateCopy = deflateCopy;\nexports.deflateParams = deflateParams;\nexports.deflatePending = deflatePending;\nexports.deflatePrime = deflatePrime;\nexports.deflateTune = deflateTune;\n*/\n","// String encode/decode helpers\n'use strict';\n\n\nvar utils = require('./common');\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nvar STR_APPLY_OK = true;\nvar STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, [ 0 ]); } catch (__) { STR_APPLY_OK = false; }\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nvar _utf8len = new utils.Buf8(256);\nfor (var q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nexports.string2buf = function (str) {\n  var buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new utils.Buf8(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper (used in 2 places)\nfunction buf2binstring(buf, len) {\n  // use fallback for big arrays to avoid stack overflow\n  if (len < 65537) {\n    if ((buf.subarray && STR_APPLY_UIA_OK) || (!buf.subarray && STR_APPLY_OK)) {\n      return String.fromCharCode.apply(null, utils.shrinkBuf(buf, len));\n    }\n  }\n\n  var result = '';\n  for (var i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n}\n\n\n// Convert byte array to binary string\nexports.buf2binstring = function (buf) {\n  return buf2binstring(buf, buf.length);\n};\n\n\n// Convert binary string (typed, when possible)\nexports.binstring2buf = function (str) {\n  var buf = new utils.Buf8(str.length);\n  for (var i = 0, len = buf.length; i < len; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n};\n\n\n// convert array to string\nexports.buf2string = function (buf, max) {\n  var i, out, c, c_len;\n  var len = max || buf.length;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  var utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nexports.utf8border = function (buf, max) {\n  var pos;\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nmodule.exports = ZStream;\n","'use strict';\n\n\nvar zlib_deflate = require('./zlib/deflate');\nvar utils        = require('./utils/common');\nvar strings      = require('./utils/strings');\nvar msg          = require('./zlib/messages');\nvar ZStream      = require('./zlib/zstream');\n\nvar toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nvar Z_NO_FLUSH      = 0;\nvar Z_FINISH        = 4;\n\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_SYNC_FLUSH    = 2;\n\nvar Z_DEFAULT_COMPRESSION = -1;\n\nvar Z_DEFAULT_STRATEGY    = 0;\n\nvar Z_DEFLATED  = 8;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array|Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param)  or if you\n * push a chunk with explicit flush (call [[Deflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate(options) {\n  if (!(this instanceof Deflate)) return new Deflate(options);\n\n  this.options = utils.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY,\n    to: ''\n  }, options || {});\n\n  var opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new ZStream();\n  this.strm.avail_out = 0;\n\n  var status = zlib_deflate.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  if (opt.header) {\n    zlib_deflate.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    var dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = zlib_deflate.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK) {\n      throw new Error(msg[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Deflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the compression context.\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * array format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate.prototype.push = function (data, mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var status, _mode;\n\n  if (this.ended) { return false; }\n\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? Z_FINISH : Z_NO_FLUSH);\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new utils.Buf8(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n    status = zlib_deflate.deflate(strm, _mode);    /* no bad return value */\n\n    if (status !== Z_STREAM_END && status !== Z_OK) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n    if (strm.avail_out === 0 || (strm.avail_in === 0 && (_mode === Z_FINISH || _mode === Z_SYNC_FLUSH))) {\n      if (this.options.to === 'string') {\n        this.onData(strings.buf2binstring(utils.shrinkBuf(strm.output, strm.next_out)));\n      } else {\n        this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n      }\n    }\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== Z_STREAM_END);\n\n  // Finalize on the last chunk.\n  if (_mode === Z_FINISH) {\n    status = zlib_deflate.deflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === Z_OK;\n  }\n\n  // callback interim results if Z_SYNC_FLUSH.\n  if (_mode === Z_SYNC_FLUSH) {\n    this.onEnd(Z_OK);\n    strm.avail_out = 0;\n    return true;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): output data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , data = Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate(input, options) {\n  var deflator = new Deflate(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || msg[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate(input, options);\n}\n\n\nexports.Deflate = Deflate;\nexports.deflate = deflate;\nexports.deflateRaw = deflateRaw;\nexports.gzip = gzip;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nvar BAD = 30;       /* got a data error -- remain here until reset */\nvar TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nmodule.exports = function inflate_fast(strm, start) {\n  var state;\n  var _in;                    /* local strm.input */\n  var last;                   /* have enough input while in < last */\n  var _out;                   /* local strm.output */\n  var beg;                    /* inflate()'s initial strm.output */\n  var end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  var dmax;                   /* maximum distance from zlib header */\n//#endif\n  var wsize;                  /* window size or zero if not using window */\n  var whave;                  /* valid bytes in the window */\n  var wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  var s_window;               /* allocated sliding window, if wsize != 0 */\n  var hold;                   /* local strm.hold */\n  var bits;                   /* local strm.bits */\n  var lcode;                  /* local strm.lencode */\n  var dcode;                  /* local strm.distcode */\n  var lmask;                  /* mask for first level of length codes */\n  var dmask;                  /* mask for first level of distance codes */\n  var here;                   /* retrieved table entry */\n  var op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  var len;                    /* match length, unused bytes */\n  var dist;                   /* match distance */\n  var from;                   /* where to copy match from */\n  var from_source;\n\n\n  var input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils = require('../utils/common');\n\nvar MAXBITS = 15;\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\nvar lbase = [ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n];\n\nvar lext = [ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n];\n\nvar dbase = [ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n];\n\nvar dext = [ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n];\n\nmodule.exports = function inflate_table(type, lens, lens_index, codes, table, table_index, work, opts)\n{\n  var bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  var len = 0;               /* a code's length in bits */\n  var sym = 0;               /* index of code symbols */\n  var min = 0, max = 0;          /* minimum and maximum code lengths */\n  var root = 0;              /* number of index bits for root table */\n  var curr = 0;              /* number of index bits for current table */\n  var drop = 0;              /* code bits to drop for sub-table */\n  var left = 0;                   /* number of prefix codes available */\n  var used = 0;              /* code entries in table used */\n  var huff = 0;              /* Huffman code */\n  var incr;              /* for incrementing code, index */\n  var fill;              /* index for replicating entries */\n  var low;               /* low bits for current root entry */\n  var mask;              /* mask for low root bits */\n  var next;             /* next available space in table */\n  var base = null;     /* base value table to use */\n  var base_index = 0;\n//  var shoextra;    /* extra bits table to use */\n  var end;                    /* use base and extra for symbol > end */\n  var count = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  var offs = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  var extra = null;\n  var extra_index = 0;\n\n  var here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES) {\n    base = extra = work;    /* dummy value--not used */\n    end = 19;\n\n  } else if (type === LENS) {\n    base = lbase;\n    base_index -= 257;\n    extra = lext;\n    extra_index -= 257;\n    end = 256;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    end = -1;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS && used > ENOUGH_LENS) ||\n    (type === DISTS && used > ENOUGH_DISTS)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] < end) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] > end) {\n      here_op = extra[extra_index + work[sym]];\n      here_val = base[base_index + work[sym]];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS && used > ENOUGH_LENS) ||\n        (type === DISTS && used > ENOUGH_DISTS)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils         = require('../utils/common');\nvar adler32       = require('./adler32');\nvar crc32         = require('./crc32');\nvar inflate_fast  = require('./inffast');\nvar inflate_table = require('./inftrees');\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\n//var Z_NO_FLUSH      = 0;\n//var Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\n//var Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\nvar Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\nvar Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nvar    HEAD = 1;       /* i: waiting for magic header */\nvar    FLAGS = 2;      /* i: waiting for method and flags (gzip) */\nvar    TIME = 3;       /* i: waiting for modification time (gzip) */\nvar    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */\nvar    EXLEN = 5;      /* i: waiting for extra length (gzip) */\nvar    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */\nvar    NAME = 7;       /* i: waiting for end of file name (gzip) */\nvar    COMMENT = 8;    /* i: waiting for end of comment (gzip) */\nvar    HCRC = 9;       /* i: waiting for header crc (gzip) */\nvar    DICTID = 10;    /* i: waiting for dictionary check value */\nvar    DICT = 11;      /* waiting for inflateSetDictionary() call */\nvar        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\nvar        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */\nvar        STORED = 14;    /* i: waiting for stored size (length and complement) */\nvar        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */\nvar        COPY = 16;      /* i/o: waiting for input or output to copy stored block */\nvar        TABLE = 17;     /* i: waiting for dynamic block table lengths */\nvar        LENLENS = 18;   /* i: waiting for code length code lengths */\nvar        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */\nvar            LEN_ = 20;      /* i: same as LEN below, but only first time in */\nvar            LEN = 21;       /* i: waiting for length/lit/eob code */\nvar            LENEXT = 22;    /* i: waiting for length extra bits */\nvar            DIST = 23;      /* i: waiting for distance code */\nvar            DISTEXT = 24;   /* i: waiting for distance extra bits */\nvar            MATCH = 25;     /* o: waiting for output space to copy string */\nvar            LIT = 26;       /* o: waiting for output space to write literal */\nvar    CHECK = 27;     /* i: waiting for 32-bit check value */\nvar    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */\nvar    DONE = 29;      /* finished check, done -- remain here until reset */\nvar    BAD = 30;       /* got a data error -- remain here until reset */\nvar    MEM = 31;       /* got an inflate() memory error -- remain here until reset */\nvar    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_WBITS = MAX_WBITS;\n\n\nfunction zswap32(q) {\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n}\n\n\nfunction InflateState() {\n  this.mode = 0;             /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib) */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new utils.Buf16(320); /* temporary storage for code lengths */\n  this.work = new utils.Buf16(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\nfunction inflateResetKeep(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new utils.Buf32(ENOUGH_LENS);\n  state.distcode = state.distdyn = new utils.Buf32(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK;\n}\n\nfunction inflateReset(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n}\n\nfunction inflateReset2(strm, windowBits) {\n  var wrap;\n  var state;\n\n  /* get the state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 1;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n}\n\nfunction inflateInit2(strm, windowBits) {\n  var ret;\n  var state;\n\n  if (!strm) { return Z_STREAM_ERROR; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.window = null/*Z_NULL*/;\n  ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n}\n\nfunction inflateInit(strm) {\n  return inflateInit2(strm, DEF_WBITS);\n}\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nvar virgin = true;\n\nvar lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\nfunction fixedtables(state) {\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    var sym;\n\n    lenfix = new utils.Buf32(512);\n    distfix = new utils.Buf32(32);\n\n    /* literal/length table */\n    sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n}\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nfunction updatewindow(strm, src, end, copy) {\n  var dist;\n  var state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new utils.Buf8(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    utils.arraySet(state.window, src, end - state.wsize, state.wsize, 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    utils.arraySet(state.window, src, end - copy, dist, state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      utils.arraySet(state.window, src, end - copy, copy, 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n}\n\nfunction inflate(strm, flush) {\n  var state;\n  var input, output;          // input/output buffers\n  var next;                   /* next input INDEX */\n  var put;                    /* next output INDEX */\n  var have, left;             /* available input and output */\n  var hold;                   /* bit buffer */\n  var bits;                   /* bits in bit buffer */\n  var _in, _out;              /* save starting available input and output */\n  var copy;                   /* number of stored or match bytes to copy */\n  var from;                   /* where to copy match bytes from */\n  var from_source;\n  var here = 0;               /* current decoding table entry */\n  var here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //var last;                   /* parent table entry */\n  var last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  var len;                    /* length to copy for repeats, bits to drop */\n  var ret;                    /* return code */\n  var hbuf = new utils.Buf8(4);    /* buffer for gzip header crc calculation */\n  var opts;\n\n  var n; // temporary var for NEED_BITS\n\n  var order = /* permutation of code lengths */\n    [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ];\n\n\n  if (!strm || !strm.state || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        state.flags = 0;           /* expect zlib header */\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        else if (len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n        state.dmax = 1 << len;\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if (state.flags & 0x0200) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Array(state.head.extra_len);\n              }\n              utils.arraySet(\n                state.head.extra,\n                input,\n                next,\n                // extra field is limited to 65536 bytes\n                // - no need for additional size check\n                copy,\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if (state.flags & 0x0200) {\n              state.check = crc32(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          utils.arraySet(output, input, next, copy, put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inflate_fast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if (_out) {\n            strm.adler = state.check =\n                /*UPDATE(state.check, put - _out, _out);*/\n                (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {\n      state.mode = MEM;\n      return Z_MEM_ERROR;\n    }\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if (state.wrap && _out) {\n    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n}\n\nfunction inflateEnd(strm) {\n\n  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  var state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK;\n}\n\nfunction inflateGetHeader(strm, head) {\n  var state;\n\n  /* check state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK;\n}\n\nfunction inflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var state;\n  var dictid;\n  var ret;\n\n  /* check state */\n  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK;\n}\n\nexports.inflateReset = inflateReset;\nexports.inflateReset2 = inflateReset2;\nexports.inflateResetKeep = inflateResetKeep;\nexports.inflateInit = inflateInit;\nexports.inflateInit2 = inflateInit2;\nexports.inflate = inflate;\nexports.inflateEnd = inflateEnd;\nexports.inflateGetHeader = inflateGetHeader;\nexports.inflateSetDictionary = inflateSetDictionary;\nexports.inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nexports.inflateCopy = inflateCopy;\nexports.inflateGetDictionary = inflateGetDictionary;\nexports.inflateMark = inflateMark;\nexports.inflatePrime = inflatePrime;\nexports.inflateSync = inflateSync;\nexports.inflateSyncPoint = inflateSyncPoint;\nexports.inflateUndermine = inflateUndermine;\n*/\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  //Z_MEM_ERROR:     -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nmodule.exports = GZheader;\n","'use strict';\n\n\nvar zlib_inflate = require('./zlib/inflate');\nvar utils        = require('./utils/common');\nvar strings      = require('./utils/strings');\nvar c            = require('./zlib/constants');\nvar msg          = require('./zlib/messages');\nvar ZStream      = require('./zlib/zstream');\nvar GZheader     = require('./zlib/gzheader');\n\nvar toString = Object.prototype.toString;\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param) or if you\n * push a chunk with explicit flush (call [[Inflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate(options) {\n  if (!(this instanceof Inflate)) return new Inflate(options);\n\n  this.options = utils.assign({\n    chunkSize: 16384,\n    windowBits: 0,\n    to: ''\n  }, options || {});\n\n  var opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new ZStream();\n  this.strm.avail_out = 0;\n\n  var status  = zlib_inflate.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== c.Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  this.header = new GZheader();\n\n  zlib_inflate.inflateGetHeader(this.strm, this.header);\n}\n\n/**\n * Inflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Inflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the decompression context.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate.prototype.push = function (data, mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var dictionary = this.options.dictionary;\n  var status, _mode;\n  var next_out_utf8, tail, utf8str;\n  var dict;\n\n  // Flag to properly process Z_BUF_ERROR on testing inflate call\n  // when we check that all output data was flushed.\n  var allowBufError = false;\n\n  if (this.ended) { return false; }\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? c.Z_FINISH : c.Z_NO_FLUSH);\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // Only binary strings can be decompressed on practice\n    strm.input = strings.binstring2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new utils.Buf8(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = zlib_inflate.inflate(strm, c.Z_NO_FLUSH);    /* no bad return value */\n\n    if (status === c.Z_NEED_DICT && dictionary) {\n      // Convert data if needed\n      if (typeof dictionary === 'string') {\n        dict = strings.string2buf(dictionary);\n      } else if (toString.call(dictionary) === '[object ArrayBuffer]') {\n        dict = new Uint8Array(dictionary);\n      } else {\n        dict = dictionary;\n      }\n\n      status = zlib_inflate.inflateSetDictionary(this.strm, dict);\n\n    }\n\n    if (status === c.Z_BUF_ERROR && allowBufError === true) {\n      status = c.Z_OK;\n      allowBufError = false;\n    }\n\n    if (status !== c.Z_STREAM_END && status !== c.Z_OK) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === c.Z_STREAM_END || (strm.avail_in === 0 && (_mode === c.Z_FINISH || _mode === c.Z_SYNC_FLUSH))) {\n\n        if (this.options.to === 'string') {\n\n          next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          tail = strm.next_out - next_out_utf8;\n          utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) { utils.arraySet(strm.output, strm.output, next_out_utf8, tail, 0); }\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n        }\n      }\n    }\n\n    // When no more input data, we should check that internal inflate buffers\n    // are flushed. The only way to do it when avail_out = 0 - run one more\n    // inflate pass. But if output data not exists, inflate return Z_BUF_ERROR.\n    // Here we set flag to process this error properly.\n    //\n    // NOTE. Deflate does not return error in this case and does not needs such\n    // logic.\n    if (strm.avail_in === 0 && strm.avail_out === 0) {\n      allowBufError = true;\n    }\n\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== c.Z_STREAM_END);\n\n  if (status === c.Z_STREAM_END) {\n    _mode = c.Z_FINISH;\n  }\n\n  // Finalize on the last chunk.\n  if (_mode === c.Z_FINISH) {\n    status = zlib_inflate.inflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === c.Z_OK;\n  }\n\n  // callback interim results if Z_SYNC_FLUSH.\n  if (_mode === c.Z_SYNC_FLUSH) {\n    this.onEnd(c.Z_OK);\n    strm.avail_out = 0;\n    return true;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): output data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === c.Z_OK) {\n    if (this.options.to === 'string') {\n      // Glue & convert here, until we teach pako to send\n      // utf8 aligned strings to onData\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , input = pako.deflate([1,2,3,4,5,6,7,8,9])\n *   , output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err)\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate(input, options) {\n  var inflator = new Inflate(options);\n\n  inflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) { throw inflator.msg || msg[inflator.err]; }\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nexports.Inflate = Inflate;\nexports.inflate = inflate;\nexports.inflateRaw = inflateRaw;\nexports.ungzip  = inflate;\n","// Top level file is just a mixin of submodules & constants\n'use strict';\n\nvar assign    = require('./lib/utils/common').assign;\n\nvar deflate   = require('./lib/deflate');\nvar inflate   = require('./lib/inflate');\nvar constants = require('./lib/zlib/constants');\n\nvar pako = {};\n\nassign(pako, deflate, inflate, constants);\n\nmodule.exports = pako;\n","/*\r\n Copyright 2013 Daniel Wirtz <dcode@dcode.io>\r\n Copyright 2009 The Closure Library Authors. All Rights Reserved.\r\n\r\n Licensed under the Apache License, Version 2.0 (the \"License\");\r\n you may not use this file except in compliance with the License.\r\n You may obtain a copy of the License at\r\n\r\n http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n Unless required by applicable law or agreed to in writing, software\r\n distributed under the License is distributed on an \"AS-IS\" BASIS,\r\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n See the License for the specific language governing permissions and\r\n limitations under the License.\r\n */\r\n\r\n/**\r\n * @license long.js (c) 2013 Daniel Wirtz <dcode@dcode.io>\r\n * Released under the Apache License, Version 2.0\r\n * see: https://github.com/dcodeIO/long.js for details\r\n */\r\n(function(global, factory) {\r\n\r\n    /* AMD */ if (typeof define === 'function' && define[\"amd\"])\r\n        define([], factory);\r\n    /* CommonJS */ else if (typeof require === 'function' && typeof module === \"object\" && module && module[\"exports\"])\r\n        module[\"exports\"] = factory();\r\n    /* Global */ else\r\n        (global[\"dcodeIO\"] = global[\"dcodeIO\"] || {})[\"Long\"] = factory();\r\n\r\n})(this, function() {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n     *  See the from* functions below for more convenient ways of constructing Longs.\r\n     * @exports Long\r\n     * @class A Long class for representing a 64 bit two's-complement integer value.\r\n     * @param {number} low The low (signed) 32 bits of the long\r\n     * @param {number} high The high (signed) 32 bits of the long\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @constructor\r\n     */\r\n    function Long(low, high, unsigned) {\r\n\r\n        /**\r\n         * The low 32 bits as a signed value.\r\n         * @type {number}\r\n         */\r\n        this.low = low | 0;\r\n\r\n        /**\r\n         * The high 32 bits as a signed value.\r\n         * @type {number}\r\n         */\r\n        this.high = high | 0;\r\n\r\n        /**\r\n         * Whether unsigned or not.\r\n         * @type {boolean}\r\n         */\r\n        this.unsigned = !!unsigned;\r\n    }\r\n\r\n    // The internal representation of a long is the two given signed, 32-bit values.\r\n    // We use 32-bit pieces because these are the size of integers on which\r\n    // Javascript performs bit-operations.  For operations like addition and\r\n    // multiplication, we split each number into 16 bit pieces, which can easily be\r\n    // multiplied within Javascript's floating-point representation without overflow\r\n    // or change in sign.\r\n    //\r\n    // In the algorithms below, we frequently reduce the negative case to the\r\n    // positive case by negating the input(s) and then post-processing the result.\r\n    // Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n    // (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n    // a positive number, it overflows back into a negative).  Not handling this\r\n    // case would often result in infinite recursion.\r\n    //\r\n    // Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n    // methods on which they depend.\r\n\r\n    /**\r\n     * An indicator used to reliably determine if an object is a Long or not.\r\n     * @type {boolean}\r\n     * @const\r\n     * @private\r\n     */\r\n    Long.prototype.__isLong__;\r\n\r\n    Object.defineProperty(Long.prototype, \"__isLong__\", {\r\n        value: true,\r\n        enumerable: false,\r\n        configurable: false\r\n    });\r\n\r\n    /**\r\n     * @function\r\n     * @param {*} obj Object\r\n     * @returns {boolean}\r\n     * @inner\r\n     */\r\n    function isLong(obj) {\r\n        return (obj && obj[\"__isLong__\"]) === true;\r\n    }\r\n\r\n    /**\r\n     * Tests if the specified object is a Long.\r\n     * @function\r\n     * @param {*} obj Object\r\n     * @returns {boolean}\r\n     */\r\n    Long.isLong = isLong;\r\n\r\n    /**\r\n     * A cache of the Long representations of small integer values.\r\n     * @type {!Object}\r\n     * @inner\r\n     */\r\n    var INT_CACHE = {};\r\n\r\n    /**\r\n     * A cache of the Long representations of small unsigned integer values.\r\n     * @type {!Object}\r\n     * @inner\r\n     */\r\n    var UINT_CACHE = {};\r\n\r\n    /**\r\n     * @param {number} value\r\n     * @param {boolean=} unsigned\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromInt(value, unsigned) {\r\n        var obj, cachedObj, cache;\r\n        if (unsigned) {\r\n            value >>>= 0;\r\n            if (cache = (0 <= value && value < 256)) {\r\n                cachedObj = UINT_CACHE[value];\r\n                if (cachedObj)\r\n                    return cachedObj;\r\n            }\r\n            obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n            if (cache)\r\n                UINT_CACHE[value] = obj;\r\n            return obj;\r\n        } else {\r\n            value |= 0;\r\n            if (cache = (-128 <= value && value < 128)) {\r\n                cachedObj = INT_CACHE[value];\r\n                if (cachedObj)\r\n                    return cachedObj;\r\n            }\r\n            obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n            if (cache)\r\n                INT_CACHE[value] = obj;\r\n            return obj;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns a Long representing the given 32 bit integer value.\r\n     * @function\r\n     * @param {number} value The 32 bit integer in question\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @returns {!Long} The corresponding Long value\r\n     */\r\n    Long.fromInt = fromInt;\r\n\r\n    /**\r\n     * @param {number} value\r\n     * @param {boolean=} unsigned\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromNumber(value, unsigned) {\r\n        if (isNaN(value) || !isFinite(value))\r\n            return unsigned ? UZERO : ZERO;\r\n        if (unsigned) {\r\n            if (value < 0)\r\n                return UZERO;\r\n            if (value >= TWO_PWR_64_DBL)\r\n                return MAX_UNSIGNED_VALUE;\r\n        } else {\r\n            if (value <= -TWO_PWR_63_DBL)\r\n                return MIN_VALUE;\r\n            if (value + 1 >= TWO_PWR_63_DBL)\r\n                return MAX_VALUE;\r\n        }\r\n        if (value < 0)\r\n            return fromNumber(-value, unsigned).neg();\r\n        return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n    }\r\n\r\n    /**\r\n     * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n     * @function\r\n     * @param {number} value The number in question\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @returns {!Long} The corresponding Long value\r\n     */\r\n    Long.fromNumber = fromNumber;\r\n\r\n    /**\r\n     * @param {number} lowBits\r\n     * @param {number} highBits\r\n     * @param {boolean=} unsigned\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromBits(lowBits, highBits, unsigned) {\r\n        return new Long(lowBits, highBits, unsigned);\r\n    }\r\n\r\n    /**\r\n     * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n     *  assumed to use 32 bits.\r\n     * @function\r\n     * @param {number} lowBits The low 32 bits\r\n     * @param {number} highBits The high 32 bits\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @returns {!Long} The corresponding Long value\r\n     */\r\n    Long.fromBits = fromBits;\r\n\r\n    /**\r\n     * @function\r\n     * @param {number} base\r\n     * @param {number} exponent\r\n     * @returns {number}\r\n     * @inner\r\n     */\r\n    var pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n    /**\r\n     * @param {string} str\r\n     * @param {(boolean|number)=} unsigned\r\n     * @param {number=} radix\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromString(str, unsigned, radix) {\r\n        if (str.length === 0)\r\n            throw Error('empty string');\r\n        if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n            return ZERO;\r\n        if (typeof unsigned === 'number') {\r\n            // For goog.math.long compatibility\r\n            radix = unsigned,\r\n            unsigned = false;\r\n        } else {\r\n            unsigned = !! unsigned;\r\n        }\r\n        radix = radix || 10;\r\n        if (radix < 2 || 36 < radix)\r\n            throw RangeError('radix');\r\n\r\n        var p;\r\n        if ((p = str.indexOf('-')) > 0)\r\n            throw Error('interior hyphen');\r\n        else if (p === 0) {\r\n            return fromString(str.substring(1), unsigned, radix).neg();\r\n        }\r\n\r\n        // Do several (8) digits each time through the loop, so as to\r\n        // minimize the calls to the very expensive emulated div.\r\n        var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n        var result = ZERO;\r\n        for (var i = 0; i < str.length; i += 8) {\r\n            var size = Math.min(8, str.length - i),\r\n                value = parseInt(str.substring(i, i + size), radix);\r\n            if (size < 8) {\r\n                var power = fromNumber(pow_dbl(radix, size));\r\n                result = result.mul(power).add(fromNumber(value));\r\n            } else {\r\n                result = result.mul(radixToPower);\r\n                result = result.add(fromNumber(value));\r\n            }\r\n        }\r\n        result.unsigned = unsigned;\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Returns a Long representation of the given string, written using the specified radix.\r\n     * @function\r\n     * @param {string} str The textual representation of the Long\r\n     * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n     * @returns {!Long} The corresponding Long value\r\n     */\r\n    Long.fromString = fromString;\r\n\r\n    /**\r\n     * @function\r\n     * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromValue(val) {\r\n        if (val /* is compatible */ instanceof Long)\r\n            return val;\r\n        if (typeof val === 'number')\r\n            return fromNumber(val);\r\n        if (typeof val === 'string')\r\n            return fromString(val);\r\n        // Throws for non-objects, converts non-instanceof Long:\r\n        return fromBits(val.low, val.high, val.unsigned);\r\n    }\r\n\r\n    /**\r\n     * Converts the specified value to a Long.\r\n     * @function\r\n     * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n     * @returns {!Long}\r\n     */\r\n    Long.fromValue = fromValue;\r\n\r\n    // NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n    // no runtime penalty for these.\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_16_DBL = 1 << 16;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_24_DBL = 1 << 24;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var ZERO = fromInt(0);\r\n\r\n    /**\r\n     * Signed zero.\r\n     * @type {!Long}\r\n     */\r\n    Long.ZERO = ZERO;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var UZERO = fromInt(0, true);\r\n\r\n    /**\r\n     * Unsigned zero.\r\n     * @type {!Long}\r\n     */\r\n    Long.UZERO = UZERO;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var ONE = fromInt(1);\r\n\r\n    /**\r\n     * Signed one.\r\n     * @type {!Long}\r\n     */\r\n    Long.ONE = ONE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var UONE = fromInt(1, true);\r\n\r\n    /**\r\n     * Unsigned one.\r\n     * @type {!Long}\r\n     */\r\n    Long.UONE = UONE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var NEG_ONE = fromInt(-1);\r\n\r\n    /**\r\n     * Signed negative one.\r\n     * @type {!Long}\r\n     */\r\n    Long.NEG_ONE = NEG_ONE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n    /**\r\n     * Maximum signed value.\r\n     * @type {!Long}\r\n     */\r\n    Long.MAX_VALUE = MAX_VALUE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n    /**\r\n     * Maximum unsigned value.\r\n     * @type {!Long}\r\n     */\r\n    Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n    /**\r\n     * Minimum signed value.\r\n     * @type {!Long}\r\n     */\r\n    Long.MIN_VALUE = MIN_VALUE;\r\n\r\n    /**\r\n     * @alias Long.prototype\r\n     * @inner\r\n     */\r\n    var LongPrototype = Long.prototype;\r\n\r\n    /**\r\n     * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n     * @returns {number}\r\n     */\r\n    LongPrototype.toInt = function toInt() {\r\n        return this.unsigned ? this.low >>> 0 : this.low;\r\n    };\r\n\r\n    /**\r\n     * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n     * @returns {number}\r\n     */\r\n    LongPrototype.toNumber = function toNumber() {\r\n        if (this.unsigned)\r\n            return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n        return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n    };\r\n\r\n    /**\r\n     * Converts the Long to a string written in the specified radix.\r\n     * @param {number=} radix Radix (2-36), defaults to 10\r\n     * @returns {string}\r\n     * @override\r\n     * @throws {RangeError} If `radix` is out of range\r\n     */\r\n    LongPrototype.toString = function toString(radix) {\r\n        radix = radix || 10;\r\n        if (radix < 2 || 36 < radix)\r\n            throw RangeError('radix');\r\n        if (this.isZero())\r\n            return '0';\r\n        if (this.isNegative()) { // Unsigned Longs are never negative\r\n            if (this.eq(MIN_VALUE)) {\r\n                // We need to change the Long value before it can be negated, so we remove\r\n                // the bottom-most digit in this base and then recurse to do the rest.\r\n                var radixLong = fromNumber(radix),\r\n                    div = this.div(radixLong),\r\n                    rem1 = div.mul(radixLong).sub(this);\r\n                return div.toString(radix) + rem1.toInt().toString(radix);\r\n            } else\r\n                return '-' + this.neg().toString(radix);\r\n        }\r\n\r\n        // Do several (6) digits each time through the loop, so as to\r\n        // minimize the calls to the very expensive emulated div.\r\n        var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n            rem = this;\r\n        var result = '';\r\n        while (true) {\r\n            var remDiv = rem.div(radixToPower),\r\n                intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n                digits = intval.toString(radix);\r\n            rem = remDiv;\r\n            if (rem.isZero())\r\n                return digits + result;\r\n            else {\r\n                while (digits.length < 6)\r\n                    digits = '0' + digits;\r\n                result = '' + digits + result;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Gets the high 32 bits as a signed integer.\r\n     * @returns {number} Signed high bits\r\n     */\r\n    LongPrototype.getHighBits = function getHighBits() {\r\n        return this.high;\r\n    };\r\n\r\n    /**\r\n     * Gets the high 32 bits as an unsigned integer.\r\n     * @returns {number} Unsigned high bits\r\n     */\r\n    LongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n        return this.high >>> 0;\r\n    };\r\n\r\n    /**\r\n     * Gets the low 32 bits as a signed integer.\r\n     * @returns {number} Signed low bits\r\n     */\r\n    LongPrototype.getLowBits = function getLowBits() {\r\n        return this.low;\r\n    };\r\n\r\n    /**\r\n     * Gets the low 32 bits as an unsigned integer.\r\n     * @returns {number} Unsigned low bits\r\n     */\r\n    LongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n        return this.low >>> 0;\r\n    };\r\n\r\n    /**\r\n     * Gets the number of bits needed to represent the absolute value of this Long.\r\n     * @returns {number}\r\n     */\r\n    LongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n        if (this.isNegative()) // Unsigned Longs are never negative\r\n            return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n        var val = this.high != 0 ? this.high : this.low;\r\n        for (var bit = 31; bit > 0; bit--)\r\n            if ((val & (1 << bit)) != 0)\r\n                break;\r\n        return this.high != 0 ? bit + 33 : bit + 1;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value equals zero.\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isZero = function isZero() {\r\n        return this.high === 0 && this.low === 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is negative.\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isNegative = function isNegative() {\r\n        return !this.unsigned && this.high < 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is positive.\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isPositive = function isPositive() {\r\n        return this.unsigned || this.high >= 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is odd.\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isOdd = function isOdd() {\r\n        return (this.low & 1) === 1;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is even.\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isEven = function isEven() {\r\n        return (this.low & 1) === 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value equals the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.equals = function equals(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n            return false;\r\n        return this.high === other.high && this.low === other.low;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.eq = LongPrototype.equals;\r\n\r\n    /**\r\n     * Tests if this Long's value differs from the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.notEquals = function notEquals(other) {\r\n        return !this.eq(/* validates */ other);\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.neq = LongPrototype.notEquals;\r\n\r\n    /**\r\n     * Tests if this Long's value is less than the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.lessThan = function lessThan(other) {\r\n        return this.comp(/* validates */ other) < 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.lt = LongPrototype.lessThan;\r\n\r\n    /**\r\n     * Tests if this Long's value is less than or equal the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n        return this.comp(/* validates */ other) <= 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.greaterThan = function greaterThan(other) {\r\n        return this.comp(/* validates */ other) > 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than or equal the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n        return this.comp(/* validates */ other) >= 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n    /**\r\n     * Compares this Long's value with the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n     *  if the given one is greater\r\n     */\r\n    LongPrototype.compare = function compare(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        if (this.eq(other))\r\n            return 0;\r\n        var thisNeg = this.isNegative(),\r\n            otherNeg = other.isNegative();\r\n        if (thisNeg && !otherNeg)\r\n            return -1;\r\n        if (!thisNeg && otherNeg)\r\n            return 1;\r\n        // At this point the sign bits are the same\r\n        if (!this.unsigned)\r\n            return this.sub(other).isNegative() ? -1 : 1;\r\n        // Both are positive if at least one is unsigned\r\n        return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n    };\r\n\r\n    /**\r\n     * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n     *  if the given one is greater\r\n     */\r\n    LongPrototype.comp = LongPrototype.compare;\r\n\r\n    /**\r\n     * Negates this Long's value.\r\n     * @returns {!Long} Negated Long\r\n     */\r\n    LongPrototype.negate = function negate() {\r\n        if (!this.unsigned && this.eq(MIN_VALUE))\r\n            return MIN_VALUE;\r\n        return this.not().add(ONE);\r\n    };\r\n\r\n    /**\r\n     * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n     * @function\r\n     * @returns {!Long} Negated Long\r\n     */\r\n    LongPrototype.neg = LongPrototype.negate;\r\n\r\n    /**\r\n     * Returns the sum of this and the specified Long.\r\n     * @param {!Long|number|string} addend Addend\r\n     * @returns {!Long} Sum\r\n     */\r\n    LongPrototype.add = function add(addend) {\r\n        if (!isLong(addend))\r\n            addend = fromValue(addend);\r\n\r\n        // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n        var a48 = this.high >>> 16;\r\n        var a32 = this.high & 0xFFFF;\r\n        var a16 = this.low >>> 16;\r\n        var a00 = this.low & 0xFFFF;\r\n\r\n        var b48 = addend.high >>> 16;\r\n        var b32 = addend.high & 0xFFFF;\r\n        var b16 = addend.low >>> 16;\r\n        var b00 = addend.low & 0xFFFF;\r\n\r\n        var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n        c00 += a00 + b00;\r\n        c16 += c00 >>> 16;\r\n        c00 &= 0xFFFF;\r\n        c16 += a16 + b16;\r\n        c32 += c16 >>> 16;\r\n        c16 &= 0xFFFF;\r\n        c32 += a32 + b32;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c48 += a48 + b48;\r\n        c48 &= 0xFFFF;\r\n        return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the difference of this and the specified Long.\r\n     * @param {!Long|number|string} subtrahend Subtrahend\r\n     * @returns {!Long} Difference\r\n     */\r\n    LongPrototype.subtract = function subtract(subtrahend) {\r\n        if (!isLong(subtrahend))\r\n            subtrahend = fromValue(subtrahend);\r\n        return this.add(subtrahend.neg());\r\n    };\r\n\r\n    /**\r\n     * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n     * @function\r\n     * @param {!Long|number|string} subtrahend Subtrahend\r\n     * @returns {!Long} Difference\r\n     */\r\n    LongPrototype.sub = LongPrototype.subtract;\r\n\r\n    /**\r\n     * Returns the product of this and the specified Long.\r\n     * @param {!Long|number|string} multiplier Multiplier\r\n     * @returns {!Long} Product\r\n     */\r\n    LongPrototype.multiply = function multiply(multiplier) {\r\n        if (this.isZero())\r\n            return ZERO;\r\n        if (!isLong(multiplier))\r\n            multiplier = fromValue(multiplier);\r\n        if (multiplier.isZero())\r\n            return ZERO;\r\n        if (this.eq(MIN_VALUE))\r\n            return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n        if (multiplier.eq(MIN_VALUE))\r\n            return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n        if (this.isNegative()) {\r\n            if (multiplier.isNegative())\r\n                return this.neg().mul(multiplier.neg());\r\n            else\r\n                return this.neg().mul(multiplier).neg();\r\n        } else if (multiplier.isNegative())\r\n            return this.mul(multiplier.neg()).neg();\r\n\r\n        // If both longs are small, use float multiplication\r\n        if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n            return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n        // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n        // We can skip products that would overflow.\r\n\r\n        var a48 = this.high >>> 16;\r\n        var a32 = this.high & 0xFFFF;\r\n        var a16 = this.low >>> 16;\r\n        var a00 = this.low & 0xFFFF;\r\n\r\n        var b48 = multiplier.high >>> 16;\r\n        var b32 = multiplier.high & 0xFFFF;\r\n        var b16 = multiplier.low >>> 16;\r\n        var b00 = multiplier.low & 0xFFFF;\r\n\r\n        var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n        c00 += a00 * b00;\r\n        c16 += c00 >>> 16;\r\n        c00 &= 0xFFFF;\r\n        c16 += a16 * b00;\r\n        c32 += c16 >>> 16;\r\n        c16 &= 0xFFFF;\r\n        c16 += a00 * b16;\r\n        c32 += c16 >>> 16;\r\n        c16 &= 0xFFFF;\r\n        c32 += a32 * b00;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c32 += a16 * b16;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c32 += a00 * b32;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n        c48 &= 0xFFFF;\r\n        return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n     * @function\r\n     * @param {!Long|number|string} multiplier Multiplier\r\n     * @returns {!Long} Product\r\n     */\r\n    LongPrototype.mul = LongPrototype.multiply;\r\n\r\n    /**\r\n     * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n     *  unsigned if this Long is unsigned.\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Quotient\r\n     */\r\n    LongPrototype.divide = function divide(divisor) {\r\n        if (!isLong(divisor))\r\n            divisor = fromValue(divisor);\r\n        if (divisor.isZero())\r\n            throw Error('division by zero');\r\n        if (this.isZero())\r\n            return this.unsigned ? UZERO : ZERO;\r\n        var approx, rem, res;\r\n        if (!this.unsigned) {\r\n            // This section is only relevant for signed longs and is derived from the\r\n            // closure library as a whole.\r\n            if (this.eq(MIN_VALUE)) {\r\n                if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                    return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n                else if (divisor.eq(MIN_VALUE))\r\n                    return ONE;\r\n                else {\r\n                    // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                    var halfThis = this.shr(1);\r\n                    approx = halfThis.div(divisor).shl(1);\r\n                    if (approx.eq(ZERO)) {\r\n                        return divisor.isNegative() ? ONE : NEG_ONE;\r\n                    } else {\r\n                        rem = this.sub(divisor.mul(approx));\r\n                        res = approx.add(rem.div(divisor));\r\n                        return res;\r\n                    }\r\n                }\r\n            } else if (divisor.eq(MIN_VALUE))\r\n                return this.unsigned ? UZERO : ZERO;\r\n            if (this.isNegative()) {\r\n                if (divisor.isNegative())\r\n                    return this.neg().div(divisor.neg());\r\n                return this.neg().div(divisor).neg();\r\n            } else if (divisor.isNegative())\r\n                return this.div(divisor.neg()).neg();\r\n            res = ZERO;\r\n        } else {\r\n            // The algorithm below has not been made for unsigned longs. It's therefore\r\n            // required to take special care of the MSB prior to running it.\r\n            if (!divisor.unsigned)\r\n                divisor = divisor.toUnsigned();\r\n            if (divisor.gt(this))\r\n                return UZERO;\r\n            if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n                return UONE;\r\n            res = UZERO;\r\n        }\r\n\r\n        // Repeat the following until the remainder is less than other:  find a\r\n        // floating-point that approximates remainder / other *from below*, add this\r\n        // into the result, and subtract it from the remainder.  It is critical that\r\n        // the approximate value is less than or equal to the real value so that the\r\n        // remainder never becomes negative.\r\n        rem = this;\r\n        while (rem.gte(divisor)) {\r\n            // Approximate the result of division. This may be a little greater or\r\n            // smaller than the actual value.\r\n            approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n            // We will tweak the approximate result by changing it in the 48-th digit or\r\n            // the smallest non-fractional digit, whichever is larger.\r\n            var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n                delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n            // Decrease the approximation until it is smaller than the remainder.  Note\r\n            // that if it is too large, the product overflows and is negative.\r\n                approxRes = fromNumber(approx),\r\n                approxRem = approxRes.mul(divisor);\r\n            while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n                approx -= delta;\r\n                approxRes = fromNumber(approx, this.unsigned);\r\n                approxRem = approxRes.mul(divisor);\r\n            }\r\n\r\n            // We know the answer can't be zero... and actually, zero would cause\r\n            // infinite recursion since we would make no progress.\r\n            if (approxRes.isZero())\r\n                approxRes = ONE;\r\n\r\n            res = res.add(approxRes);\r\n            rem = rem.sub(approxRem);\r\n        }\r\n        return res;\r\n    };\r\n\r\n    /**\r\n     * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n     * @function\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Quotient\r\n     */\r\n    LongPrototype.div = LongPrototype.divide;\r\n\r\n    /**\r\n     * Returns this Long modulo the specified.\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Remainder\r\n     */\r\n    LongPrototype.modulo = function modulo(divisor) {\r\n        if (!isLong(divisor))\r\n            divisor = fromValue(divisor);\r\n        return this.sub(this.div(divisor).mul(divisor));\r\n    };\r\n\r\n    /**\r\n     * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n     * @function\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Remainder\r\n     */\r\n    LongPrototype.mod = LongPrototype.modulo;\r\n\r\n    /**\r\n     * Returns the bitwise NOT of this Long.\r\n     * @returns {!Long}\r\n     */\r\n    LongPrototype.not = function not() {\r\n        return fromBits(~this.low, ~this.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the bitwise AND of this Long and the specified.\r\n     * @param {!Long|number|string} other Other Long\r\n     * @returns {!Long}\r\n     */\r\n    LongPrototype.and = function and(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the bitwise OR of this Long and the specified.\r\n     * @param {!Long|number|string} other Other Long\r\n     * @returns {!Long}\r\n     */\r\n    LongPrototype.or = function or(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the bitwise XOR of this Long and the given one.\r\n     * @param {!Long|number|string} other Other Long\r\n     * @returns {!Long}\r\n     */\r\n    LongPrototype.xor = function xor(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits shifted to the left by the given amount.\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n        if (isLong(numBits))\r\n            numBits = numBits.toInt();\r\n        if ((numBits &= 63) === 0)\r\n            return this;\r\n        else if (numBits < 32)\r\n            return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n        else\r\n            return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n     * @function\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n    /**\r\n     * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shiftRight = function shiftRight(numBits) {\r\n        if (isLong(numBits))\r\n            numBits = numBits.toInt();\r\n        if ((numBits &= 63) === 0)\r\n            return this;\r\n        else if (numBits < 32)\r\n            return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n        else\r\n            return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n     * @function\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n    /**\r\n     * Returns this Long with bits logically shifted to the right by the given amount.\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n        if (isLong(numBits))\r\n            numBits = numBits.toInt();\r\n        numBits &= 63;\r\n        if (numBits === 0)\r\n            return this;\r\n        else {\r\n            var high = this.high;\r\n            if (numBits < 32) {\r\n                var low = this.low;\r\n                return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n            } else if (numBits === 32)\r\n                return fromBits(high, 0, this.unsigned);\r\n            else\r\n                return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n     * @function\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n    /**\r\n     * Converts this Long to signed.\r\n     * @returns {!Long} Signed long\r\n     */\r\n    LongPrototype.toSigned = function toSigned() {\r\n        if (!this.unsigned)\r\n            return this;\r\n        return fromBits(this.low, this.high, false);\r\n    };\r\n\r\n    /**\r\n     * Converts this Long to unsigned.\r\n     * @returns {!Long} Unsigned long\r\n     */\r\n    LongPrototype.toUnsigned = function toUnsigned() {\r\n        if (this.unsigned)\r\n            return this;\r\n        return fromBits(this.low, this.high, true);\r\n    };\r\n\r\n    /**\r\n     * Converts this Long to its byte representation.\r\n     * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n     * @returns {!Array.<number>} Byte representation\r\n     */\r\n    LongPrototype.toBytes = function(le) {\r\n        return le ? this.toBytesLE() : this.toBytesBE();\r\n    }\r\n\r\n    /**\r\n     * Converts this Long to its little endian byte representation.\r\n     * @returns {!Array.<number>} Little endian byte representation\r\n     */\r\n    LongPrototype.toBytesLE = function() {\r\n        var hi = this.high,\r\n            lo = this.low;\r\n        return [\r\n             lo         & 0xff,\r\n            (lo >>>  8) & 0xff,\r\n            (lo >>> 16) & 0xff,\r\n            (lo >>> 24) & 0xff,\r\n             hi         & 0xff,\r\n            (hi >>>  8) & 0xff,\r\n            (hi >>> 16) & 0xff,\r\n            (hi >>> 24) & 0xff\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * Converts this Long to its big endian byte representation.\r\n     * @returns {!Array.<number>} Big endian byte representation\r\n     */\r\n    LongPrototype.toBytesBE = function() {\r\n        var hi = this.high,\r\n            lo = this.low;\r\n        return [\r\n            (hi >>> 24) & 0xff,\r\n            (hi >>> 16) & 0xff,\r\n            (hi >>>  8) & 0xff,\r\n             hi         & 0xff,\r\n            (lo >>> 24) & 0xff,\r\n            (lo >>> 16) & 0xff,\r\n            (lo >>>  8) & 0xff,\r\n             lo         & 0xff\r\n        ];\r\n    }\r\n\r\n    return Long;\r\n});\r\n","const crypto = require(\"crypto\")\n\nexport function randomBytes(length: number): Promise<Uint8Array> {\n  return new Promise((resolve, reject) => {\n    // Buffers are Uint8Arrays, so you just need to access its ArrayBuffer. This is O(1):\n    crypto.randomBytes(length, (err: any, buffer: any) => {\n      if (err) reject(err)\n      else resolve(Uint8Array.from(buffer))\n    })\n  })\n}\n\nexport interface RandomUint8ArrayProvider {\n  generate(length: number): Promise<Uint8Array>\n}\n\nexport function setRandomSource(source: RandomUint8ArrayProvider) {\n  // do nothing, only supported when run as UMD and in react-native\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2017 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\nimport {\n  byteArrayToHexString,\n  byteArrayToShortArray,\n  byteArrayToString,\n  byteArrayToWordArray,\n  hexStringToByteArray,\n  shortArrayToByteArray,\n  shortArrayToHexString,\n  stringToByteArray,\n  stringToHexString,\n  wordArrayToByteArray\n} from \"./converters\"\nimport Big from \"big.js\"\nimport pako from \"pako\"\nimport Long from \"long\"\nimport { randomBytes } from \"./random-bytes\"\n\nvar _hash = {\n  init: SHA256_init,\n  update: SHA256_write,\n  getBytes: SHA256_finalize\n}\n\nexport var SHA256 = _hash\n\nexport function getPublicKeyFromPrivateKey(privateKeyHex: string) {\n  var secretPhraseBytes = hexStringToByteArray(privateKeyHex)\n  var digest = simpleHash(secretPhraseBytes)\n  return byteArrayToHexString(curve25519.keygen(digest).p)\n}\n\nexport function random8Values(len: number): Promise<Uint8Array> {\n  return randomBytes(len)\n}\n\nexport function random16Values(len: number): Promise<Uint16Array> {\n  return randomBytes(len * 2).then(bytes => new Uint16Array(bytes.buffer))\n}\n\nexport function random32Values(len: number): Promise<Uint32Array> {\n  return randomBytes(len * 4).then(bytes => new Uint32Array(bytes.buffer))\n}\n\nfunction simpleHash(message: any) {\n  _hash.init()\n  _hash.update(message)\n  return _hash.getBytes()\n}\n\n/**\n * Calculates a SHA256 hash from a string.\n *\n * @param inputString String (regular UTF-8 string)\n * @returns Hash as HEX String\n */\nexport function calculateStringHash(inputString: string) {\n  var hexString = stringToHexString(inputString)\n  var bytes = hexStringToByteArray(hexString)\n  var hashBytes = simpleHash(bytes)\n  return byteArrayToHexString(hashBytes)\n}\n\nexport function calculateHashBytes(bytes: ArrayBuffer[]) {\n  _hash.init()\n  bytes.forEach(b => _hash.update(b))\n  return _hash.getBytes()\n}\n\n/**\n * @param byteArray ByteArray\n * @param startIndex Int\n * @returns Big\n */\nexport function byteArrayToBigInteger(byteArray: any, startIndex?: number) {\n  var value = new Big(\"0\")\n  var temp1, temp2\n  for (var i = byteArray.length - 1; i >= 0; i--) {\n    temp1 = value.times(new Big(\"256\"))\n    temp2 = temp1.plus(new Big(byteArray[i].toString(10)))\n    value = temp2\n  }\n  return value\n}\n\n/**\n * @param unsignedTransaction hex-string\n * @param signature hex-string\n * @returns hex-string\n */\nexport function calculateFullHash(unsignedTransaction: string, signature: string): string {\n  var unsignedTransactionBytes = hexStringToByteArray(unsignedTransaction)\n  var signatureBytes = hexStringToByteArray(signature)\n  var signatureHash = simpleHash(signatureBytes)\n\n  _hash.init()\n  _hash.update(unsignedTransactionBytes)\n  _hash.update(signatureHash)\n  var fullHash = _hash.getBytes()\n  return byteArrayToHexString(fullHash)\n}\n\n/**\n * @param fullnameUTF8 UTF-8 user name\n * @returns hex-string\n */\nexport function fullNameToHash(fullNameUTF8: string): string {\n  return _fullNameToBigInteger(stringToByteArray(fullNameUTF8))\n}\n\nexport function fullNameToLong(fullName: number[]): Long {\n  return Long.fromString(_fullNameToBigInteger(fullName).toString())\n}\n\nfunction _fullNameToBigInteger(fullName: number[]): string {\n  _hash.init()\n  _hash.update(fullName)\n  var slice = hexStringToByteArray(byteArrayToHexString(_hash.getBytes())).slice(0, 8)\n  return byteArrayToBigInteger(slice).toString()\n}\n\n/**\n * @param fullHashHex hex-string\n * @returns string\n */\nexport function calculateTransactionId(fullHashHex: string): string {\n  var slice = hexStringToByteArray(fullHashHex).slice(0, 8)\n  var transactionId = byteArrayToBigInteger(slice).toString()\n  return transactionId\n}\n\n/**\n * Turns a secretphrase into a public key\n * @param secretPhrase String\n * @returns HEX string\n */\nexport function secretPhraseToPublicKey(secretPhrase: string): string {\n  var secretHex = stringToHexString(secretPhrase)\n  var secretPhraseBytes = hexStringToByteArray(secretHex)\n  var digest = simpleHash(secretPhraseBytes)\n  return byteArrayToHexString(curve25519.keygen(digest).p)\n}\n\n/**\n * ..\n * @param secretPhrase Ascii String\n * @returns hex-string\n */\nexport function getPrivateKey(secretPhrase: string) {\n  SHA256_init()\n  SHA256_write(stringToByteArray(secretPhrase))\n  return shortArrayToHexString(curve25519_clamp(byteArrayToShortArray(SHA256_finalize())))\n}\n\n/**\n * @param secretPhrase Ascii String\n * @returns String\n */\nexport function getAccountId(secretPhrase: string) {\n  var publicKey = this.secretPhraseToPublicKey(secretPhrase)\n  return this.getAccountIdFromPublicKey(publicKey)\n}\n\n/**\n * @param secretPhrase Hex String\n * @returns String\n */\nexport function getAccountIdFromPublicKey(publicKey: string) {\n  _hash.init()\n  _hash.update(hexStringToByteArray(publicKey))\n\n  var account = _hash.getBytes()\n  var slice = hexStringToByteArray(byteArrayToHexString(account)).slice(0, 8)\n  return byteArrayToBigInteger(slice).toString()\n}\n\n/**\n * TODO pass secretphrase as string instead of HEX string, convert to\n * hex string ourselves.\n *\n * @param message HEX String\n * @param secretPhrase Hex String\n * @returns Hex String\n */\nexport function signBytes(message: string, secretPhrase: string) {\n  var messageBytes = hexStringToByteArray(message)\n  var secretPhraseBytes = hexStringToByteArray(secretPhrase)\n\n  var digest = simpleHash(secretPhraseBytes)\n  var s = curve25519.keygen(digest).s\n  var m = simpleHash(messageBytes)\n\n  _hash.init()\n  _hash.update(m)\n  _hash.update(s)\n  var x = _hash.getBytes()\n\n  var y = curve25519.keygen(x).p\n\n  _hash.init()\n  _hash.update(m)\n  _hash.update(y)\n  var h = _hash.getBytes()\n\n  var v = curve25519.sign(h, x, s)\n  if (v) return byteArrayToHexString(v.concat(h))\n}\n\n/**\n * ...\n * @param signature     Hex String\n * @param message       Hex String\n * @param publicKey     Hex String\n * @returns Boolean\n */\nexport function verifyBytes(signature: string, message: string, publicKey: string): boolean {\n  var signatureBytes = hexStringToByteArray(signature)\n  var messageBytes = hexStringToByteArray(message)\n  var publicKeyBytes = hexStringToByteArray(publicKey)\n  var v = signatureBytes.slice(0, 32)\n  var h = signatureBytes.slice(32)\n  var y = curve25519.verify(v, h, publicKeyBytes)\n\n  var m = simpleHash(messageBytes)\n\n  _hash.init()\n  _hash.update(m)\n  _hash.update(y)\n  var h2 = _hash.getBytes()\n\n  return areByteArraysEqual(h, h2)\n}\n\nfunction areByteArraysEqual(bytes1: Array<number>, bytes2: Array<number>): boolean {\n  if (bytes1.length !== bytes2.length) {\n    return false\n  }\n  for (var i = 0; i < bytes1.length; ++i) {\n    if (bytes1[i] !== bytes2[i]) return false\n  }\n  return true\n}\n\nexport interface IEncryptOptions {\n  /* Recipient account id */\n  account?: string\n\n  /* Recipient public key */\n  publicKey?: Array<number>\n\n  /* Private key to decrypt messages to self */\n  privateKey?: Array<number>\n\n  /* Shared key to encrypt messages to other account */\n  sharedKey?: Array<number>\n\n  /* Uint8Array */\n  nonce?: any\n}\n\n/**\n * @param message String\n * @param options Object {\n *    account: String,    // recipient account id\n *    publicKey: String,  // recipient public key\n * }\n * @param secretPhrase String\n * @returns { message: String, nonce: String }\n */\nexport function encryptNote(\n  message: string,\n  options: IEncryptOptions,\n  secretPhrase: string,\n  uncompressed?: boolean\n): Promise<{ message: string; nonce: string }> {\n  if (!options.sharedKey) {\n    if (!options.privateKey) {\n      options.privateKey = hexStringToByteArray(getPrivateKey(secretPhrase))\n    }\n    if (!options.publicKey) {\n      throw new Error(\"Missing publicKey argument\")\n    }\n  }\n  return encryptData(stringToByteArray(message), options, uncompressed).then(encrypted => {\n    return {\n      message: byteArrayToHexString(encrypted.data),\n      nonce: byteArrayToHexString(<any>encrypted.nonce)\n    }\n  })\n}\n\n/**\n * @param message Byte Array\n * @param options Object {\n *    account: String,    // recipient account id\n *    publicKey: String,  // recipient public key\n * }\n * @param secretPhrase String\n * @returns { message: String, nonce: String }\n */\nexport function encryptBinaryNote(\n  message: Array<number>,\n  options: IEncryptOptions,\n  secretPhrase: string,\n  uncompressed?: boolean\n): Promise<{ nonce: string; message: string }> {\n  if (!options.sharedKey) {\n    if (!options.privateKey) {\n      options.privateKey = hexStringToByteArray(getPrivateKey(secretPhrase))\n    }\n    if (!options.publicKey) {\n      throw new Error(\"Missing publicKey argument\")\n    }\n  }\n  return encryptData(message, options, uncompressed).then(encrypted => {\n    return {\n      message: byteArrayToHexString(encrypted.data),\n      nonce: byteArrayToHexString(<any>encrypted.nonce)\n    }\n  })\n}\n\n/**\n * @param key1 ByteArray\n * @param key2 ByteArray\n * @returns ByteArray\n */\nfunction getSharedKey(key1: any, key2: any) {\n  return shortArrayToByteArray(\n    curve25519_(byteArrayToShortArray(key1), byteArrayToShortArray(key2), null)\n  )\n}\n\nfunction encryptData(\n  plaintext: Array<number>,\n  options: IEncryptOptions,\n  uncompressed?: boolean\n): Promise<{ nonce: Uint8Array; data: any[] }> {\n  return randomBytes(32)\n    .then(bytes => {\n      if (!options.sharedKey) {\n        options.sharedKey = getSharedKey(options.privateKey, options.publicKey)\n      }\n      options.nonce = bytes\n\n      var compressedPlaintext = uncompressed\n        ? new Uint8Array(plaintext)\n        : pako.gzip(new Uint8Array(plaintext))\n\n      return aesEncrypt(<any>compressedPlaintext, options)\n    })\n    .then(data => {\n      return {\n        nonce: options.nonce,\n        data: data\n      }\n    })\n}\n\nfunction aesEncrypt(plaintext: Array<number>, options: IEncryptOptions): Promise<number[]> {\n  return randomBytes(16).then(bytes => {\n    var text = byteArrayToWordArray(plaintext)\n    var sharedKey = options.sharedKey\n      ? options.sharedKey.slice(0)\n      : getSharedKey(options.privateKey, options.publicKey)\n\n    for (var i = 0; i < 32; i++) {\n      sharedKey[i] ^= options.nonce[i]\n    }\n\n    var tmp: any = bytes\n    var key = CryptoJS.SHA256(byteArrayToWordArray(sharedKey))\n    var iv = byteArrayToWordArray(tmp)\n    var encrypted = CryptoJS.AES.encrypt(text, key, {\n      iv: iv\n    })\n\n    var ivOut = wordArrayToByteArray(encrypted.iv)\n    var ciphertextOut = wordArrayToByteArray(encrypted.ciphertext)\n    return ivOut.concat(ciphertextOut)\n  })\n}\n\nexport interface IEncryptedMessage {\n  isText: boolean\n  data: string // hex string\n  nonce: string // hex string\n}\n\nexport function encryptMessage(\n  message: string,\n  publicKey: string,\n  secretPhrase: string,\n  uncompressed?: boolean\n): Promise<IEncryptedMessage> {\n  var options: IEncryptOptions = {\n    account: getAccountIdFromPublicKey(publicKey),\n    publicKey: hexStringToByteArray(publicKey)\n  }\n  return encryptNote(message, options, secretPhrase, uncompressed).then(encrypted => {\n    return {\n      isText: true,\n      data: encrypted.message,\n      nonce: encrypted.nonce\n    }\n  })\n}\n\nexport function decryptMessage(\n  data: string,\n  nonce: string,\n  publicKey: string,\n  secretPhrase: string,\n  uncompressed?: boolean\n): string {\n  var privateKey = hexStringToByteArray(getPrivateKey(secretPhrase))\n  var publicKeyBytes = hexStringToByteArray(publicKey)\n  var sharedKey = getSharedKey(privateKey, publicKeyBytes)\n  var dataBytes = hexStringToByteArray(data)\n  var nonceBytes = hexStringToByteArray(nonce)\n  try {\n    return decryptData(\n      dataBytes,\n      {\n        privateKey: privateKey,\n        publicKey: publicKeyBytes,\n        nonce: nonceBytes,\n        sharedKey: sharedKey\n      },\n      uncompressed\n    )\n  } catch (e) {\n    if (e instanceof RangeError || e == \"incorrect header check\") {\n      console.error(\"Managed Exception: \" + e)\n\n      return decryptData(\n        dataBytes,\n        {\n          privateKey: privateKey,\n          publicKey: publicKeyBytes,\n          nonce: nonceBytes,\n          sharedKey: sharedKey\n        },\n        !uncompressed\n      )\n    }\n    throw e\n  }\n}\n\nfunction decryptData(data: any, options: any, uncompressed?: boolean) {\n  var compressedPlaintext = aesDecrypt(data, options)\n  var binData = new Uint8Array(compressedPlaintext)\n  var data_ = uncompressed ? binData : pako.inflate(binData)\n  return byteArrayToString(<any>data_)\n}\n\nfunction aesDecrypt(ivCiphertext: any, options: any) {\n  if (ivCiphertext.length < 16 || ivCiphertext.length % 16 != 0) {\n    throw { name: \"invalid ciphertext\" }\n  }\n\n  var iv = byteArrayToWordArray(ivCiphertext.slice(0, 16))\n  var ciphertext = byteArrayToWordArray(ivCiphertext.slice(16))\n  var sharedKey = options.sharedKey.slice(0) //clone\n  for (var i = 0; i < 32; i++) {\n    sharedKey[i] ^= options.nonce[i]\n  }\n\n  var key = CryptoJS.SHA256(byteArrayToWordArray(sharedKey))\n  var encrypted = CryptoJS.lib.CipherParams.create({\n    ciphertext: ciphertext,\n    iv: iv,\n    key: key\n  })\n  var decrypted = CryptoJS.AES.decrypt(encrypted, key, {\n    iv: iv\n  })\n  var plaintext = wordArrayToByteArray(decrypted)\n  return plaintext\n}\n\nexport class PassphraseEncryptedMessage {\n  ciphertext: string\n  salt: string\n  iv: string\n  HMAC: string\n\n  constructor(ciphertext: string, salt: string, iv: string, HMAC: string) {\n    this.ciphertext = ciphertext\n    this.salt = salt\n    this.iv = iv\n    this.HMAC = HMAC\n  }\n\n  static decode(encoded: string): PassphraseEncryptedMessage {\n    var json = JSON.parse(encoded)\n    return new PassphraseEncryptedMessage(json[0], json[1], json[2], json[3])\n  }\n\n  encode(): string {\n    return JSON.stringify([this.ciphertext, this.salt, this.iv, this.HMAC])\n  }\n}\n\nexport function passphraseEncrypt(message: string, passphrase: string): PassphraseEncryptedMessage {\n  var salt = CryptoJS.lib.WordArray.random(256 / 8)\n  var key = CryptoJS.PBKDF2(passphrase, salt, {\n    iterations: 10,\n    hasher: CryptoJS.algo.SHA256\n  })\n  var iv = CryptoJS.lib.WordArray.random(128 / 8)\n\n  var encrypted = CryptoJS.AES.encrypt(message, key, { iv: iv })\n\n  var ciphertext = CryptoJS.enc.Base64.stringify(encrypted.ciphertext)\n  var salt_str = CryptoJS.enc.Hex.stringify(salt)\n  var iv_str = CryptoJS.enc.Hex.stringify(iv)\n\n  var key_str = CryptoJS.enc.Hex.stringify(key)\n  var HMAC = CryptoJS.HmacSHA256(ciphertext + iv_str, key_str)\n  var HMAC_str = CryptoJS.enc.Hex.stringify(HMAC)\n\n  return new PassphraseEncryptedMessage(ciphertext, salt_str, iv_str, HMAC_str)\n}\n\nexport function passphraseDecrypt(\n  cp: PassphraseEncryptedMessage,\n  passphrase: string\n): string | null {\n  var iv = CryptoJS.enc.Hex.parse(cp.iv)\n  var salt = CryptoJS.enc.Hex.parse(cp.salt)\n  var key = CryptoJS.PBKDF2(passphrase, salt, {\n    iterations: 10,\n    hasher: CryptoJS.algo.SHA256\n  })\n  var ciphertext = CryptoJS.enc.Base64.parse(cp.ciphertext)\n  var key_str = CryptoJS.enc.Hex.stringify(key)\n  var HMAC = CryptoJS.HmacSHA256(cp.ciphertext + cp.iv, key_str)\n  var HMAC_str = CryptoJS.enc.Hex.stringify(HMAC)\n\n  // compare HMACs\n  if (HMAC_str != cp.HMAC) {\n    return null\n  }\n  var _cp = CryptoJS.lib.CipherParams.create({\n    ciphertext: ciphertext\n  })\n\n  var decrypted = CryptoJS.AES.decrypt(_cp, key, { iv: iv })\n  return decrypted.toString(CryptoJS.enc.Utf8)\n}\n\n// ==================================================================================================\n// START INCLUDE FILE curve25519_.js\n// ==================================================================================================\n\n// Copyright (c) 2007 Michele Bini\n// Konstantin Welke, 2008:\n// - moved into .js file, renamed all c255lname to curve25519_name\n// - added curve25519_clamp()\n// - functions to read from/to 8bit string\n// - removed base32/hex functions (cleanup)\n// - removed setbit function (cleanup, had a bug anyway)\n// BloodyRookie 2014:\n// - ported part of the java implementation by Dmitry Skiba to js and merged into this file\n// - profiled for higher speed\n//\n// This program is free software; you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation; either version 2 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License along\n// with this program; if not, write to the Free Software Foundation, Inc.,\n// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. */\n//\n// The original curve25519 library was released into the public domain\n// by Daniel J. Bernstein\n\nvar curve25519_zero = function() {\n  return [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n}\n\nvar curve25519_one = function() {\n  return [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n}\n\nvar curve25519_nine = function() {\n  return [9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n}\n\nvar curve25519_486671 = function() {\n  return [27919, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n}\n\nvar curve25519_39420360 = function() {\n  return [33224, 601, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n}\n\nvar curve25519_r2y = function() {\n  return [\n    0x1670,\n    0x4000,\n    0xf219,\n    0xd369,\n    0x2248,\n    0x4845,\n    0x679a,\n    0x884d,\n    0x5d19,\n    0x16bf,\n    0xda74,\n    0xe57d,\n    0x5e53,\n    0x3705,\n    0x3526,\n    0x17c0\n  ]\n}\n\nvar curve25519_clamp = function(curve: any) {\n  curve[0] &= 0xfff8\n  curve[15] &= 0x7fff\n  curve[15] |= 0x4000\n  return curve\n}\n\nvar curve25519_getbit = function(curve: any, c: any) {\n  return ~~(curve[~~(c / 16)] / Math.pow(2, c % 16)) % 2\n}\n\n/* group order (a prime near 2^252+2^124) */\nvar curve25519_order = [\n  237,\n  211,\n  245,\n  92,\n  26,\n  99,\n  18,\n  88,\n  214,\n  156,\n  247,\n  162,\n  222,\n  249,\n  222,\n  20,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  16\n]\n\nvar curve25519_order_times_8 = [\n  104,\n  159,\n  174,\n  231,\n  210,\n  24,\n  147,\n  192,\n  178,\n  230,\n  188,\n  23,\n  245,\n  206,\n  247,\n  166,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  128\n]\n\nvar curve25519_convertToByteArray = function(a: any) {\n  var b = new Int8Array(32)\n  var i\n  for (i = 0; i < 16; i++) {\n    b[2 * i] = a[i] & 0xff\n    b[2 * i + 1] = a[i] >> 8\n  }\n\n  return b\n}\n\nvar curve25519_convertToShortArray = function(a: any) {\n  var b = new Array(16)\n  var i, val1, val2\n  for (i = 0; i < 16; i++) {\n    val1 = a[i * 2]\n    if (val1 < 0) {\n      val1 += 256\n    }\n    val2 = a[i * 2 + 1]\n    if (val2 < 0) {\n      val2 += 256\n    }\n    b[i] = val1 + val2 * 256\n  }\n  return b\n}\n\nvar curve25519_fillShortArray = function(src: any, dest: any) {\n  var i\n  for (i = 0; i < 16; i++) {\n    dest[i] = src[i]\n  }\n}\n\nvar curve25519_cpy32 = function(a: any) {\n  var b = new Int8Array(32)\n  for (var i = 0; i < 32; i++) {\n    b[i] = a[i]\n  }\n  return b\n}\n\nvar curve25519_mula_small = function(p: any, q: any, m: any, x: any, n: any, z: any) {\n  var v = 0\n  for (var j = 0; j < n; ++j) {\n    v += (q[j + m] & 0xff) + z * (x[j] & 0xff)\n    p[j + m] = v & 0xff\n    v >>= 8\n  }\n  return v\n}\n\nvar curve25519_mula32 = function(p: any, x: any, y: any, t: any, z: any) {\n  var n = 31\n  var w = 0\n  for (var i = 0; i < t; i++) {\n    var zy = z * (y[i] & 0xff)\n    w += curve25519_mula_small(p, p, i, x, n, zy) + (p[i + n] & 0xff) + zy * (x[n] & 0xff)\n    p[i + n] = w & 0xff\n    w >>= 8\n  }\n  p[i + n] = (w + (p[i + n] & 0xff)) & 0xff\n  return w >> 8\n}\n\nvar curve25519_divmod = function(q: any, r: any, n: any, d: any, t: any) {\n  var rn = 0,\n    z = 0\n  var dt = (d[t - 1] & 0xff) << 8\n  if (t > 1) {\n    dt |= d[t - 2] & 0xff\n  }\n  while (n-- >= t) {\n    z = (rn << 16) | ((r[n] & 0xff) << 8)\n    if (n > 0) {\n      z |= r[n - 1] & 0xff\n    }\n    z = parseInt(\"\" + z / dt)\n    rn += curve25519_mula_small(r, r, n - t + 1, d, t, -z)\n    q[n - t + 1] = (z + rn) & 0xff // rn is 0 or -1 (underflow)\n    curve25519_mula_small(r, r, n - t + 1, d, t, -rn)\n    rn = r[n] & 0xff\n    r[n] = 0\n  }\n  r[t - 1] = rn & 0xff\n}\n\nvar curve25519_numsize = function(x: any, n: any) {\n  while (n-- != 0 && x[n] == 0);\n  return n + 1\n}\n\nvar curve25519_egcd32 = function(x: any, y: any, a: any, b: any) {\n  var an = 0,\n    bn = 32,\n    qn = 0,\n    i = 0\n  for (i = 0; i < 32; i++) {\n    x[i] = y[i] = 0\n  }\n  x[0] = 1\n  an = curve25519_numsize(a, 32)\n  if (an == 0) {\n    return y // division by zero\n  }\n  var temp = new Int8Array(32)\n  while (true) {\n    qn = bn - an + 1\n    curve25519_divmod(temp, b, bn, a, an)\n    bn = curve25519_numsize(b, bn)\n    if (bn == 0) {\n      return x\n    }\n    curve25519_mula32(y, x, temp, qn, -1)\n\n    qn = an - bn + 1\n    curve25519_divmod(temp, a, an, b, bn)\n    an = curve25519_numsize(a, an)\n    if (an == 0) {\n      return y\n    }\n    curve25519_mula32(x, y, temp, qn, -1)\n  }\n}\n\nvar curve25519_cpy16 = function(a: any) {\n  var r = new Array(16)\n  var i\n  for (i = 0; i < 16; i++) {\n    r[i] = a[i]\n  }\n  return r\n}\n\n/***\n * BloodyRookie: odd numbers are negativ\n */\nvar curve25519_isNegative = function(x: any) {\n  return x[0] & 1\n}\n\nvar curve25519_sqr8h = function(\n  r: any,\n  a7: any,\n  a6: any,\n  a5: any,\n  a4: any,\n  a3: any,\n  a2: any,\n  a1: any,\n  a0: any\n) {\n  var v = 0\n  r[0] = (v = a0 * a0) & 0xffff\n  r[1] = (v = ~~(v / 0x10000) + 2 * a0 * a1) & 0xffff\n  r[2] = (v = ~~(v / 0x10000) + 2 * a0 * a2 + a1 * a1) & 0xffff\n  r[3] = (v = ~~(v / 0x10000) + 2 * a0 * a3 + 2 * a1 * a2) & 0xffff\n  r[4] = (v = ~~(v / 0x10000) + 2 * a0 * a4 + 2 * a1 * a3 + a2 * a2) & 0xffff\n  r[5] = (v = ~~(v / 0x10000) + 2 * a0 * a5 + 2 * a1 * a4 + 2 * a2 * a3) & 0xffff\n  r[6] = (v = ~~(v / 0x10000) + 2 * a0 * a6 + 2 * a1 * a5 + 2 * a2 * a4 + a3 * a3) & 0xffff\n  r[7] = (v = ~~(v / 0x10000) + 2 * a0 * a7 + 2 * a1 * a6 + 2 * a2 * a5 + 2 * a3 * a4) & 0xffff\n  r[8] = (v = ~~(v / 0x10000) + 2 * a1 * a7 + 2 * a2 * a6 + 2 * a3 * a5 + a4 * a4) & 0xffff\n  r[9] = (v = ~~(v / 0x10000) + 2 * a2 * a7 + 2 * a3 * a6 + 2 * a4 * a5) & 0xffff\n  r[10] = (v = ~~(v / 0x10000) + 2 * a3 * a7 + 2 * a4 * a6 + a5 * a5) & 0xffff\n  r[11] = (v = ~~(v / 0x10000) + 2 * a4 * a7 + 2 * a5 * a6) & 0xffff\n  r[12] = (v = ~~(v / 0x10000) + 2 * a5 * a7 + a6 * a6) & 0xffff\n  r[13] = (v = ~~(v / 0x10000) + 2 * a6 * a7) & 0xffff\n  r[14] = (v = ~~(v / 0x10000) + a7 * a7) & 0xffff\n  r[15] = ~~(v / 0x10000)\n}\n\nvar curve25519_sqrmodp = function(r: any, a: any) {\n  var x = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  var y = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  var z = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  curve25519_sqr8h(x, a[15], a[14], a[13], a[12], a[11], a[10], a[9], a[8])\n  curve25519_sqr8h(z, a[7], a[6], a[5], a[4], a[3], a[2], a[1], a[0])\n  curve25519_sqr8h(\n    y,\n    a[15] + a[7],\n    a[14] + a[6],\n    a[13] + a[5],\n    a[12] + a[4],\n    a[11] + a[3],\n    a[10] + a[2],\n    a[9] + a[1],\n    a[8] + a[0]\n  )\n  var v = 0\n  r[0] = (v = 0x800000 + z[0] + (y[8] - x[8] - z[8] + x[0] - 0x80) * 38) & 0xffff\n  r[1] = (v = 0x7fff80 + ~~(v / 0x10000) + z[1] + (y[9] - x[9] - z[9] + x[1]) * 38) & 0xffff\n  r[2] = (v = 0x7fff80 + ~~(v / 0x10000) + z[2] + (y[10] - x[10] - z[10] + x[2]) * 38) & 0xffff\n  r[3] = (v = 0x7fff80 + ~~(v / 0x10000) + z[3] + (y[11] - x[11] - z[11] + x[3]) * 38) & 0xffff\n  r[4] = (v = 0x7fff80 + ~~(v / 0x10000) + z[4] + (y[12] - x[12] - z[12] + x[4]) * 38) & 0xffff\n  r[5] = (v = 0x7fff80 + ~~(v / 0x10000) + z[5] + (y[13] - x[13] - z[13] + x[5]) * 38) & 0xffff\n  r[6] = (v = 0x7fff80 + ~~(v / 0x10000) + z[6] + (y[14] - x[14] - z[14] + x[6]) * 38) & 0xffff\n  r[7] = (v = 0x7fff80 + ~~(v / 0x10000) + z[7] + (y[15] - x[15] - z[15] + x[7]) * 38) & 0xffff\n  r[8] = (v = 0x7fff80 + ~~(v / 0x10000) + z[8] + y[0] - x[0] - z[0] + x[8] * 38) & 0xffff\n  r[9] = (v = 0x7fff80 + ~~(v / 0x10000) + z[9] + y[1] - x[1] - z[1] + x[9] * 38) & 0xffff\n  r[10] = (v = 0x7fff80 + ~~(v / 0x10000) + z[10] + y[2] - x[2] - z[2] + x[10] * 38) & 0xffff\n  r[11] = (v = 0x7fff80 + ~~(v / 0x10000) + z[11] + y[3] - x[3] - z[3] + x[11] * 38) & 0xffff\n  r[12] = (v = 0x7fff80 + ~~(v / 0x10000) + z[12] + y[4] - x[4] - z[4] + x[12] * 38) & 0xffff\n  r[13] = (v = 0x7fff80 + ~~(v / 0x10000) + z[13] + y[5] - x[5] - z[5] + x[13] * 38) & 0xffff\n  r[14] = (v = 0x7fff80 + ~~(v / 0x10000) + z[14] + y[6] - x[6] - z[6] + x[14] * 38) & 0xffff\n  r[15] = 0x7fff80 + ~~(v / 0x10000) + z[15] + y[7] - x[7] - z[7] + x[15] * 38\n  curve25519_reduce(r)\n}\n\nvar curve25519_mul8h = function(\n  r: any,\n  a7: any,\n  a6: any,\n  a5: any,\n  a4: any,\n  a3: any,\n  a2: any,\n  a1: any,\n  a0: any,\n  b7: any,\n  b6: any,\n  b5: any,\n  b4: any,\n  b3: any,\n  b2: any,\n  b1: any,\n  b0: any\n) {\n  var v = 0\n  r[0] = (v = a0 * b0) & 0xffff\n  r[1] = (v = ~~(v / 0x10000) + a0 * b1 + a1 * b0) & 0xffff\n  r[2] = (v = ~~(v / 0x10000) + a0 * b2 + a1 * b1 + a2 * b0) & 0xffff\n  r[3] = (v = ~~(v / 0x10000) + a0 * b3 + a1 * b2 + a2 * b1 + a3 * b0) & 0xffff\n  r[4] = (v = ~~(v / 0x10000) + a0 * b4 + a1 * b3 + a2 * b2 + a3 * b1 + a4 * b0) & 0xffff\n  r[5] = (v = ~~(v / 0x10000) + a0 * b5 + a1 * b4 + a2 * b3 + a3 * b2 + a4 * b1 + a5 * b0) & 0xffff\n  r[6] =\n    (v = ~~(v / 0x10000) + a0 * b6 + a1 * b5 + a2 * b4 + a3 * b3 + a4 * b2 + a5 * b1 + a6 * b0) &\n    0xffff\n  r[7] =\n    (v =\n      ~~(v / 0x10000) +\n      a0 * b7 +\n      a1 * b6 +\n      a2 * b5 +\n      a3 * b4 +\n      a4 * b3 +\n      a5 * b2 +\n      a6 * b1 +\n      a7 * b0) & 0xffff\n  r[8] =\n    (v = ~~(v / 0x10000) + a1 * b7 + a2 * b6 + a3 * b5 + a4 * b4 + a5 * b3 + a6 * b2 + a7 * b1) &\n    0xffff\n  r[9] = (v = ~~(v / 0x10000) + a2 * b7 + a3 * b6 + a4 * b5 + a5 * b4 + a6 * b3 + a7 * b2) & 0xffff\n  r[10] = (v = ~~(v / 0x10000) + a3 * b7 + a4 * b6 + a5 * b5 + a6 * b4 + a7 * b3) & 0xffff\n  r[11] = (v = ~~(v / 0x10000) + a4 * b7 + a5 * b6 + a6 * b5 + a7 * b4) & 0xffff\n  r[12] = (v = ~~(v / 0x10000) + a5 * b7 + a6 * b6 + a7 * b5) & 0xffff\n  r[13] = (v = ~~(v / 0x10000) + a6 * b7 + a7 * b6) & 0xffff\n  r[14] = (v = ~~(v / 0x10000) + a7 * b7) & 0xffff\n  r[15] = ~~(v / 0x10000)\n}\n\nvar curve25519_mulmodp = function(r: any, a: any, b: any) {\n  var x = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  var y = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  var z = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  curve25519_mul8h(\n    x,\n    a[15],\n    a[14],\n    a[13],\n    a[12],\n    a[11],\n    a[10],\n    a[9],\n    a[8],\n    b[15],\n    b[14],\n    b[13],\n    b[12],\n    b[11],\n    b[10],\n    b[9],\n    b[8]\n  )\n  curve25519_mul8h(\n    z,\n    a[7],\n    a[6],\n    a[5],\n    a[4],\n    a[3],\n    a[2],\n    a[1],\n    a[0],\n    b[7],\n    b[6],\n    b[5],\n    b[4],\n    b[3],\n    b[2],\n    b[1],\n    b[0]\n  )\n  curve25519_mul8h(\n    y,\n    a[15] + a[7],\n    a[14] + a[6],\n    a[13] + a[5],\n    a[12] + a[4],\n    a[11] + a[3],\n    a[10] + a[2],\n    a[9] + a[1],\n    a[8] + a[0],\n    b[15] + b[7],\n    b[14] + b[6],\n    b[13] + b[5],\n    b[12] + b[4],\n    b[11] + b[3],\n    b[10] + b[2],\n    b[9] + b[1],\n    b[8] + b[0]\n  )\n  var v = 0\n  r[0] = (v = 0x800000 + z[0] + (y[8] - x[8] - z[8] + x[0] - 0x80) * 38) & 0xffff\n  r[1] = (v = 0x7fff80 + ~~(v / 0x10000) + z[1] + (y[9] - x[9] - z[9] + x[1]) * 38) & 0xffff\n  r[2] = (v = 0x7fff80 + ~~(v / 0x10000) + z[2] + (y[10] - x[10] - z[10] + x[2]) * 38) & 0xffff\n  r[3] = (v = 0x7fff80 + ~~(v / 0x10000) + z[3] + (y[11] - x[11] - z[11] + x[3]) * 38) & 0xffff\n  r[4] = (v = 0x7fff80 + ~~(v / 0x10000) + z[4] + (y[12] - x[12] - z[12] + x[4]) * 38) & 0xffff\n  r[5] = (v = 0x7fff80 + ~~(v / 0x10000) + z[5] + (y[13] - x[13] - z[13] + x[5]) * 38) & 0xffff\n  r[6] = (v = 0x7fff80 + ~~(v / 0x10000) + z[6] + (y[14] - x[14] - z[14] + x[6]) * 38) & 0xffff\n  r[7] = (v = 0x7fff80 + ~~(v / 0x10000) + z[7] + (y[15] - x[15] - z[15] + x[7]) * 38) & 0xffff\n  r[8] = (v = 0x7fff80 + ~~(v / 0x10000) + z[8] + y[0] - x[0] - z[0] + x[8] * 38) & 0xffff\n  r[9] = (v = 0x7fff80 + ~~(v / 0x10000) + z[9] + y[1] - x[1] - z[1] + x[9] * 38) & 0xffff\n  r[10] = (v = 0x7fff80 + ~~(v / 0x10000) + z[10] + y[2] - x[2] - z[2] + x[10] * 38) & 0xffff\n  r[11] = (v = 0x7fff80 + ~~(v / 0x10000) + z[11] + y[3] - x[3] - z[3] + x[11] * 38) & 0xffff\n  r[12] = (v = 0x7fff80 + ~~(v / 0x10000) + z[12] + y[4] - x[4] - z[4] + x[12] * 38) & 0xffff\n  r[13] = (v = 0x7fff80 + ~~(v / 0x10000) + z[13] + y[5] - x[5] - z[5] + x[13] * 38) & 0xffff\n  r[14] = (v = 0x7fff80 + ~~(v / 0x10000) + z[14] + y[6] - x[6] - z[6] + x[14] * 38) & 0xffff\n  r[15] = 0x7fff80 + ~~(v / 0x10000) + z[15] + y[7] - x[7] - z[7] + x[15] * 38\n  curve25519_reduce(r)\n}\n\nvar curve25519_mulasmall = function(r: any, a: any, m: any) {\n  var v = 0\n  r[0] = (v = a[0] * m) & 0xffff\n  r[1] = (v = ~~(v / 0x10000) + a[1] * m) & 0xffff\n  r[2] = (v = ~~(v / 0x10000) + a[2] * m) & 0xffff\n  r[3] = (v = ~~(v / 0x10000) + a[3] * m) & 0xffff\n  r[4] = (v = ~~(v / 0x10000) + a[4] * m) & 0xffff\n  r[5] = (v = ~~(v / 0x10000) + a[5] * m) & 0xffff\n  r[6] = (v = ~~(v / 0x10000) + a[6] * m) & 0xffff\n  r[7] = (v = ~~(v / 0x10000) + a[7] * m) & 0xffff\n  r[8] = (v = ~~(v / 0x10000) + a[8] * m) & 0xffff\n  r[9] = (v = ~~(v / 0x10000) + a[9] * m) & 0xffff\n  r[10] = (v = ~~(v / 0x10000) + a[10] * m) & 0xffff\n  r[11] = (v = ~~(v / 0x10000) + a[11] * m) & 0xffff\n  r[12] = (v = ~~(v / 0x10000) + a[12] * m) & 0xffff\n  r[13] = (v = ~~(v / 0x10000) + a[13] * m) & 0xffff\n  r[14] = (v = ~~(v / 0x10000) + a[14] * m) & 0xffff\n  r[15] = ~~(v / 0x10000) + a[15] * m\n  curve25519_reduce(r)\n}\n\nvar curve25519_addmodp = function(r: any, a: any, b: any) {\n  var v = 0\n  r[0] = (v = (~~(a[15] / 0x8000) + ~~(b[15] / 0x8000)) * 19 + a[0] + b[0]) & 0xffff\n  r[1] = (v = ~~(v / 0x10000) + a[1] + b[1]) & 0xffff\n  r[2] = (v = ~~(v / 0x10000) + a[2] + b[2]) & 0xffff\n  r[3] = (v = ~~(v / 0x10000) + a[3] + b[3]) & 0xffff\n  r[4] = (v = ~~(v / 0x10000) + a[4] + b[4]) & 0xffff\n  r[5] = (v = ~~(v / 0x10000) + a[5] + b[5]) & 0xffff\n  r[6] = (v = ~~(v / 0x10000) + a[6] + b[6]) & 0xffff\n  r[7] = (v = ~~(v / 0x10000) + a[7] + b[7]) & 0xffff\n  r[8] = (v = ~~(v / 0x10000) + a[8] + b[8]) & 0xffff\n  r[9] = (v = ~~(v / 0x10000) + a[9] + b[9]) & 0xffff\n  r[10] = (v = ~~(v / 0x10000) + a[10] + b[10]) & 0xffff\n  r[11] = (v = ~~(v / 0x10000) + a[11] + b[11]) & 0xffff\n  r[12] = (v = ~~(v / 0x10000) + a[12] + b[12]) & 0xffff\n  r[13] = (v = ~~(v / 0x10000) + a[13] + b[13]) & 0xffff\n  r[14] = (v = ~~(v / 0x10000) + a[14] + b[14]) & 0xffff\n  r[15] = ~~(v / 0x10000) + a[15] % 0x8000 + b[15] % 0x8000\n}\n\nvar curve25519_submodp = function(r: any, a: any, b: any) {\n  var v = 0\n  r[0] = (v = 0x80000 + (~~(a[15] / 0x8000) - ~~(b[15] / 0x8000) - 1) * 19 + a[0] - b[0]) & 0xffff\n  r[1] = (v = ~~(v / 0x10000) + 0x7fff8 + a[1] - b[1]) & 0xffff\n  r[2] = (v = ~~(v / 0x10000) + 0x7fff8 + a[2] - b[2]) & 0xffff\n  r[3] = (v = ~~(v / 0x10000) + 0x7fff8 + a[3] - b[3]) & 0xffff\n  r[4] = (v = ~~(v / 0x10000) + 0x7fff8 + a[4] - b[4]) & 0xffff\n  r[5] = (v = ~~(v / 0x10000) + 0x7fff8 + a[5] - b[5]) & 0xffff\n  r[6] = (v = ~~(v / 0x10000) + 0x7fff8 + a[6] - b[6]) & 0xffff\n  r[7] = (v = ~~(v / 0x10000) + 0x7fff8 + a[7] - b[7]) & 0xffff\n  r[8] = (v = ~~(v / 0x10000) + 0x7fff8 + a[8] - b[8]) & 0xffff\n  r[9] = (v = ~~(v / 0x10000) + 0x7fff8 + a[9] - b[9]) & 0xffff\n  r[10] = (v = ~~(v / 0x10000) + 0x7fff8 + a[10] - b[10]) & 0xffff\n  r[11] = (v = ~~(v / 0x10000) + 0x7fff8 + a[11] - b[11]) & 0xffff\n  r[12] = (v = ~~(v / 0x10000) + 0x7fff8 + a[12] - b[12]) & 0xffff\n  r[13] = (v = ~~(v / 0x10000) + 0x7fff8 + a[13] - b[13]) & 0xffff\n  r[14] = (v = ~~(v / 0x10000) + 0x7fff8 + a[14] - b[14]) & 0xffff\n  r[15] = ~~(v / 0x10000) + 0x7ff8 + a[15] % 0x8000 - b[15] % 0x8000\n}\n/****\n * BloodyRookie: a^-1 is found via Fermats little theorem:\n * a^p congruent a mod p and therefore a^(p-2) congruent a^-1 mod p\n */\nvar curve25519_invmodp = function(r: any, a: any, sqrtassist: any) {\n  var r1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  var r2 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  var r3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  var r4 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  var r5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  var i = 0\n  curve25519_sqrmodp(r2, a) //  2 == 2 * 1\n  curve25519_sqrmodp(r3, r2) //  4 == 2 * 2\n  curve25519_sqrmodp(r1, r3) //  8 == 2 * 4\n  curve25519_mulmodp(r3, r1, a) //  9 == 8 + 1\n  curve25519_mulmodp(r1, r3, r2) // 11 == 9 + 2\n  curve25519_sqrmodp(r2, r1) // 22 == 2 * 11\n  curve25519_mulmodp(r4, r2, r3) // 31 == 22 + 9\n  //\t== 2^5   - 2^0\n  curve25519_sqrmodp(r2, r4) // 2^6   - 2^1\n  curve25519_sqrmodp(r3, r2) // 2^7   - 2^2\n  curve25519_sqrmodp(r2, r3) // 2^8   - 2^3\n  curve25519_sqrmodp(r3, r2) // 2^9   - 2^4\n  curve25519_sqrmodp(r2, r3) // 2^10  - 2^5\n  curve25519_mulmodp(r3, r2, r4) // 2^10  - 2^0\n  curve25519_sqrmodp(r2, r3) // 2^11  - 2^1\n  curve25519_sqrmodp(r4, r2) // 2^12  - 2^2\n  for (i = 1; i < 5; i++) {\n    curve25519_sqrmodp(r2, r4)\n    curve25519_sqrmodp(r4, r2)\n  } // 2^20  - 2^10\n  curve25519_mulmodp(r2, r4, r3) // 2^20  - 2^0\n  curve25519_sqrmodp(r4, r2) // 2^21  - 2^1\n  curve25519_sqrmodp(r5, r4) // 2^22  - 2^2\n  for (i = 1; i < 10; i++) {\n    curve25519_sqrmodp(r4, r5)\n    curve25519_sqrmodp(r5, r4)\n  } // 2^40  - 2^20\n  curve25519_mulmodp(r4, r5, r2) // 2^40  - 2^0\n  for (i = 0; i < 5; i++) {\n    curve25519_sqrmodp(r2, r4)\n    curve25519_sqrmodp(r4, r2)\n  } // 2^50  - 2^10\n  curve25519_mulmodp(r2, r4, r3) // 2^50  - 2^0\n  curve25519_sqrmodp(r3, r2) // 2^51  - 2^1\n  curve25519_sqrmodp(r4, r3) // 2^52  - 2^2\n  for (i = 1; i < 25; i++) {\n    curve25519_sqrmodp(r3, r4)\n    curve25519_sqrmodp(r4, r3)\n  } // 2^100 - 2^50\n  curve25519_mulmodp(r3, r4, r2) // 2^100 - 2^0\n  curve25519_sqrmodp(r4, r3) // 2^101 - 2^1\n  curve25519_sqrmodp(r5, r4) // 2^102 - 2^2\n  for (i = 1; i < 50; i++) {\n    curve25519_sqrmodp(r4, r5)\n    curve25519_sqrmodp(r5, r4)\n  } // 2^200 - 2^100\n  curve25519_mulmodp(r4, r5, r3) // 2^200 - 2^0\n  for (i = 0; i < 25; i++) {\n    curve25519_sqrmodp(r5, r4)\n    curve25519_sqrmodp(r4, r5)\n  } // 2^250 - 2^50\n  curve25519_mulmodp(r3, r4, r2) // 2^250 - 2^0\n  curve25519_sqrmodp(r2, r3) // 2^251 - 2^1\n  curve25519_sqrmodp(r3, r2) // 2^252 - 2^2\n  if (sqrtassist == 1) {\n    curve25519_mulmodp(r, a, r3) // 2^252 - 3\n  } else {\n    curve25519_sqrmodp(r2, r3) // 2^253 - 2^3\n    curve25519_sqrmodp(r3, r2) // 2^254 - 2^4\n    curve25519_sqrmodp(r2, r3) // 2^255 - 2^5\n    curve25519_mulmodp(r, r2, r1) // 2^255 - 21\n  }\n}\n\nvar curve25519_reduce = function(a: any) {\n  curve25519_reduce2(a)\n\n  /**\n   * BloodyRookie: special case for p <= a < 2^255\n   */\n  if (\n    a[15] != 0x7fff ||\n    a[14] != 0xffff ||\n    a[13] != 0xffff ||\n    a[12] != 0xffff ||\n    a[11] != 0xffff ||\n    a[10] != 0xffff ||\n    a[9] != 0xffff ||\n    a[8] != 0xffff ||\n    a[7] != 0xffff ||\n    a[6] != 0xffff ||\n    a[5] != 0xffff ||\n    a[4] != 0xffff ||\n    a[3] != 0xffff ||\n    a[2] != 0xffff ||\n    a[1] != 0xffff ||\n    a[0] < 0xffed\n  ) {\n    return\n  }\n\n  var i\n  for (i = 1; i < 16; i++) {\n    a[i] = 0\n  }\n  a[0] = a[0] - 0xffed\n}\nvar curve25519_reduce2 = function(a: any) {\n  var v = a[15]\n  if (v < 0x8000) return\n  a[15] = v % 0x8000\n  v = ~~(v / 0x8000) * 19\n  a[0] = (v += a[0]) & 0xffff\n  if ((v = ~~(v / 0x10000)) < 1) return\n  a[1] = (v += a[1]) & 0xffff\n  if ((v = ~~(v / 0x10000)) < 1) return\n  a[2] = (v += a[2]) & 0xffff\n  if ((v = ~~(v / 0x10000)) < 1) return\n  a[3] = (v += a[3]) & 0xffff\n  if ((v = ~~(v / 0x10000)) < 1) return\n  a[4] = (v += a[4]) & 0xffff\n  if ((v = ~~(v / 0x10000)) < 1) return\n  a[5] = (v += a[5]) & 0xffff\n  if ((v = ~~(v / 0x10000)) < 1) return\n  a[6] = (v += a[6]) & 0xffff\n  if ((v = ~~(v / 0x10000)) < 1) return\n  a[7] = (v += a[7]) & 0xffff\n  if ((v = ~~(v / 0x10000)) < 1) return\n  a[8] = (v += a[8]) & 0xffff\n  if ((v = ~~(v / 0x10000)) < 1) return\n  a[9] = (v += a[9]) & 0xffff\n  if ((v = ~~(v / 0x10000)) < 1) return\n  a[10] = (v += a[10]) & 0xffff\n  if ((v = ~~(v / 0x10000)) < 1) return\n  a[11] = (v += a[11]) & 0xffff\n  if ((v = ~~(v / 0x10000)) < 1) return\n  a[12] = (v += a[12]) & 0xffff\n  if ((v = ~~(v / 0x10000)) < 1) return\n  a[13] = (v += a[13]) & 0xffff\n  if ((v = ~~(v / 0x10000)) < 1) return\n  a[14] = (v += a[14]) & 0xffff\n  if ((v = ~~(v / 0x10000)) < 1) return\n  a[15] += v\n}\n\n/**\n * Montgomery curve with A=486662 and B=1\n */\nvar curve25519_x_to_y2 = function(r: any, x: any) {\n  var r1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  var r2 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  curve25519_sqrmodp(r1, x) // r1 = x^2\n  curve25519_mulasmall(r2, x, 486662) // r2 = Ax\n  curve25519_addmodp(r, r1, r2) //  r = x^2 + Ax\n  curve25519_addmodp(r1, r, curve25519_one()) // r1 = x^2 + Ax + 1\n  curve25519_mulmodp(r, r1, x) //  r = x^3 + Ax^2 + x\n}\n\nvar curve25519_prep = function(r: any, s: any, a: any, b: any) {\n  curve25519_addmodp(r, a, b)\n  curve25519_submodp(s, a, b)\n}\n\n/****\n * BloodyRookie: Doubling a point on a Montgomery curve:\n * Point is given in projective coordinates p=x/z\n * 2*P = r/s,\n * r = (x+z)^2 * (x-z)^2\n * s = ((((x+z)^2 - (x-z)^2) * 121665) + (x+z)^2) * ((x+z)^2 - (x-z)^2)\n *   = 4*x*z * (x^2 + 486662*x*z + z^2)\n *   = 4*x*z * ((x-z)^2 + ((486662+2)/4)(4*x*z))\n */\nvar curve25519_dbl = function(r: any, s: any, t1: any, t2: any) {\n  var r1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  var r2 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  var r3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  var r4 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  curve25519_sqrmodp(r1, t1) // r1 = t1^2\n  curve25519_sqrmodp(r2, t2) // r2 = t2^2\n  curve25519_submodp(r3, r1, r2) // r3 = t1^2 - t2^2\n  curve25519_mulmodp(r, r2, r1) //  r = t1^2 * t2^2\n  curve25519_mulasmall(r2, r3, 121665) // r2 = (t1^2 - t2^2) * 121665\n  curve25519_addmodp(r4, r2, r1) // r4 = (t1^2 - t2^2) * 121665 + t1^2\n  curve25519_mulmodp(s, r4, r3) //  s = ((t1^2 - t2^2) * 121665 + t1^2) * (t1^2 - t2^2)\n}\n\n/****\n * BloodyRookie: Adding 2 points on a Montgomery curve:\n * R = Q + P = r/s when given\n * Q = x/z, P = x_p/z_p, P-Q = x_1/1\n * r = ((x-z)*(x_p+z_p) + (x+z)*(x_p-z_p))^2\n * s = x_1*((x-z)*(x_p+z_p) - (x+z)*(x_p-z_p))^2\n */\nfunction curve25519_sum(r: any, s: any, t1: any, t2: any, t3: any, t4: any, x_1: any) {\n  var r1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  var r2 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  var r3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  var r4 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  curve25519_mulmodp(r1, t2, t3) // r1 = t2 * t3\n  curve25519_mulmodp(r2, t1, t4) // r2 = t1 * t4\n  curve25519_addmodp(r3, r1, r2) // r3 = t2 * t3 + t1 * t4\n  curve25519_submodp(r4, r1, r2) // r4 = t2 * t3 - t1 * t4\n  curve25519_sqrmodp(r, r3) //  r = (t2 * t3 + t1 * t4)^2\n  curve25519_sqrmodp(r1, r4) // r1 = (t2 * t3 - t1 * t4)^2\n  curve25519_mulmodp(s, r1, x_1) //  s = (t2 * t3 - t1 * t4)^2 * x_1\n}\n\nfunction curve25519_(f: any, c: any, s: any) {\n  var j,\n    a,\n    x_1,\n    q,\n    fb,\n    counter = 0\n  var t = new Array(16) //, t1 = new Array(16), t2 = new Array(16), t3 = new Array(16), t4 = new Array(16);\n  var sb = new Int8Array(32)\n  var temp1 = new Int8Array(32)\n  var temp2 = new Int8Array(64)\n  var temp3 = new Int8Array(64)\n\n  x_1 = c\n  q = [curve25519_one(), curve25519_zero()]\n  a = [x_1, curve25519_one()]\n\n  var n = 255\n\n  /**********************************************************************\n   * BloodyRookie:                                                      *\n   * Given f = f0*2^0 + f1*2^1 + ... + f255*2^255 and Basepoint a=9/1   *\n   * calculate f*a by applying the Montgomery ladder (const time algo): *\n   * r0 := 0 (point at infinity)                                        *\n   * r1 := a                                                            *\n   * for i from 255 to 0 do                                             *\n   *   if fi = 0 then                                                   *\n   *      r1 := r0 + r1                                                 *\n   *      r0 := 2r0                                                     *\n   *   else                                                             *\n   *      r0 := r0 + r1                                                 *\n   *      r1 := 2r1                                                     *\n   *                                                                    *\n   * Result: r0 = x-coordinate of f*a                                   *\n   **********************************************************************/\n  var r0 = new Array(new Array(16), new Array(16))\n  var r1 = new Array(new Array(16), new Array(16))\n  var t1 = new Array(16),\n    t2 = new Array(16)\n  var t3 = new Array(16),\n    t4 = new Array(16)\n  var fi\n  while (n >= 0) {\n    fi = curve25519_getbit(f, n)\n    if (fi == 0) {\n      curve25519_prep(t1, t2, a[0], a[1])\n      curve25519_prep(t3, t4, q[0], q[1])\n      curve25519_sum(r1[0], r1[1], t1, t2, t3, t4, x_1)\n      curve25519_dbl(r0[0], r0[1], t3, t4)\n    } else {\n      curve25519_prep(t1, t2, q[0], q[1])\n      curve25519_prep(t3, t4, a[0], a[1])\n      curve25519_sum(r0[0], r0[1], t1, t2, t3, t4, x_1)\n      curve25519_dbl(r1[0], r1[1], t3, t4)\n    }\n    q = r0\n    a = r1\n    n--\n  }\n  curve25519_invmodp(t, q[1], 0)\n  curve25519_mulmodp(t1, q[0], t)\n  q[0] = curve25519_cpy16(t1)\n\n  // q[0]=x-coordinate of k*G=:Px\n  // q[1]=z-coordinate of k*G=:Pz\n  // a = q + G = P + G\n  if (s != null) {\n    /*************************************************************************\n     * BloodyRookie: Recovery of the y-coordinate of point P:                *\n     *                                                                       *\n     * If P=(x,y), P1=(x1, y1), P2=(x2,y2) and P2 = P1 + P then              *\n     *                                                                       *\n     * y1 = ((x1 * x + 1)(x1 + x + 2A) - 2A - (x1 - x)^2 * x2)/2y            *\n     *                                                                       *\n     * Setting P2=Q, P1=P and P=G in the above formula we get                *\n     *                                                                       *\n     * Py =  ((Px * Gx + 1) * (Px + Gx + 2A) - 2A - (Px - Gx)^2 * Qx)/(2*Gy) *\n     *    = -((Qx + Px + Gx + A) * (Px - Gx)^2 - Py^2 - Gy^2)/(2*Gy)         *\n     *************************************************************************/\n    t = curve25519_cpy16(q[0])\n    curve25519_x_to_y2(t1, t) // t1 = Py^2\n    curve25519_invmodp(t3, a[1], 0)\n    curve25519_mulmodp(t2, a[0], t3) // t2 = (P+G)x = Qx\n    curve25519_addmodp(t4, t2, t) // t4 =  Qx + Px\n    curve25519_addmodp(t2, t4, curve25519_486671()) // t2 = Qx + Px + Gx + A\n    curve25519_submodp(t4, t, curve25519_nine()) // t4 = Px - Gx\n    curve25519_sqrmodp(t3, t4) // t3 = (Px - Gx)^2\n    curve25519_mulmodp(t4, t2, t3) // t4 = (Qx + Px + Gx + A) * (Px - Gx)^2\n    curve25519_submodp(t, t4, t1) //  t = (Qx + Px + Gx + A) * (Px - Gx)^2 - Py^2\n    curve25519_submodp(t4, t, curve25519_39420360()) // t4 = (Qx + Px + Gx + A) * (Px - Gx)^2 - Py^2 - Gy^2\n    curve25519_mulmodp(t1, t4, curve25519_r2y()) // t1 = ((Qx + Px + Gx + A) * (Px - Gx)^2 - Py^2 - Gy^2)/(2Gy) = -Py\n    fb = curve25519_convertToByteArray(f)\n    j = curve25519_isNegative(t1)\n    if (j != 0) {\n      /***\n       * Py is positiv, so just copy\n       */\n      sb = curve25519_cpy32(fb)\n    } else {\n      /***\n       * Py is negative:\n       * We will take s = -f^-1 mod q instead of s=f^-1 mod q\n       */\n      curve25519_mula_small(sb, curve25519_order_times_8, 0, fb, 32, -1)\n    }\n\n    temp1 = curve25519_cpy32(curve25519_order)\n    temp1 = curve25519_egcd32(temp2, temp3, sb, temp1)\n    sb = curve25519_cpy32(temp1)\n    if ((sb[31] & 0x80) != 0) {\n      curve25519_mula_small(sb, sb, 0, curve25519_order, 32, 1)\n    }\n    var stmp = curve25519_convertToShortArray(sb)\n    curve25519_fillShortArray(stmp, s)\n  }\n\n  return q[0]\n}\n\n// ==================================================================================================\n// END INCLUDE FILE curve25519_.js\n// ==================================================================================================\n\n// ==================================================================================================\n// START INCLUDE FILE curve25519.js\n// ==================================================================================================\n\n/* Ported to JavaScript from Java 07/01/14.\n*\n* Ported from C to Java by Dmitry Skiba [sahn0], 23/02/08.\n* Original: http://cds.xs4all.nl:8081/ecdh/\n*/\n/* Generic 64-bit integer implementation of Curve25519 ECDH\n* Written by Matthijs van Duin, 200608242056\n* Public domain.\n*\n* Based on work by Daniel J Bernstein, http://cr.yp.to/ecdh.html\n*/\n\nvar curve25519 = (function() {\n  //region Constants\n\n  var KEY_SIZE = 32\n\n  /* array length */\n  var UNPACKED_SIZE = 16\n\n  /* group order (a prime near 2^252+2^124) */\n  var ORDER = [\n    237,\n    211,\n    245,\n    92,\n    26,\n    99,\n    18,\n    88,\n    214,\n    156,\n    247,\n    162,\n    222,\n    249,\n    222,\n    20,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    16\n  ]\n\n  /* smallest multiple of the order that's >= 2^255 */\n  var ORDER_TIMES_8 = [\n    104,\n    159,\n    174,\n    231,\n    210,\n    24,\n    147,\n    192,\n    178,\n    230,\n    188,\n    23,\n    245,\n    206,\n    247,\n    166,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    128\n  ]\n\n  /* constants 2Gy and 1/(2Gy) */\n  var BASE_2Y = [\n    22587,\n    610,\n    29883,\n    44076,\n    15515,\n    9479,\n    25859,\n    56197,\n    23910,\n    4462,\n    17831,\n    16322,\n    62102,\n    36542,\n    52412,\n    16035\n  ]\n\n  var BASE_R2Y = [\n    5744,\n    16384,\n    61977,\n    54121,\n    8776,\n    18501,\n    26522,\n    34893,\n    23833,\n    5823,\n    55924,\n    58749,\n    24147,\n    14085,\n    13606,\n    6080\n  ]\n\n  var C1 = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  var C9 = [9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  var C486671 = [0x6d0f, 0x0007, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  var C39420360 = [0x81c8, 0x0259, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n\n  var P25 = 33554431 /* (1 << 25) - 1 */\n  var P26 = 67108863 /* (1 << 26) - 1 */\n\n  //#endregion\n\n  //region Key Agreement\n\n  /* Private key clamping\n  *   k [out] your private key for key agreement\n  *   k  [in]  32 random bytes\n  */\n  function clamp(k: any) {\n    k[31] &= 0x7f\n    k[31] |= 0x40\n    k[0] &= 0xf8\n  }\n\n  //endregion\n\n  //region radix 2^8 math\n\n  function cpy32(d: any, s: any) {\n    for (var i = 0; i < 32; i++) d[i] = s[i]\n  }\n\n  /* p[m..n+m-1] = q[m..n+m-1] + z * x */\n  /* n is the size of x */\n  /* n+m is the size of p and q */\n  function mula_small(p: any, q: any, m: any, x: any, n: any, z: any) {\n    m = m | 0\n    n = n | 0\n    z = z | 0\n\n    var v = 0\n    for (var i = 0; i < n; ++i) {\n      v += (q[i + m] & 0xff) + z * (x[i] & 0xff)\n      p[i + m] = v & 0xff\n      v >>= 8\n    }\n\n    return v\n  }\n\n  /* p += x * y * z  where z is a small integer\n  * x is size 32, y is size t, p is size 32+t\n  * y is allowed to overlap with p+32 if you don't care about the upper half  */\n  function mula32(p: any, x: any, y: any, t: any, z: any) {\n    t = t | 0\n    z = z | 0\n\n    var n = 31\n    var w = 0\n    var i = 0\n    for (; i < t; i++) {\n      var zy = z * (y[i] & 0xff)\n      w += mula_small(p, p, i, x, n, zy) + (p[i + n] & 0xff) + zy * (x[n] & 0xff)\n      p[i + n] = w & 0xff\n      w >>= 8\n    }\n    p[i + n] = (w + (p[i + n] & 0xff)) & 0xff\n    return w >> 8\n  }\n\n  /* divide r (size n) by d (size t), returning quotient q and remainder r\n  * quotient is size n-t+1, remainder is size t\n  * requires t > 0 && d[t-1] !== 0\n  * requires that r[-1] and d[-1] are valid memory locations\n  * q may overlap with r+t */\n  function divmod(q: any, r: any, n: any, d: any, t: any) {\n    n = n | 0\n    t = t | 0\n\n    var rn = 0\n    var dt = (d[t - 1] & 0xff) << 8\n    if (t > 1) dt |= d[t - 2] & 0xff\n\n    while (n-- >= t) {\n      var z = (rn << 16) | ((r[n] & 0xff) << 8)\n      if (n > 0) z |= r[n - 1] & 0xff\n\n      var i = n - t + 1\n      z /= dt\n      rn += mula_small(r, r, i, d, t, -z)\n      q[i] = (z + rn) & 0xff\n      /* rn is 0 or -1 (underflow) */\n      mula_small(r, r, i, d, t, -rn)\n      rn = r[n] & 0xff\n      r[n] = 0\n    }\n\n    r[t - 1] = rn & 0xff\n  }\n\n  function numsize(x: any, n: any) {\n    while (n-- !== 0 && x[n] === 0) {}\n    return n + 1\n  }\n\n  /* Returns x if a contains the gcd, y if b.\n  * Also, the returned buffer contains the inverse of a mod b,\n  * as 32-byte signed.\n  * x and y must have 64 bytes space for temporary use.\n  * requires that a[-1] and b[-1] are valid memory locations  */\n  function egcd32(x: any, y: any, a: any, b: any) {\n    var an,\n      bn = 32,\n      qn,\n      i\n    for (i = 0; i < 32; i++) x[i] = y[i] = 0\n    x[0] = 1\n    an = numsize(a, 32)\n    if (an === 0) return y /* division by zero */\n    var temp = new Array(32)\n    while (true) {\n      qn = bn - an + 1\n      divmod(temp, b, bn, a, an)\n      bn = numsize(b, bn)\n      if (bn === 0) return x\n      mula32(y, x, temp, qn, -1)\n\n      qn = an - bn + 1\n      divmod(temp, a, an, b, bn)\n      an = numsize(a, an)\n      if (an === 0) return y\n      mula32(x, y, temp, qn, -1)\n    }\n  }\n\n  //endregion\n\n  //region radix 2^25.5 GF(2^255-19) math\n\n  //region pack / unpack\n\n  /* Convert to internal format from little-endian byte format */\n  function unpack(x: any, m: any) {\n    for (var i = 0; i < KEY_SIZE; i += 2) x[i / 2] = (m[i] & 0xff) | ((m[i + 1] & 0xff) << 8)\n  }\n\n  /* Check if reduced-form input >= 2^255-19 */\n  function is_overflow(x: any) {\n    return (\n      (x[0] > P26 - 19 &&\n        (x[1] & x[3] & x[5] & x[7] & x[9]) === P25 &&\n        (x[2] & x[4] & x[6] & x[8]) === P26) ||\n      x[9] > P25\n    )\n  }\n\n  /* Convert from internal format to little-endian byte format.  The\n  * number must be in a reduced form which is output by the following ops:\n  *     unpack, mul, sqr\n  *     set --  if input in range 0 .. P25\n  * If you're unsure if the number is reduced, first multiply it by 1.  */\n  function pack(x: any, m: any) {\n    for (var i = 0; i < UNPACKED_SIZE; ++i) {\n      m[2 * i] = x[i] & 0x00ff\n      m[2 * i + 1] = (x[i] & 0xff00) >> 8\n    }\n  }\n\n  //endregion\n\n  function createUnpackedArray() {\n    return new Uint16Array(UNPACKED_SIZE)\n  }\n\n  /* Copy a number */\n  function cpy(d: any, s: any) {\n    for (var i = 0; i < UNPACKED_SIZE; ++i) d[i] = s[i]\n  }\n\n  /* Set a number to value, which must be in range -185861411 .. 185861411 */\n  function set(d: any, s: any) {\n    d[0] = s\n    for (var i = 1; i < UNPACKED_SIZE; ++i) d[i] = 0\n  }\n\n  /* Add/subtract two numbers.  The inputs must be in reduced form, and the\n  * output isn't, so to do another addition or subtraction on the output,\n  * first multiply it by one to reduce it. */\n  var add = c255laddmodp\n  var sub = c255lsubmodp\n\n  /* Multiply a number by a small integer in range -185861411 .. 185861411.\n  * The output is in reduced form, the input x need not be.  x and xy may point\n  * to the same buffer. */\n  var mul_small = c255lmulasmall\n\n  /* Multiply two numbers.  The output is in reduced form, the inputs need not be. */\n  var mul = c255lmulmodp\n\n  /* Square a number.  Optimization of  mul25519(x2, x, x)  */\n  var sqr = c255lsqrmodp\n\n  /* Calculates a reciprocal.  The output is in reduced form, the inputs need not\n  * be.  Simply calculates  y = x^(p-2)  so it's not too fast. */\n  /* When sqrtassist is true, it instead calculates y = x^((p-5)/8) */\n  function recip(y: any, x: any, sqrtassist: any) {\n    var t0 = createUnpackedArray()\n    var t1 = createUnpackedArray()\n    var t2 = createUnpackedArray()\n    var t3 = createUnpackedArray()\n    var t4 = createUnpackedArray()\n\n    /* the chain for x^(2^255-21) is straight from djb's implementation */\n    var i\n    sqr(t1, x) /*  2 === 2 * 1\t*/\n    sqr(t2, t1) /*  4 === 2 * 2\t*/\n    sqr(t0, t2) /*  8 === 2 * 4\t*/\n    mul(t2, t0, x) /*  9 === 8 + 1\t*/\n    mul(t0, t2, t1) /* 11 === 9 + 2\t*/\n    sqr(t1, t0) /* 22 === 2 * 11\t*/\n    mul(t3, t1, t2) /* 31 === 22 + 9 === 2^5   - 2^0\t*/\n    sqr(t1, t3) /* 2^6   - 2^1\t*/\n    sqr(t2, t1) /* 2^7   - 2^2\t*/\n    sqr(t1, t2) /* 2^8   - 2^3\t*/\n    sqr(t2, t1) /* 2^9   - 2^4\t*/\n    sqr(t1, t2) /* 2^10  - 2^5\t*/\n    mul(t2, t1, t3) /* 2^10  - 2^0\t*/\n    sqr(t1, t2) /* 2^11  - 2^1\t*/\n    sqr(t3, t1) /* 2^12  - 2^2\t*/\n    for (i = 1; i < 5; i++) {\n      sqr(t1, t3)\n      sqr(t3, t1)\n    } /* 2^20  - 2^10\t*/ /* t3 */\n    mul(t1, t3, t2) /* 2^20  - 2^0\t*/\n    sqr(t3, t1) /* 2^21  - 2^1\t*/\n    sqr(t4, t3) /* 2^22  - 2^2\t*/\n    for (i = 1; i < 10; i++) {\n      sqr(t3, t4)\n      sqr(t4, t3)\n    } /* 2^40  - 2^20\t*/ /* t4 */\n    mul(t3, t4, t1) /* 2^40  - 2^0\t*/\n    for (i = 0; i < 5; i++) {\n      sqr(t1, t3)\n      sqr(t3, t1)\n    } /* 2^50  - 2^10\t*/ /* t3 */\n    mul(t1, t3, t2) /* 2^50  - 2^0\t*/\n    sqr(t2, t1) /* 2^51  - 2^1\t*/\n    sqr(t3, t2) /* 2^52  - 2^2\t*/\n    for (i = 1; i < 25; i++) {\n      sqr(t2, t3)\n      sqr(t3, t2)\n    } /* 2^100 - 2^50 */ /* t3 */\n    mul(t2, t3, t1) /* 2^100 - 2^0\t*/\n    sqr(t3, t2) /* 2^101 - 2^1\t*/\n    sqr(t4, t3) /* 2^102 - 2^2\t*/\n    for (i = 1; i < 50; i++) {\n      sqr(t3, t4)\n      sqr(t4, t3)\n    } /* 2^200 - 2^100 */ /* t4 */\n    mul(t3, t4, t2) /* 2^200 - 2^0\t*/\n    for (i = 0; i < 25; i++) {\n      sqr(t4, t3)\n      sqr(t3, t4)\n    } /* 2^250 - 2^50\t*/ /* t3 */\n    mul(t2, t3, t1) /* 2^250 - 2^0\t*/\n    sqr(t1, t2) /* 2^251 - 2^1\t*/\n    sqr(t2, t1) /* 2^252 - 2^2\t*/\n    if (sqrtassist !== 0) {\n      mul(y, x, t2) /* 2^252 - 3 */\n    } else {\n      sqr(t1, t2) /* 2^253 - 2^3\t*/\n      sqr(t2, t1) /* 2^254 - 2^4\t*/\n      sqr(t1, t2) /* 2^255 - 2^5\t*/\n      mul(y, t1, t0) /* 2^255 - 21\t*/\n    }\n  }\n\n  /* checks if x is \"negative\", requires reduced input */\n  function is_negative(x: any) {\n    var isOverflowOrNegative = is_overflow(x) || x[9] < 0\n    var leastSignificantBit = x[0] & 1\n    return ((isOverflowOrNegative ? 1 : 0) ^ leastSignificantBit) & 0xffffffff\n  }\n\n  /* a square root */\n  function sqrt(x: any, u: any) {\n    var v = createUnpackedArray()\n    var t1 = createUnpackedArray()\n    var t2 = createUnpackedArray()\n\n    add(t1, u, u) /* t1 = 2u\t\t*/\n    recip(v, t1, 1) /* v = (2u)^((p-5)/8)\t*/\n    sqr(x, v) /* x = v^2\t\t*/\n    mul(t2, t1, x) /* t2 = 2uv^2\t\t*/\n    sub(t2, t2, C1) /* t2 = 2uv^2-1\t\t*/\n    mul(t1, v, t2) /* t1 = v(2uv^2-1)\t*/\n    mul(x, u, t1) /* x = uv(2uv^2-1)\t*/\n  }\n\n  //endregion\n\n  //region JavaScript Fast Math\n\n  function c255lsqr8h(a7: any, a6: any, a5: any, a4: any, a3: any, a2: any, a1: any, a0: any) {\n    var r = []\n    var v\n    r[0] = (v = a0 * a0) & 0xffff\n    r[1] = (v = ((v / 0x10000) | 0) + 2 * a0 * a1) & 0xffff\n    r[2] = (v = ((v / 0x10000) | 0) + 2 * a0 * a2 + a1 * a1) & 0xffff\n    r[3] = (v = ((v / 0x10000) | 0) + 2 * a0 * a3 + 2 * a1 * a2) & 0xffff\n    r[4] = (v = ((v / 0x10000) | 0) + 2 * a0 * a4 + 2 * a1 * a3 + a2 * a2) & 0xffff\n    r[5] = (v = ((v / 0x10000) | 0) + 2 * a0 * a5 + 2 * a1 * a4 + 2 * a2 * a3) & 0xffff\n    r[6] = (v = ((v / 0x10000) | 0) + 2 * a0 * a6 + 2 * a1 * a5 + 2 * a2 * a4 + a3 * a3) & 0xffff\n    r[7] =\n      (v = ((v / 0x10000) | 0) + 2 * a0 * a7 + 2 * a1 * a6 + 2 * a2 * a5 + 2 * a3 * a4) & 0xffff\n    r[8] = (v = ((v / 0x10000) | 0) + 2 * a1 * a7 + 2 * a2 * a6 + 2 * a3 * a5 + a4 * a4) & 0xffff\n    r[9] = (v = ((v / 0x10000) | 0) + 2 * a2 * a7 + 2 * a3 * a6 + 2 * a4 * a5) & 0xffff\n    r[10] = (v = ((v / 0x10000) | 0) + 2 * a3 * a7 + 2 * a4 * a6 + a5 * a5) & 0xffff\n    r[11] = (v = ((v / 0x10000) | 0) + 2 * a4 * a7 + 2 * a5 * a6) & 0xffff\n    r[12] = (v = ((v / 0x10000) | 0) + 2 * a5 * a7 + a6 * a6) & 0xffff\n    r[13] = (v = ((v / 0x10000) | 0) + 2 * a6 * a7) & 0xffff\n    r[14] = (v = ((v / 0x10000) | 0) + a7 * a7) & 0xffff\n    r[15] = (v / 0x10000) | 0\n    return r\n  }\n\n  function c255lsqrmodp(r: any, a: any) {\n    var x = c255lsqr8h(a[15], a[14], a[13], a[12], a[11], a[10], a[9], a[8])\n    var z = c255lsqr8h(a[7], a[6], a[5], a[4], a[3], a[2], a[1], a[0])\n    var y = c255lsqr8h(\n      a[15] + a[7],\n      a[14] + a[6],\n      a[13] + a[5],\n      a[12] + a[4],\n      a[11] + a[3],\n      a[10] + a[2],\n      a[9] + a[1],\n      a[8] + a[0]\n    )\n\n    var v\n    r[0] = (v = 0x800000 + z[0] + (y[8] - x[8] - z[8] + x[0] - 0x80) * 38) & 0xffff\n    r[1] = (v = 0x7fff80 + ((v / 0x10000) | 0) + z[1] + (y[9] - x[9] - z[9] + x[1]) * 38) & 0xffff\n    r[2] =\n      (v = 0x7fff80 + ((v / 0x10000) | 0) + z[2] + (y[10] - x[10] - z[10] + x[2]) * 38) & 0xffff\n    r[3] =\n      (v = 0x7fff80 + ((v / 0x10000) | 0) + z[3] + (y[11] - x[11] - z[11] + x[3]) * 38) & 0xffff\n    r[4] =\n      (v = 0x7fff80 + ((v / 0x10000) | 0) + z[4] + (y[12] - x[12] - z[12] + x[4]) * 38) & 0xffff\n    r[5] =\n      (v = 0x7fff80 + ((v / 0x10000) | 0) + z[5] + (y[13] - x[13] - z[13] + x[5]) * 38) & 0xffff\n    r[6] =\n      (v = 0x7fff80 + ((v / 0x10000) | 0) + z[6] + (y[14] - x[14] - z[14] + x[6]) * 38) & 0xffff\n    r[7] =\n      (v = 0x7fff80 + ((v / 0x10000) | 0) + z[7] + (y[15] - x[15] - z[15] + x[7]) * 38) & 0xffff\n    r[8] = (v = 0x7fff80 + ((v / 0x10000) | 0) + z[8] + y[0] - x[0] - z[0] + x[8] * 38) & 0xffff\n    r[9] = (v = 0x7fff80 + ((v / 0x10000) | 0) + z[9] + y[1] - x[1] - z[1] + x[9] * 38) & 0xffff\n    r[10] = (v = 0x7fff80 + ((v / 0x10000) | 0) + z[10] + y[2] - x[2] - z[2] + x[10] * 38) & 0xffff\n    r[11] = (v = 0x7fff80 + ((v / 0x10000) | 0) + z[11] + y[3] - x[3] - z[3] + x[11] * 38) & 0xffff\n    r[12] = (v = 0x7fff80 + ((v / 0x10000) | 0) + z[12] + y[4] - x[4] - z[4] + x[12] * 38) & 0xffff\n    r[13] = (v = 0x7fff80 + ((v / 0x10000) | 0) + z[13] + y[5] - x[5] - z[5] + x[13] * 38) & 0xffff\n    r[14] = (v = 0x7fff80 + ((v / 0x10000) | 0) + z[14] + y[6] - x[6] - z[6] + x[14] * 38) & 0xffff\n    var r15 = 0x7fff80 + ((v / 0x10000) | 0) + z[15] + y[7] - x[7] - z[7] + x[15] * 38\n    c255lreduce(r, r15)\n  }\n\n  function c255lmul8h(\n    a7: any,\n    a6: any,\n    a5: any,\n    a4: any,\n    a3: any,\n    a2: any,\n    a1: any,\n    a0: any,\n    b7: any,\n    b6: any,\n    b5: any,\n    b4: any,\n    b3: any,\n    b2: any,\n    b1: any,\n    b0: any\n  ) {\n    var r = []\n    var v\n    r[0] = (v = a0 * b0) & 0xffff\n    r[1] = (v = ((v / 0x10000) | 0) + a0 * b1 + a1 * b0) & 0xffff\n    r[2] = (v = ((v / 0x10000) | 0) + a0 * b2 + a1 * b1 + a2 * b0) & 0xffff\n    r[3] = (v = ((v / 0x10000) | 0) + a0 * b3 + a1 * b2 + a2 * b1 + a3 * b0) & 0xffff\n    r[4] = (v = ((v / 0x10000) | 0) + a0 * b4 + a1 * b3 + a2 * b2 + a3 * b1 + a4 * b0) & 0xffff\n    r[5] =\n      (v = ((v / 0x10000) | 0) + a0 * b5 + a1 * b4 + a2 * b3 + a3 * b2 + a4 * b1 + a5 * b0) & 0xffff\n    r[6] =\n      (v =\n        ((v / 0x10000) | 0) + a0 * b6 + a1 * b5 + a2 * b4 + a3 * b3 + a4 * b2 + a5 * b1 + a6 * b0) &\n      0xffff\n    r[7] =\n      (v =\n        ((v / 0x10000) | 0) +\n        a0 * b7 +\n        a1 * b6 +\n        a2 * b5 +\n        a3 * b4 +\n        a4 * b3 +\n        a5 * b2 +\n        a6 * b1 +\n        a7 * b0) & 0xffff\n    r[8] =\n      (v =\n        ((v / 0x10000) | 0) + a1 * b7 + a2 * b6 + a3 * b5 + a4 * b4 + a5 * b3 + a6 * b2 + a7 * b1) &\n      0xffff\n    r[9] =\n      (v = ((v / 0x10000) | 0) + a2 * b7 + a3 * b6 + a4 * b5 + a5 * b4 + a6 * b3 + a7 * b2) & 0xffff\n    r[10] = (v = ((v / 0x10000) | 0) + a3 * b7 + a4 * b6 + a5 * b5 + a6 * b4 + a7 * b3) & 0xffff\n    r[11] = (v = ((v / 0x10000) | 0) + a4 * b7 + a5 * b6 + a6 * b5 + a7 * b4) & 0xffff\n    r[12] = (v = ((v / 0x10000) | 0) + a5 * b7 + a6 * b6 + a7 * b5) & 0xffff\n    r[13] = (v = ((v / 0x10000) | 0) + a6 * b7 + a7 * b6) & 0xffff\n    r[14] = (v = ((v / 0x10000) | 0) + a7 * b7) & 0xffff\n    r[15] = (v / 0x10000) | 0\n    return r\n  }\n\n  function c255lmulmodp(r: any, a: any, b: any) {\n    // Karatsuba multiplication scheme: x*y = (b^2+b)*x1*y1 - b*(x1-x0)*(y1-y0) + (b+1)*x0*y0\n    var x = c255lmul8h(\n      a[15],\n      a[14],\n      a[13],\n      a[12],\n      a[11],\n      a[10],\n      a[9],\n      a[8],\n      b[15],\n      b[14],\n      b[13],\n      b[12],\n      b[11],\n      b[10],\n      b[9],\n      b[8]\n    )\n    var z = c255lmul8h(\n      a[7],\n      a[6],\n      a[5],\n      a[4],\n      a[3],\n      a[2],\n      a[1],\n      a[0],\n      b[7],\n      b[6],\n      b[5],\n      b[4],\n      b[3],\n      b[2],\n      b[1],\n      b[0]\n    )\n    var y = c255lmul8h(\n      a[15] + a[7],\n      a[14] + a[6],\n      a[13] + a[5],\n      a[12] + a[4],\n      a[11] + a[3],\n      a[10] + a[2],\n      a[9] + a[1],\n      a[8] + a[0],\n      b[15] + b[7],\n      b[14] + b[6],\n      b[13] + b[5],\n      b[12] + b[4],\n      b[11] + b[3],\n      b[10] + b[2],\n      b[9] + b[1],\n      b[8] + b[0]\n    )\n\n    var v\n    r[0] = (v = 0x800000 + z[0] + (y[8] - x[8] - z[8] + x[0] - 0x80) * 38) & 0xffff\n    r[1] = (v = 0x7fff80 + ((v / 0x10000) | 0) + z[1] + (y[9] - x[9] - z[9] + x[1]) * 38) & 0xffff\n    r[2] =\n      (v = 0x7fff80 + ((v / 0x10000) | 0) + z[2] + (y[10] - x[10] - z[10] + x[2]) * 38) & 0xffff\n    r[3] =\n      (v = 0x7fff80 + ((v / 0x10000) | 0) + z[3] + (y[11] - x[11] - z[11] + x[3]) * 38) & 0xffff\n    r[4] =\n      (v = 0x7fff80 + ((v / 0x10000) | 0) + z[4] + (y[12] - x[12] - z[12] + x[4]) * 38) & 0xffff\n    r[5] =\n      (v = 0x7fff80 + ((v / 0x10000) | 0) + z[5] + (y[13] - x[13] - z[13] + x[5]) * 38) & 0xffff\n    r[6] =\n      (v = 0x7fff80 + ((v / 0x10000) | 0) + z[6] + (y[14] - x[14] - z[14] + x[6]) * 38) & 0xffff\n    r[7] =\n      (v = 0x7fff80 + ((v / 0x10000) | 0) + z[7] + (y[15] - x[15] - z[15] + x[7]) * 38) & 0xffff\n    r[8] = (v = 0x7fff80 + ((v / 0x10000) | 0) + z[8] + y[0] - x[0] - z[0] + x[8] * 38) & 0xffff\n    r[9] = (v = 0x7fff80 + ((v / 0x10000) | 0) + z[9] + y[1] - x[1] - z[1] + x[9] * 38) & 0xffff\n    r[10] = (v = 0x7fff80 + ((v / 0x10000) | 0) + z[10] + y[2] - x[2] - z[2] + x[10] * 38) & 0xffff\n    r[11] = (v = 0x7fff80 + ((v / 0x10000) | 0) + z[11] + y[3] - x[3] - z[3] + x[11] * 38) & 0xffff\n    r[12] = (v = 0x7fff80 + ((v / 0x10000) | 0) + z[12] + y[4] - x[4] - z[4] + x[12] * 38) & 0xffff\n    r[13] = (v = 0x7fff80 + ((v / 0x10000) | 0) + z[13] + y[5] - x[5] - z[5] + x[13] * 38) & 0xffff\n    r[14] = (v = 0x7fff80 + ((v / 0x10000) | 0) + z[14] + y[6] - x[6] - z[6] + x[14] * 38) & 0xffff\n    var r15 = 0x7fff80 + ((v / 0x10000) | 0) + z[15] + y[7] - x[7] - z[7] + x[15] * 38\n    c255lreduce(r, r15)\n  }\n\n  function c255lreduce(a: any, a15: any) {\n    var v = a15\n    a[15] = v & 0x7fff\n    v = ((v / 0x8000) | 0) * 19\n    for (var i = 0; i <= 14; ++i) {\n      a[i] = (v += a[i]) & 0xffff\n      v = (v / 0x10000) | 0\n    }\n\n    a[15] += v\n  }\n\n  function c255laddmodp(r: any, a: any, b: any) {\n    var v\n    r[0] = (v = (((a[15] / 0x8000) | 0) + ((b[15] / 0x8000) | 0)) * 19 + a[0] + b[0]) & 0xffff\n    for (var i = 1; i <= 14; ++i) r[i] = (v = ((v / 0x10000) | 0) + a[i] + b[i]) & 0xffff\n\n    r[15] = ((v / 0x10000) | 0) + (a[15] & 0x7fff) + (b[15] & 0x7fff)\n  }\n\n  function c255lsubmodp(r: any, a: any, b: any) {\n    var v\n    r[0] =\n      (v = 0x80000 + (((a[15] / 0x8000) | 0) - ((b[15] / 0x8000) | 0) - 1) * 19 + a[0] - b[0]) &\n      0xffff\n    for (var i = 1; i <= 14; ++i) r[i] = (v = ((v / 0x10000) | 0) + 0x7fff8 + a[i] - b[i]) & 0xffff\n\n    r[15] = ((v / 0x10000) | 0) + 0x7ff8 + (a[15] & 0x7fff) - (b[15] & 0x7fff)\n  }\n\n  function c255lmulasmall(r: any, a: any, m: any) {\n    var v\n    r[0] = (v = a[0] * m) & 0xffff\n    for (var i = 1; i <= 14; ++i) r[i] = (v = ((v / 0x10000) | 0) + a[i] * m) & 0xffff\n\n    var r15 = ((v / 0x10000) | 0) + a[15] * m\n    c255lreduce(r, r15)\n  }\n\n  //endregion\n\n  /********************* Elliptic curve *********************/\n\n  /* y^2 = x^3 + 486662 x^2 + x  over GF(2^255-19) */\n\n  /* t1 = ax + az\n  * t2 = ax - az  */\n  function mont_prep(t1: any, t2: any, ax: any, az: any) {\n    add(t1, ax, az)\n    sub(t2, ax, az)\n  }\n\n  /* A = P + Q   where\n  *  X(A) = ax/az\n  *  X(P) = (t1+t2)/(t1-t2)\n  *  X(Q) = (t3+t4)/(t3-t4)\n  *  X(P-Q) = dx\n  * clobbers t1 and t2, preserves t3 and t4  */\n  function mont_add(t1: any, t2: any, t3: any, t4: any, ax: any, az: any, dx: any) {\n    mul(ax, t2, t3)\n    mul(az, t1, t4)\n    add(t1, ax, az)\n    sub(t2, ax, az)\n    sqr(ax, t1)\n    sqr(t1, t2)\n    mul(az, t1, dx)\n  }\n\n  /* B = 2 * Q   where\n  *  X(B) = bx/bz\n  *  X(Q) = (t3+t4)/(t3-t4)\n  * clobbers t1 and t2, preserves t3 and t4  */\n  function mont_dbl(t1: any, t2: any, t3: any, t4: any, bx: any, bz: any) {\n    sqr(t1, t3)\n    sqr(t2, t4)\n    mul(bx, t1, t2)\n    sub(t2, t1, t2)\n    mul_small(bz, t2, 121665)\n    add(t1, t1, bz)\n    mul(bz, t1, t2)\n  }\n\n  /* Y^2 = X^3 + 486662 X^2 + X\n  * t is a temporary  */\n  function x_to_y2(t: any, y2: any, x: any) {\n    sqr(t, x)\n    mul_small(y2, x, 486662)\n    add(t, t, y2)\n    add(t, t, C1)\n    mul(y2, t, x)\n  }\n\n  /* P = kG   and  s = sign(P)/k  */\n  function core(Px: any, s: any, k: any, Gx: any) {\n    var dx = createUnpackedArray()\n    var t1 = createUnpackedArray()\n    var t2 = createUnpackedArray()\n    var t3 = createUnpackedArray()\n    var t4 = createUnpackedArray()\n    var x = [createUnpackedArray(), createUnpackedArray()]\n    var z = [createUnpackedArray(), createUnpackedArray()]\n    var i, j\n\n    /* unpack the base */\n    if (Gx !== null) unpack(dx, Gx)\n    else set(dx, 9)\n\n    /* 0G = point-at-infinity */\n    set(x[0], 1)\n    set(z[0], 0)\n\n    /* 1G = G */\n    cpy(x[1], dx)\n    set(z[1], 1)\n\n    for (i = 32; i-- !== 0; ) {\n      for (j = 8; j-- !== 0; ) {\n        /* swap arguments depending on bit */\n        var bit1 = ((k[i] & 0xff) >> j) & 1\n        var bit0 = (~(k[i] & 0xff) >> j) & 1\n        var ax = x[bit0]\n        var az = z[bit0]\n        var bx = x[bit1]\n        var bz = z[bit1]\n\n        /* a' = a + b\t*/\n        /* b' = 2 b\t*/\n        mont_prep(t1, t2, ax, az)\n        mont_prep(t3, t4, bx, bz)\n        mont_add(t1, t2, t3, t4, ax, az, dx)\n        mont_dbl(t1, t2, t3, t4, bx, bz)\n      }\n    }\n\n    recip(t1, z[0], 0)\n    mul(dx, x[0], t1)\n\n    pack(dx, Px)\n\n    /* calculate s such that s abs(P) = G  .. assumes G is std base point */\n    if (s !== null) {\n      x_to_y2(t2, t1, dx) /* t1 = Py^2  */\n      recip(t3, z[1], 0) /* where Q=P+G ... */\n      mul(t2, x[1], t3) /* t2 = Qx  */\n      add(t2, t2, dx) /* t2 = Qx + Px  */\n      add(t2, t2, C486671) /* t2 = Qx + Px + Gx + 486662  */\n      sub(dx, dx, C9) /* dx = Px - Gx  */\n      sqr(t3, dx) /* t3 = (Px - Gx)^2  */\n      mul(dx, t2, t3) /* dx = t2 (Px - Gx)^2  */\n      sub(dx, dx, t1) /* dx = t2 (Px - Gx)^2 - Py^2  */\n      sub(dx, dx, C39420360) /* dx = t2 (Px - Gx)^2 - Py^2 - Gy^2  */\n      mul(t1, dx, BASE_R2Y) /* t1 = -Py  */\n\n      if (is_negative(t1) !== 0)\n        /* sign is 1, so just copy  */\n        cpy32(s, k)\n      /* sign is -1, so negate  */ else mula_small(s, ORDER_TIMES_8, 0, k, 32, -1)\n\n      /* reduce s mod q\n       * (is this needed?  do it just in case, it's fast anyway) */\n      //divmod((dstptr) t1, s, 32, order25519, 32);\n\n      /* take reciprocal of s mod q */\n      var temp1 = new Array(32)\n      var temp2 = new Array(64)\n      var temp3 = new Array(64)\n      cpy32(temp1, ORDER)\n      cpy32(s, egcd32(temp2, temp3, s, temp1))\n      if ((s[31] & 0x80) !== 0) mula_small(s, s, 0, ORDER, 32, 1)\n    }\n  }\n\n  /********* DIGITAL SIGNATURES *********/\n\n  /* deterministic EC-KCDSA\n  *\n  *    s is the private key for signing\n  *    P is the corresponding public key\n  *    Z is the context data (signer public key or certificate, etc)\n  *\n  * signing:\n  *\n  *    m = hash(Z, message)\n  *    x = hash(m, s)\n  *    keygen25519(Y, NULL, x);\n  *    r = hash(Y);\n  *    h = m XOR r\n  *    sign25519(v, h, x, s);\n  *\n  *    output (v,r) as the signature\n  *\n  * verification:\n  *\n  *    m = hash(Z, message);\n  *    h = m XOR r\n  *    verify25519(Y, v, h, P)\n  *\n  *    confirm  r === hash(Y)\n  *\n  * It would seem to me that it would be simpler to have the signer directly do\n  * h = hash(m, Y) and send that to the recipient instead of r, who can verify\n  * the signature by checking h === hash(m, Y).  If there are any problems with\n  * such a scheme, please let me know.\n  *\n  * Also, EC-KCDSA (like most DS algorithms) picks x random, which is a waste of\n  * perfectly good entropy, but does allow Y to be calculated in advance of (or\n  * parallel to) hashing the message.\n  */\n\n  /* Signature generation primitive, calculates (x-h)s mod q\n  *   h  [in]  signature hash (of message, signature pub key, and context data)\n  *   x  [in]  signature private key\n  *   s  [in]  private key for signing\n  * returns signature value on success, undefined on failure (use different x or h)\n  */\n\n  function sign(h: any, x: any, s: any) {\n    // v = (x - h) s  mod q\n    var w, i\n    var h1 = new Array(32)\n    var x1 = new Array(32)\n    var tmp1 = new Array(64)\n    var tmp2 = new Array(64)\n\n    // Don't clobber the arguments, be nice!\n    cpy32(h1, h)\n    cpy32(x1, x)\n\n    // Reduce modulo group order\n    var tmp3 = new Array(32)\n    divmod(tmp3, h1, 32, ORDER, 32)\n    divmod(tmp3, x1, 32, ORDER, 32)\n\n    // v = x1 - h1\n    // If v is negative, add the group order to it to become positive.\n    // If v was already positive we don't have to worry about overflow\n    // when adding the order because v < ORDER and 2*ORDER < 2^256\n    var v = new Array(32)\n    mula_small(v, x1, 0, h1, 32, -1)\n    mula_small(v, v, 0, ORDER, 32, 1)\n\n    // tmp1 = (x-h)*s mod q\n    mula32(tmp1, v, s, 32, 1)\n    divmod(tmp2, tmp1, 64, ORDER, 32)\n\n    for (w = 0, i = 0; i < 32; i++) w |= v[i] = tmp1[i]\n\n    return w !== 0 ? v : undefined\n  }\n\n  /* Signature verification primitive, calculates Y = vP + hG\n  *   v  [in]  signature value\n  *   h  [in]  signature hash\n  *   P  [in]  public key\n  *   Returns signature public key\n  */\n  function verify(v: any, h: any, P: any) {\n    /* Y = v abs(P) + h G  */\n    var d = new Array(32)\n    var p = [createUnpackedArray(), createUnpackedArray()]\n    var s = [createUnpackedArray(), createUnpackedArray()]\n    var yx = [createUnpackedArray(), createUnpackedArray(), createUnpackedArray()]\n    var yz = [createUnpackedArray(), createUnpackedArray(), createUnpackedArray()]\n    var t1 = [createUnpackedArray(), createUnpackedArray(), createUnpackedArray()]\n    var t2 = [createUnpackedArray(), createUnpackedArray(), createUnpackedArray()]\n\n    var vi = 0,\n      hi = 0,\n      di = 0,\n      nvh = 0,\n      i,\n      j,\n      k\n\n    /* set p[0] to G and p[1] to P  */\n\n    set(p[0], 9)\n    unpack(p[1], P)\n\n    /* set s[0] to P+G and s[1] to P-G  */\n\n    /* s[0] = (Py^2 + Gy^2 - 2 Py Gy)/(Px - Gx)^2 - Px - Gx - 486662  */\n    /* s[1] = (Py^2 + Gy^2 + 2 Py Gy)/(Px - Gx)^2 - Px - Gx - 486662  */\n\n    x_to_y2(t1[0], t2[0], p[1]) /* t2[0] = Py^2  */\n    sqrt(t1[0], t2[0]) /* t1[0] = Py or -Py  */\n    j = is_negative(t1[0]) /*      ... check which  */\n    add(t2[0], t2[0], C39420360) /* t2[0] = Py^2 + Gy^2  */\n    mul(t2[1], BASE_2Y, t1[0]) /* t2[1] = 2 Py Gy or -2 Py Gy  */\n    sub(t1[j], t2[0], t2[1]) /* t1[0] = Py^2 + Gy^2 - 2 Py Gy  */\n    add(t1[1 - j], t2[0], t2[1]) /* t1[1] = Py^2 + Gy^2 + 2 Py Gy  */\n    cpy(t2[0], p[1]) /* t2[0] = Px  */\n    sub(t2[0], t2[0], C9) /* t2[0] = Px - Gx  */\n    sqr(t2[1], t2[0]) /* t2[1] = (Px - Gx)^2  */\n    recip(t2[0], t2[1], 0) /* t2[0] = 1/(Px - Gx)^2  */\n    mul(s[0], t1[0], t2[0]) /* s[0] = t1[0]/(Px - Gx)^2  */\n    sub(s[0], s[0], p[1]) /* s[0] = t1[0]/(Px - Gx)^2 - Px  */\n    sub(s[0], s[0], C486671) /* s[0] = X(P+G)  */\n    mul(s[1], t1[1], t2[0]) /* s[1] = t1[1]/(Px - Gx)^2  */\n    sub(s[1], s[1], p[1]) /* s[1] = t1[1]/(Px - Gx)^2 - Px  */\n    sub(s[1], s[1], C486671) /* s[1] = X(P-G)  */\n    mul_small(s[0], s[0], 1) /* reduce s[0] */\n    mul_small(s[1], s[1], 1) /* reduce s[1] */\n\n    /* prepare the chain  */\n    for (i = 0; i < 32; i++) {\n      vi = (vi >> 8) ^ (v[i] & 0xff) ^ ((v[i] & 0xff) << 1)\n      hi = (hi >> 8) ^ (h[i] & 0xff) ^ ((h[i] & 0xff) << 1)\n      nvh = ~(vi ^ hi)\n      di = (nvh & ((di & 0x80) >> 7)) ^ vi\n      di ^= nvh & ((di & 0x01) << 1)\n      di ^= nvh & ((di & 0x02) << 1)\n      di ^= nvh & ((di & 0x04) << 1)\n      di ^= nvh & ((di & 0x08) << 1)\n      di ^= nvh & ((di & 0x10) << 1)\n      di ^= nvh & ((di & 0x20) << 1)\n      di ^= nvh & ((di & 0x40) << 1)\n      d[i] = di & 0xff\n    }\n\n    di = ((nvh & ((di & 0x80) << 1)) ^ vi) >> 8\n\n    /* initialize state */\n    set(yx[0], 1)\n    cpy(yx[1], p[di])\n    cpy(yx[2], s[0])\n    set(yz[0], 0)\n    set(yz[1], 1)\n    set(yz[2], 1)\n\n    /* y[0] is (even)P + (even)G\n     * y[1] is (even)P + (odd)G  if current d-bit is 0\n     * y[1] is (odd)P + (even)G  if current d-bit is 1\n     * y[2] is (odd)P + (odd)G\n     */\n\n    vi = 0\n    hi = 0\n\n    /* and go for it! */\n    for (i = 32; i-- !== 0; ) {\n      vi = (vi << 8) | (v[i] & 0xff)\n      hi = (hi << 8) | (h[i] & 0xff)\n      di = (di << 8) | (d[i] & 0xff)\n\n      for (j = 8; j-- !== 0; ) {\n        mont_prep(t1[0], t2[0], yx[0], yz[0])\n        mont_prep(t1[1], t2[1], yx[1], yz[1])\n        mont_prep(t1[2], t2[2], yx[2], yz[2])\n\n        k = (((vi ^ (vi >> 1)) >> j) & 1) + (((hi ^ (hi >> 1)) >> j) & 1)\n        mont_dbl(yx[2], yz[2], t1[k], t2[k], yx[0], yz[0])\n\n        k = ((di >> j) & 2) ^ (((di >> j) & 1) << 1)\n        mont_add(t1[1], t2[1], t1[k], t2[k], yx[1], yz[1], p[(di >> j) & 1])\n\n        mont_add(t1[2], t2[2], t1[0], t2[0], yx[2], yz[2], s[(((vi ^ hi) >> j) & 2) >> 1])\n      }\n    }\n\n    k = (vi & 1) + (hi & 1)\n    recip(t1[0], yz[k], 0)\n    mul(t1[1], yx[k], t1[0])\n\n    var Y: any[] = []\n    pack(t1[1], Y)\n    return Y\n  }\n\n  /* Key-pair generation\n  *   P  [out] your public key\n  *   s  [out] your private key for signing\n  *   k  [out] your private key for key agreement\n  *   k  [in]  32 random bytes\n  * s may be NULL if you don't care\n  *\n  * WARNING: if s is not NULL, this function has data-dependent timing */\n  function keygen(k: any) {\n    var P: any[] = []\n    var s: any[] = []\n    k = k || []\n    clamp(k)\n    core(P, s, k, null)\n\n    return { p: P, s: s, k: k }\n  }\n\n  return {\n    sign: sign,\n    verify: verify,\n    keygen: keygen\n  }\n})()\n\n// ==================================================================================================\n// END INCLUDE FILE curve25519.js\n// ==================================================================================================\n\n// ==================================================================================================\n// START INCLUDE FILE jssha256.js\n// ==================================================================================================\n\n/*\n*  jssha256 version 0.1  -  Copyright 2006 B. Poettering\n*\n*  This program is free software; you can redistribute it and/or\n*  modify it under the terms of the GNU General Public License as\n*  published by the Free Software Foundation; either version 2 of the\n*  License, or (at your option) any later version.\n*\n*  This program is distributed in the hope that it will be useful,\n*  but WITHOUT ANY WARRANTY; without even the implied warranty of\n*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n*  General Public License for more details.\n*\n*  You should have received a copy of the GNU General Public License\n*  along with this program; if not, write to the Free Software\n*  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n*  02111-1307 USA\n*/\n\n/*\n* http://point-at-infinity.org/jssha256/\n*\n* This is a JavaScript implementation of the SHA256 secure hash function\n* and the HMAC-SHA256 message authentication code (MAC).\n*\n* The routines' well-functioning has been verified with the test vectors\n* given in FIPS-180-2, Appendix B and IETF RFC 4231. The HMAC algorithm\n* conforms to IETF RFC 2104.\n*\n* The following code example computes the hash value of the string \"abc\".\n*\n*    SHA256_init();\n*    SHA256_write(\"abc\");\n*    digest = SHA256_finalize();\n*    digest_hex = array_to_hex_string(digest);\n*\n* Get the same result by calling the shortcut function SHA256_hash:\n*\n*    digest_hex = SHA256_hash(\"abc\");\n*\n* In the following example the calculation of the HMAC of the string \"abc\"\n* using the key \"secret key\" is shown:\n*\n*    HMAC_SHA256_init(\"secret key\");\n*    HMAC_SHA256_write(\"abc\");\n*    mac = HMAC_SHA256_finalize();\n*    mac_hex = array_to_hex_string(mac);\n*\n* Again, the same can be done more conveniently:\n*\n*    mac_hex = HMAC_SHA256_MAC(\"secret key\", \"abc\");\n*\n* Note that the internal state of the hash function is held in global\n* variables. Therefore one hash value calculation has to be completed\n* before the next is begun. The same applies the the HMAC routines.\n*\n* Report bugs to: jssha256 AT point-at-infinity.org\n*\n*/\n\n/******************************************************************************/\n\n/* Two all purpose helper functions follow */\n\n/* string_to_array: convert a string to a character (byte) array */\n\nfunction string_to_array(str: any) {\n  var len = str.length\n  var res = new Array(len)\n  for (var i = 0; i < len; i++) res[i] = str.charCodeAt(i)\n  return res\n}\n\n/******************************************************************************/\n\n/* The following are the SHA256 routines */\n\n/*\nSHA256_init: initialize the internal state of the hash function. Call this\nfunction before calling the SHA256_write function.\n*/\n\nvar SHA256_buf = new Array()\nvar SHA256_len = 0\nvar SHA256_H = new Array()\n\nfunction SHA256_init() {\n  SHA256_H = new Array(\n    0x6a09e667,\n    0xbb67ae85,\n    0x3c6ef372,\n    0xa54ff53a,\n    0x510e527f,\n    0x9b05688c,\n    0x1f83d9ab,\n    0x5be0cd19\n  )\n\n  SHA256_buf = new Array()\n  SHA256_len = 0\n}\n\n/*\nSHA256_write: add a message fragment to the hash function's internal state.\n'msg' may be given as string or as byte array and may have arbitrary length.\n\n*/\n\nfunction SHA256_write(msg: any) {\n  if (typeof msg == \"string\") SHA256_buf = SHA256_buf.concat(string_to_array(msg))\n  else SHA256_buf = SHA256_buf.concat(msg)\n\n  for (var i = 0; i + 64 <= SHA256_buf.length; i += 64)\n    SHA256_Hash_Byte_Block(SHA256_H, SHA256_buf.slice(i, i + 64))\n\n  SHA256_buf = SHA256_buf.slice(i)\n\n  SHA256_len += msg.length\n}\n\n/*\nSHA256_finalize: finalize the hash value calculation. Call this function\nafter the last call to SHA256_write. An array of 32 bytes (= 256 bits)\nis returned.\n*/\n\nfunction SHA256_finalize() {\n  SHA256_buf[SHA256_buf.length] = 0x80\n\n  if (SHA256_buf.length > 64 - 8) {\n    for (var i = SHA256_buf.length; i < 64; i++) SHA256_buf[i] = 0\n    SHA256_Hash_Byte_Block(SHA256_H, SHA256_buf)\n    SHA256_buf.length = 0\n  }\n\n  for (var i = SHA256_buf.length; i < 64 - 5; i++) SHA256_buf[i] = 0\n  SHA256_buf[59] = (SHA256_len >>> 29) & 0xff\n  SHA256_buf[60] = (SHA256_len >>> 21) & 0xff\n  SHA256_buf[61] = (SHA256_len >>> 13) & 0xff\n  SHA256_buf[62] = (SHA256_len >>> 5) & 0xff\n  SHA256_buf[63] = (SHA256_len << 3) & 0xff\n  SHA256_Hash_Byte_Block(SHA256_H, SHA256_buf)\n\n  var res = new Array(32)\n  for (var i = 0; i < 8; i++) {\n    res[4 * i + 0] = SHA256_H[i] >>> 24\n    res[4 * i + 1] = (SHA256_H[i] >> 16) & 0xff\n    res[4 * i + 2] = (SHA256_H[i] >> 8) & 0xff\n    res[4 * i + 3] = SHA256_H[i] & 0xff\n  }\n\n  SHA256_H = <any>undefined\n  SHA256_buf = <any>undefined\n  SHA256_len = <any>undefined\n\n  return res\n}\n\n/******************************************************************************/\n\n/* The following are the HMAC-SHA256 routines */\n\n/*\nHMAC_SHA256_init: initialize the MAC's internal state. The MAC key 'key'\nmay be given as string or as byte array and may have arbitrary length.\n*/\n\nvar HMAC_SHA256_key: any\n\nfunction HMAC_SHA256_init(key: any) {\n  if (typeof key == \"string\") HMAC_SHA256_key = string_to_array(key)\n  else HMAC_SHA256_key = new Array().concat(key)\n\n  if (HMAC_SHA256_key.length > 64) {\n    SHA256_init()\n    SHA256_write(HMAC_SHA256_key)\n    HMAC_SHA256_key = SHA256_finalize()\n  }\n\n  for (let i = HMAC_SHA256_key.length; i < 64; i++) HMAC_SHA256_key[i] = 0\n  for (let i = 0; i < 64; i++) HMAC_SHA256_key[i] ^= 0x36\n  SHA256_init()\n  SHA256_write(HMAC_SHA256_key)\n}\n\n/*\nHMAC_SHA256_write: process a message fragment. 'msg' may be given as\nstring or as byte array and may have arbitrary length.\n*/\n\nfunction HMAC_SHA256_write(msg: any) {\n  SHA256_write(msg)\n}\n\n/*\nHMAC_SHA256_finalize: finalize the HMAC calculation. An array of 32 bytes\n(= 256 bits) is returned.\n*/\n\nfunction HMAC_SHA256_finalize() {\n  var md = SHA256_finalize()\n  for (var i = 0; i < 64; i++) HMAC_SHA256_key[i] ^= 0x36 ^ 0x5c\n  SHA256_init()\n  SHA256_write(HMAC_SHA256_key)\n  SHA256_write(md)\n  for (var i = 0; i < 64; i++) HMAC_SHA256_key[i] = 0\n  HMAC_SHA256_key = undefined\n  return SHA256_finalize()\n}\n\n/******************************************************************************/\n\n/* The following lookup tables and functions are for internal use only! */\n\nvar SHA256_hexchars = new Array(\n  \"0\",\n  \"1\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"a\",\n  \"b\",\n  \"c\",\n  \"d\",\n  \"e\",\n  \"f\"\n)\n\nvar SHA256_K = new Array(\n  0x428a2f98,\n  0x71374491,\n  0xb5c0fbcf,\n  0xe9b5dba5,\n  0x3956c25b,\n  0x59f111f1,\n  0x923f82a4,\n  0xab1c5ed5,\n  0xd807aa98,\n  0x12835b01,\n  0x243185be,\n  0x550c7dc3,\n  0x72be5d74,\n  0x80deb1fe,\n  0x9bdc06a7,\n  0xc19bf174,\n  0xe49b69c1,\n  0xefbe4786,\n  0x0fc19dc6,\n  0x240ca1cc,\n  0x2de92c6f,\n  0x4a7484aa,\n  0x5cb0a9dc,\n  0x76f988da,\n  0x983e5152,\n  0xa831c66d,\n  0xb00327c8,\n  0xbf597fc7,\n  0xc6e00bf3,\n  0xd5a79147,\n  0x06ca6351,\n  0x14292967,\n  0x27b70a85,\n  0x2e1b2138,\n  0x4d2c6dfc,\n  0x53380d13,\n  0x650a7354,\n  0x766a0abb,\n  0x81c2c92e,\n  0x92722c85,\n  0xa2bfe8a1,\n  0xa81a664b,\n  0xc24b8b70,\n  0xc76c51a3,\n  0xd192e819,\n  0xd6990624,\n  0xf40e3585,\n  0x106aa070,\n  0x19a4c116,\n  0x1e376c08,\n  0x2748774c,\n  0x34b0bcb5,\n  0x391c0cb3,\n  0x4ed8aa4a,\n  0x5b9cca4f,\n  0x682e6ff3,\n  0x748f82ee,\n  0x78a5636f,\n  0x84c87814,\n  0x8cc70208,\n  0x90befffa,\n  0xa4506ceb,\n  0xbef9a3f7,\n  0xc67178f2\n)\n\nfunction SHA256_sigma0(x: any) {\n  return ((x >>> 7) | (x << 25)) ^ ((x >>> 18) | (x << 14)) ^ (x >>> 3)\n}\n\nfunction SHA256_sigma1(x: any) {\n  return ((x >>> 17) | (x << 15)) ^ ((x >>> 19) | (x << 13)) ^ (x >>> 10)\n}\n\nfunction SHA256_Sigma0(x: any) {\n  return ((x >>> 2) | (x << 30)) ^ ((x >>> 13) | (x << 19)) ^ ((x >>> 22) | (x << 10))\n}\n\nfunction SHA256_Sigma1(x: any) {\n  return ((x >>> 6) | (x << 26)) ^ ((x >>> 11) | (x << 21)) ^ ((x >>> 25) | (x << 7))\n}\n\nfunction SHA256_Ch(x: any, y: any, z: any) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction SHA256_Maj(x: any, y: any, z: any) {\n  return (x & y) ^ (z & (x ^ y))\n}\n\nfunction SHA256_Hash_Word_Block(H: any, W: any) {\n  for (var i = 16; i < 64; i++)\n    W[i] = (SHA256_sigma1(W[i - 2]) + W[i - 7] + SHA256_sigma0(W[i - 15]) + W[i - 16]) & 0xffffffff\n  var state = new Array().concat(H)\n\n  for (var i = 0; i < 64; i++) {\n    var T1 =\n      state[7] +\n      SHA256_Sigma1(state[4]) +\n      SHA256_Ch(state[4], state[5], state[6]) +\n      SHA256_K[i] +\n      W[i]\n    var T2 = SHA256_Sigma0(state[0]) + SHA256_Maj(state[0], state[1], state[2])\n    state.pop()\n    state.unshift((T1 + T2) & 0xffffffff)\n    state[4] = (state[4] + T1) & 0xffffffff\n  }\n\n  for (var i = 0; i < 8; i++) H[i] = (H[i] + state[i]) & 0xffffffff\n}\n\nfunction SHA256_Hash_Byte_Block(H: any, w: any) {\n  var W = new Array(16)\n  for (var i = 0; i < 16; i++)\n    W[i] = (w[4 * i + 0] << 24) | (w[4 * i + 1] << 16) | (w[4 * i + 2] << 8) | w[4 * i + 3]\n\n  SHA256_Hash_Word_Block(H, W)\n}\n\n// ==================================================================================================\n// END INCLUDE FILE jssha256.js\n// ==================================================================================================\n\n// ==================================================================================================\n// START INCLUDE FILE cryptojs/aes.js\n// ==================================================================================================\n\ndeclare function escape(s: string): string\ndeclare function unescape(s: string): string\n\n/*\nCryptoJS v3.1.2\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/\nvar CryptoJS = (function(u?: any, p?: any) {\n  var d: any = {},\n    l: any = (d.lib = {}),\n    s = class {},\n    t = (l.Base = <any>{\n      extend: function(a: any) {\n        s.prototype = this\n        var c: any = new s()\n        a && c.mixIn(a)\n        c.hasOwnProperty(\"init\") ||\n          (c.init = function() {\n            c.$super.init.apply(this, arguments)\n          })\n        c.init.prototype = c\n        c.$super = this\n        return c\n      },\n      create: function() {\n        var a = this.extend()\n        a.init.apply(a, arguments)\n        return a\n      },\n      init: function() {},\n      mixIn: function(a: any) {\n        for (var c in a) a.hasOwnProperty(c) && (this[c] = a[c])\n        a.hasOwnProperty(\"toString\") && (this.toString = a.toString)\n      },\n      clone: function() {\n        return this.init.prototype.extend(this)\n      }\n    }),\n    r = (l.WordArray = t.extend({\n      init: function(a: any, c: any) {\n        a = this.words = a || []\n        this.sigBytes = c != p ? c : 4 * a.length\n      },\n      toString: function(a: any) {\n        return (a || v).stringify(this)\n      },\n      concat: function(a: any) {\n        var c = this.words,\n          e = a.words,\n          j = this.sigBytes\n        a = a.sigBytes\n        this.clamp()\n        if (j % 4)\n          for (var k = 0; k < a; k++)\n            c[(j + k) >>> 2] |=\n              ((e[k >>> 2] >>> (24 - 8 * (k % 4))) & 255) << (24 - 8 * ((j + k) % 4))\n        else if (65535 < e.length) for (k = 0; k < a; k += 4) c[(j + k) >>> 2] = e[k >>> 2]\n        else c.push.apply(c, e)\n        this.sigBytes += a\n        return this\n      },\n      clamp: function() {\n        var a = this.words,\n          c = this.sigBytes\n        a[c >>> 2] &= 4294967295 << (32 - 8 * (c % 4))\n        a.length = u.ceil(c / 4)\n      },\n      clone: function() {\n        var a = t.clone.call(this)\n        a.words = this.words.slice(0)\n        return a\n      },\n      random: function(a: any) {\n        for (var c = [], e = 0; e < a; e += 4) c.push((4294967296 * u.random()) | 0)\n        return new r.init(c, a)\n      }\n    })),\n    w: any = (d.enc = {}),\n    v = (w.Hex = {\n      stringify: function(a: any) {\n        var c = a.words\n        a = a.sigBytes\n        for (var e = [], j = 0; j < a; j++) {\n          var k = (c[j >>> 2] >>> (24 - 8 * (j % 4))) & 255\n          e.push((k >>> 4).toString(16))\n          e.push((k & 15).toString(16))\n        }\n        return e.join(\"\")\n      },\n      parse: function(a: any) {\n        for (var c = a.length, e: any[] = [], j = 0; j < c; j += 2)\n          e[j >>> 3] |= parseInt(a.substr(j, 2), 16) << (24 - 4 * (j % 8))\n        return new r.init(e, c / 2)\n      }\n    }),\n    b = (w.Latin1 = {\n      stringify: function(a: any) {\n        var c = a.words\n        a = a.sigBytes\n        for (var e = [], j = 0; j < a; j++)\n          e.push(String.fromCharCode((c[j >>> 2] >>> (24 - 8 * (j % 4))) & 255))\n        return e.join(\"\")\n      },\n      parse: function(a: any) {\n        for (var c = a.length, e: any[] = [], j = 0; j < c; j++)\n          e[j >>> 2] |= (a.charCodeAt(j) & 255) << (24 - 8 * (j % 4))\n        return new r.init(e, c)\n      }\n    }),\n    x = (w.Utf8 = {\n      stringify: function(a: any) {\n        try {\n          return decodeURIComponent(escape(b.stringify(a)))\n        } catch (c) {\n          throw Error(\"Malformed UTF-8 data\")\n        }\n      },\n      parse: function(a: any) {\n        return b.parse(unescape(encodeURIComponent(a)))\n      }\n    }),\n    q = (l.BufferedBlockAlgorithm = t.extend({\n      reset: function() {\n        this._data = new r.init()\n        this._nDataBytes = 0\n      },\n      _append: function(a: any) {\n        \"string\" == typeof a && (a = x.parse(a))\n        this._data.concat(a)\n        this._nDataBytes += a.sigBytes\n      },\n      _process: function(a: any) {\n        var c = this._data,\n          e = c.words,\n          j = c.sigBytes,\n          k = this.blockSize,\n          b: any = j / (4 * k),\n          b: any = a ? u.ceil(b) : u.max((b | 0) - this._minBufferSize, 0)\n        a = b * k\n        j = u.min(4 * a, j)\n        var q\n        if (a) {\n          for (q = 0; q < a; q += k) this._doProcessBlock(e, q)\n          q = e.splice(0, a)\n          c.sigBytes -= j\n        }\n        return new r.init(q, j)\n      },\n      clone: function() {\n        var a = t.clone.call(this)\n        a._data = this._data.clone()\n        return a\n      },\n      _minBufferSize: 0\n    }))\n  l.Hasher = q.extend({\n    cfg: t.extend(),\n    init: function(a: any) {\n      this.cfg = this.cfg.extend(a)\n      this.reset()\n    },\n    reset: function() {\n      q.reset.call(this)\n      this._doReset()\n    },\n    update: function(a: any) {\n      this._append(a)\n      this._process()\n      return this\n    },\n    finalize: function(a: any) {\n      a && this._append(a)\n      return this._doFinalize()\n    },\n    blockSize: 16,\n    _createHelper: function(a: any) {\n      return function(b: any, e: any) {\n        return new a.init(e).finalize(b)\n      }\n    },\n    _createHmacHelper: function(a: any) {\n      return function(b: any, e: any) {\n        return new n.HMAC.init(a, e).finalize(b)\n      }\n    }\n  })\n  var n: any = (d.algo = {})\n  return d\n})(Math)\n;(function() {\n  var u = CryptoJS,\n    p = u.lib.WordArray\n  u.enc.Base64 = {\n    stringify: function(d: any) {\n      var l = d.words,\n        p = d.sigBytes,\n        t = this._map\n      d.clamp()\n      d = []\n      for (var r = 0; r < p; r += 3)\n        for (\n          var w =\n              (((l[r >>> 2] >>> (24 - 8 * (r % 4))) & 255) << 16) |\n              (((l[(r + 1) >>> 2] >>> (24 - 8 * ((r + 1) % 4))) & 255) << 8) |\n              ((l[(r + 2) >>> 2] >>> (24 - 8 * ((r + 2) % 4))) & 255),\n            v = 0;\n          4 > v && r + 0.75 * v < p;\n          v++\n        )\n          d.push(t.charAt((w >>> (6 * (3 - v))) & 63))\n      if ((l = t.charAt(64))) for (; d.length % 4; ) d.push(l)\n      return d.join(\"\")\n    },\n    parse: function(d: any) {\n      var l = d.length,\n        s = this._map,\n        t = s.charAt(64)\n      t && ((t = d.indexOf(t)), -1 != t && (l = t))\n      t = []\n      var r = 0,\n        w = 0\n      for (; w < l; w++)\n        if (w % 4) {\n          var v = s.indexOf(d.charAt(w - 1)) << (2 * (w % 4)),\n            b = s.indexOf(d.charAt(w)) >>> (6 - 2 * (w % 4))\n          t[r >>> 2] |= (v | b) << (24 - 8 * (r % 4))\n          r++\n        }\n      return p.create(t, r)\n    },\n    _map: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\"\n  }\n})()\n;(function(u) {\n  function p(b: any, n: any, a: any, c: any, e: any, j: any, k: any) {\n    b = b + ((n & a) | (~n & c)) + e + k\n    return ((b << j) | (b >>> (32 - j))) + n\n  }\n\n  function d(b: any, n: any, a: any, c: any, e: any, j: any, k: any) {\n    b = b + ((n & c) | (a & ~c)) + e + k\n    return ((b << j) | (b >>> (32 - j))) + n\n  }\n\n  function l(b: any, n: any, a: any, c: any, e: any, j: any, k: any) {\n    b = b + (n ^ a ^ c) + e + k\n    return ((b << j) | (b >>> (32 - j))) + n\n  }\n\n  function s(b: any, n: any, a: any, c: any, e: any, j: any, k: any) {\n    b = b + (a ^ (n | ~c)) + e + k\n    return ((b << j) | (b >>> (32 - j))) + n\n  }\n  for (\n    var t = CryptoJS, r = t.lib, w = r.WordArray, v = r.Hasher, r = t.algo, b: any[] = [], x = 0;\n    64 > x;\n    x++\n  )\n    b[x] = (4294967296 * u.abs(u.sin(x + 1))) | 0\n  r = r.MD5 = v.extend({\n    _doReset: function() {\n      this._hash = new w.init([1732584193, 4023233417, 2562383102, 271733878])\n    },\n    _doProcessBlock: function(q: any, n: any) {\n      for (let a = 0; 16 > a; a++) {\n        var c = n + a,\n          e = q[c]\n        q[c] = (((e << 8) | (e >>> 24)) & 16711935) | (((e << 24) | (e >>> 8)) & 4278255360)\n      }\n      var a = this._hash.words,\n        c = q[n + 0],\n        e = q[n + 1],\n        j = q[n + 2],\n        k = q[n + 3],\n        z = q[n + 4],\n        r = q[n + 5],\n        t = q[n + 6],\n        w = q[n + 7],\n        v = q[n + 8],\n        A = q[n + 9],\n        B = q[n + 10],\n        C = q[n + 11],\n        u = q[n + 12],\n        D = q[n + 13],\n        E = q[n + 14],\n        x = q[n + 15],\n        f = a[0],\n        m = a[1],\n        g = a[2],\n        h = a[3],\n        f = p(f, m, g, h, c, 7, b[0]),\n        h = p(h, f, m, g, e, 12, b[1]),\n        g = p(g, h, f, m, j, 17, b[2]),\n        m = p(m, g, h, f, k, 22, b[3]),\n        f = p(f, m, g, h, z, 7, b[4]),\n        h = p(h, f, m, g, r, 12, b[5]),\n        g = p(g, h, f, m, t, 17, b[6]),\n        m = p(m, g, h, f, w, 22, b[7]),\n        f = p(f, m, g, h, v, 7, b[8]),\n        h = p(h, f, m, g, A, 12, b[9]),\n        g = p(g, h, f, m, B, 17, b[10]),\n        m = p(m, g, h, f, C, 22, b[11]),\n        f = p(f, m, g, h, u, 7, b[12]),\n        h = p(h, f, m, g, D, 12, b[13]),\n        g = p(g, h, f, m, E, 17, b[14]),\n        m = p(m, g, h, f, x, 22, b[15]),\n        f = d(f, m, g, h, e, 5, b[16]),\n        h = d(h, f, m, g, t, 9, b[17]),\n        g = d(g, h, f, m, C, 14, b[18]),\n        m = d(m, g, h, f, c, 20, b[19]),\n        f = d(f, m, g, h, r, 5, b[20]),\n        h = d(h, f, m, g, B, 9, b[21]),\n        g = d(g, h, f, m, x, 14, b[22]),\n        m = d(m, g, h, f, z, 20, b[23]),\n        f = d(f, m, g, h, A, 5, b[24]),\n        h = d(h, f, m, g, E, 9, b[25]),\n        g = d(g, h, f, m, k, 14, b[26]),\n        m = d(m, g, h, f, v, 20, b[27]),\n        f = d(f, m, g, h, D, 5, b[28]),\n        h = d(h, f, m, g, j, 9, b[29]),\n        g = d(g, h, f, m, w, 14, b[30]),\n        m = d(m, g, h, f, u, 20, b[31]),\n        f = l(f, m, g, h, r, 4, b[32]),\n        h = l(h, f, m, g, v, 11, b[33]),\n        g = l(g, h, f, m, C, 16, b[34]),\n        m = l(m, g, h, f, E, 23, b[35]),\n        f = l(f, m, g, h, e, 4, b[36]),\n        h = l(h, f, m, g, z, 11, b[37]),\n        g = l(g, h, f, m, w, 16, b[38]),\n        m = l(m, g, h, f, B, 23, b[39]),\n        f = l(f, m, g, h, D, 4, b[40]),\n        h = l(h, f, m, g, c, 11, b[41]),\n        g = l(g, h, f, m, k, 16, b[42]),\n        m = l(m, g, h, f, t, 23, b[43]),\n        f = l(f, m, g, h, A, 4, b[44]),\n        h = l(h, f, m, g, u, 11, b[45]),\n        g = l(g, h, f, m, x, 16, b[46]),\n        m = l(m, g, h, f, j, 23, b[47]),\n        f = s(f, m, g, h, c, 6, b[48]),\n        h = s(h, f, m, g, w, 10, b[49]),\n        g = s(g, h, f, m, E, 15, b[50]),\n        m = s(m, g, h, f, r, 21, b[51]),\n        f = s(f, m, g, h, u, 6, b[52]),\n        h = s(h, f, m, g, k, 10, b[53]),\n        g = s(g, h, f, m, B, 15, b[54]),\n        m = s(m, g, h, f, e, 21, b[55]),\n        f = s(f, m, g, h, v, 6, b[56]),\n        h = s(h, f, m, g, x, 10, b[57]),\n        g = s(g, h, f, m, t, 15, b[58]),\n        m = s(m, g, h, f, D, 21, b[59]),\n        f = s(f, m, g, h, z, 6, b[60]),\n        h = s(h, f, m, g, C, 10, b[61]),\n        g = s(g, h, f, m, j, 15, b[62]),\n        m = s(m, g, h, f, A, 21, b[63])\n      a[0] = (a[0] + f) | 0\n      a[1] = (a[1] + m) | 0\n      a[2] = (a[2] + g) | 0\n      a[3] = (a[3] + h) | 0\n    },\n    _doFinalize: function() {\n      var b = this._data,\n        n = b.words,\n        a = 8 * this._nDataBytes,\n        c = 8 * b.sigBytes\n      n[c >>> 5] |= 128 << (24 - c % 32)\n      var e = u.floor(a / 4294967296)\n      n[(((c + 64) >>> 9) << 4) + 15] =\n        (((e << 8) | (e >>> 24)) & 16711935) | (((e << 24) | (e >>> 8)) & 4278255360)\n      n[(((c + 64) >>> 9) << 4) + 14] =\n        (((a << 8) | (a >>> 24)) & 16711935) | (((a << 24) | (a >>> 8)) & 4278255360)\n      b.sigBytes = 4 * (n.length + 1)\n      this._process()\n      b = this._hash\n      n = b.words\n      for (a = 0; 4 > a; a++)\n        (c = n[a]),\n          (n[a] = (((c << 8) | (c >>> 24)) & 16711935) | (((c << 24) | (c >>> 8)) & 4278255360))\n      return b\n    },\n    clone: function() {\n      var b = v.clone.call(this)\n      b._hash = this._hash.clone()\n      return b\n    }\n  })\n  t.MD5 = v._createHelper(r)\n  t.HmacMD5 = v._createHmacHelper(r)\n})(Math)\n;(function() {\n  var u = CryptoJS,\n    p = u.lib,\n    d = p.Base,\n    l = p.WordArray,\n    p = u.algo,\n    s = (p.EvpKDF = d.extend({\n      cfg: d.extend({\n        keySize: 4,\n        hasher: p.MD5,\n        iterations: 1\n      }),\n      init: function(d: any) {\n        this.cfg = this.cfg.extend(d)\n      },\n      compute: function(d: any, r: any) {\n        for (\n          var p = this.cfg,\n            s = p.hasher.create(),\n            b = l.create(),\n            u = b.words,\n            q = p.keySize,\n            p = p.iterations;\n          u.length < q;\n\n        ) {\n          n && s.update(n)\n          var n = s.update(d).finalize(r)\n          s.reset()\n          for (var a = 1; a < p; a++) (n = s.finalize(n)), s.reset()\n          b.concat(n)\n        }\n        b.sigBytes = 4 * q\n        return b\n      }\n    }))\n  u.EvpKDF = function(d: any, l: any, p: any) {\n    return s.create(p).compute(d, l)\n  }\n})()\nCryptoJS.lib.Cipher ||\n  (function(u?: any) {\n    var p = CryptoJS,\n      d = p.lib,\n      l = d.Base,\n      s = d.WordArray,\n      t = d.BufferedBlockAlgorithm,\n      r = p.enc.Base64,\n      w = p.algo.EvpKDF,\n      v = (d.Cipher = t.extend({\n        cfg: l.extend(),\n        createEncryptor: function(e: any, a: any) {\n          return this.create(this._ENC_XFORM_MODE, e, a)\n        },\n        createDecryptor: function(e: any, a: any) {\n          return this.create(this._DEC_XFORM_MODE, e, a)\n        },\n        init: function(e: any, a: any, b: any) {\n          this.cfg = this.cfg.extend(b)\n          this._xformMode = e\n          this._key = a\n          this.reset()\n        },\n        reset: function() {\n          t.reset.call(this)\n          this._doReset()\n        },\n        process: function(e: any) {\n          this._append(e)\n          return this._process()\n        },\n        finalize: function(e: any) {\n          e && this._append(e)\n          return this._doFinalize()\n        },\n        keySize: 4,\n        ivSize: 4,\n        _ENC_XFORM_MODE: 1,\n        _DEC_XFORM_MODE: 2,\n        _createHelper: function(e: any) {\n          return {\n            encrypt: function(b: any, k: any, d: any) {\n              return (\"string\" == typeof k ? c : a).encrypt(e, b, k, d)\n            },\n            decrypt: function(b: any, k: any, d: any) {\n              return (\"string\" == typeof k ? c : a).decrypt(e, b, k, d)\n            }\n          }\n        }\n      }))\n    d.StreamCipher = v.extend({\n      _doFinalize: function() {\n        return this._process(!0)\n      },\n      blockSize: 1\n    })\n    var b: any = (p.mode = {}),\n      x = function(e: any, a: any, b: any) {\n        var c = this._iv\n        c ? (this._iv = u) : (c = this._prevBlock)\n        for (var d = 0; d < b; d++) e[a + d] ^= c[d]\n      },\n      q = (d.BlockCipherMode = l.extend({\n        createEncryptor: function(e: any, a: any) {\n          return this.Encryptor.create(e, a)\n        },\n        createDecryptor: function(e: any, a: any) {\n          return this.Decryptor.create(e, a)\n        },\n        init: function(e: any, a: any) {\n          this._cipher = e\n          this._iv = a\n        }\n      })).extend()\n    q.Encryptor = q.extend({\n      processBlock: function(e: any, a: any) {\n        var b = this._cipher,\n          c = b.blockSize\n        x.call(this, e, a, c)\n        b.encryptBlock(e, a)\n        this._prevBlock = e.slice(a, a + c)\n      }\n    })\n    q.Decryptor = q.extend({\n      processBlock: function(e: any, a: any) {\n        var b = this._cipher,\n          c = b.blockSize,\n          d = e.slice(a, a + c)\n        b.decryptBlock(e, a)\n        x.call(this, e, a, c)\n        this._prevBlock = d\n      }\n    })\n    b = b.CBC = q\n    q = (p.pad = <any>{}).Pkcs7 = {\n      pad: function(a: any, b: any) {\n        for (\n          var c = 4 * b,\n            c = c - a.sigBytes % c,\n            d = (c << 24) | (c << 16) | (c << 8) | c,\n            l = [],\n            n = 0;\n          n < c;\n          n += 4\n        )\n          l.push(d)\n        c = s.create(l, c)\n        a.concat(c)\n      },\n      unpad: function(a: any) {\n        a.sigBytes -= a.words[(a.sigBytes - 1) >>> 2] & 255\n      }\n    }\n    d.BlockCipher = v.extend({\n      cfg: v.cfg.extend({\n        mode: b,\n        padding: q\n      }),\n      reset: function() {\n        v.reset.call(this)\n        var a = this.cfg,\n          b = a.iv,\n          a = a.mode\n        if (this._xformMode == this._ENC_XFORM_MODE) var c = a.createEncryptor\n        else (c = a.createDecryptor), (this._minBufferSize = 1)\n        this._mode = c.call(a, this, b && b.words)\n      },\n      _doProcessBlock: function(a: any, b: any) {\n        this._mode.processBlock(a, b)\n      },\n      _doFinalize: function() {\n        var a = this.cfg.padding\n        if (this._xformMode == this._ENC_XFORM_MODE) {\n          a.pad(this._data, this.blockSize)\n          var b = this._process(!0)\n        } else (b = this._process(!0)), a.unpad(b)\n        return b\n      },\n      blockSize: 4\n    })\n    var n = (d.CipherParams = l.extend({\n        init: function(a: any) {\n          this.mixIn(a)\n        },\n        toString: function(a: any) {\n          return (a || this.formatter).stringify(this)\n        }\n      })),\n      b = ((p.format = <any>{}).OpenSSL = <any>{\n        stringify: function(a: any) {\n          var b = a.ciphertext\n          a = a.salt\n          return (a\n            ? s\n                .create([1398893684, 1701076831])\n                .concat(a)\n                .concat(b)\n            : b\n          ).toString(r)\n        },\n        parse: function(a: any) {\n          a = r.parse(a)\n          var b = a.words\n          if (1398893684 == b[0] && 1701076831 == b[1]) {\n            var c = s.create(b.slice(2, 4))\n            b.splice(0, 4)\n            a.sigBytes -= 16\n          }\n          return n.create({\n            ciphertext: a,\n            salt: c\n          })\n        }\n      }),\n      a = (d.SerializableCipher = l.extend({\n        cfg: l.extend({\n          format: b\n        }),\n        encrypt: function(a: any, b: any, c: any, d: any) {\n          d = this.cfg.extend(d)\n          var l = a.createEncryptor(c, d)\n          b = l.finalize(b)\n          l = l.cfg\n          return n.create({\n            ciphertext: b,\n            key: c,\n            iv: l.iv,\n            algorithm: a,\n            mode: l.mode,\n            padding: l.padding,\n            blockSize: a.blockSize,\n            formatter: d.format\n          })\n        },\n        decrypt: function(a: any, b: any, c: any, d: any) {\n          d = this.cfg.extend(d)\n          b = this._parse(b, d.format)\n          return a.createDecryptor(c, d).finalize(b.ciphertext)\n        },\n        _parse: function(a: any, b: any) {\n          return \"string\" == typeof a ? b.parse(a, this) : a\n        }\n      })),\n      p = ((p.kdf = <any>{}).OpenSSL = <any>{\n        execute: function(a: any, b: any, c: any, d: any) {\n          d || (d = s.random(8))\n          a = w\n            .create({\n              keySize: b + c\n            })\n            .compute(a, d)\n          c = s.create(a.words.slice(b), 4 * c)\n          a.sigBytes = 4 * b\n          return n.create({\n            key: a,\n            iv: c,\n            salt: d\n          })\n        }\n      }),\n      c = (d.PasswordBasedCipher = a.extend({\n        cfg: a.cfg.extend({\n          kdf: p\n        }),\n        encrypt: function(b: any, c: any, d: any, l: any) {\n          l = this.cfg.extend(l)\n          d = l.kdf.execute(d, b.keySize, b.ivSize)\n          l.iv = d.iv\n          b = a.encrypt.call(this, b, c, d.key, l)\n          b.mixIn(d)\n          return b\n        },\n        decrypt: function(b: any, c: any, d: any, l: any) {\n          l = this.cfg.extend(l)\n          c = this._parse(c, l.format)\n          d = l.kdf.execute(d, b.keySize, b.ivSize, c.salt)\n          l.iv = d.iv\n          return a.decrypt.call(this, b, c, d.key, l)\n        }\n      }))\n  })()\n;(function() {\n  for (\n    var u = CryptoJS,\n      p = u.lib.BlockCipher,\n      d = u.algo,\n      l: any[] = [],\n      s: any[] = [],\n      t: any[] = [],\n      r: any[] = [],\n      w: any[] = [],\n      v: any[] = [],\n      b: any[] = [],\n      x: any[] = [],\n      q: any[] = [],\n      n: any[] = [],\n      a = [],\n      c = 0;\n    256 > c;\n    c++\n  )\n    a[c] = 128 > c ? c << 1 : (c << 1) ^ 283\n  for (var e = 0, j = 0, c = 0; 256 > c; c++) {\n    var k = j ^ (j << 1) ^ (j << 2) ^ (j << 3) ^ (j << 4),\n      k = (k >>> 8) ^ (k & 255) ^ 99\n    l[e] = k\n    s[k] = e\n    var z = a[e],\n      F = a[z],\n      G = a[F],\n      y = (257 * a[k]) ^ (16843008 * k)\n    t[e] = (y << 24) | (y >>> 8)\n    r[e] = (y << 16) | (y >>> 16)\n    w[e] = (y << 8) | (y >>> 24)\n    v[e] = y\n    y = (16843009 * G) ^ (65537 * F) ^ (257 * z) ^ (16843008 * e)\n    b[k] = (y << 24) | (y >>> 8)\n    x[k] = (y << 16) | (y >>> 16)\n    q[k] = (y << 8) | (y >>> 24)\n    n[k] = y\n    e ? ((e = z ^ a[a[a[G ^ z]]]), (j ^= a[a[j]])) : (e = j = 1)\n  }\n  var H = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54],\n    d = (d.AES = p.extend({\n      _doReset: function() {\n        for (\n          var a = this._key,\n            c = a.words,\n            d = a.sigBytes / 4,\n            a = <any>(4 * ((this._nRounds = d + 6) + 1)),\n            e: any[] = (this._keySchedule = []),\n            j = 0;\n          j < a;\n          j++\n        )\n          if (j < d) e[j] = c[j]\n          else {\n            var k = e[j - 1]\n            j % d\n              ? 6 < d &&\n                4 == j % d &&\n                (k =\n                  (l[k >>> 24] << 24) |\n                  (l[(k >>> 16) & 255] << 16) |\n                  (l[(k >>> 8) & 255] << 8) |\n                  l[k & 255])\n              : ((k = (k << 8) | (k >>> 24)),\n                (k =\n                  (l[k >>> 24] << 24) |\n                  (l[(k >>> 16) & 255] << 16) |\n                  (l[(k >>> 8) & 255] << 8) |\n                  l[k & 255]),\n                (k ^= H[(j / d) | 0] << 24))\n            e[j] = e[j - d] ^ k\n          }\n        c = this._invKeySchedule = []\n        for (d = 0; d < a; d++)\n          (j = a - d),\n            (k = d % 4 ? e[j] : e[j - 4]),\n            (c[d] =\n              4 > d || 4 >= j\n                ? k\n                : b[l[k >>> 24]] ^ x[l[(k >>> 16) & 255]] ^ q[l[(k >>> 8) & 255]] ^ n[l[k & 255]])\n      },\n      encryptBlock: function(a: any, b: any) {\n        this._doCryptBlock(a, b, this._keySchedule, t, r, w, v, l)\n      },\n      decryptBlock: function(a: any, c: any) {\n        var d = a[c + 1]\n        a[c + 1] = a[c + 3]\n        a[c + 3] = d\n        this._doCryptBlock(a, c, this._invKeySchedule, b, x, q, n, s)\n        d = a[c + 1]\n        a[c + 1] = a[c + 3]\n        a[c + 3] = d\n      },\n      _doCryptBlock: function(a: any, b: any, c: any, d: any, e: any, j: any, l: any, f: any) {\n        for (\n          var m = this._nRounds,\n            g = a[b] ^ c[0],\n            h = a[b + 1] ^ c[1],\n            k = a[b + 2] ^ c[2],\n            n = a[b + 3] ^ c[3],\n            p = 4,\n            r = 1;\n          r < m;\n          r++\n        )\n          var q = d[g >>> 24] ^ e[(h >>> 16) & 255] ^ j[(k >>> 8) & 255] ^ l[n & 255] ^ c[p++],\n            s = d[h >>> 24] ^ e[(k >>> 16) & 255] ^ j[(n >>> 8) & 255] ^ l[g & 255] ^ c[p++],\n            t = d[k >>> 24] ^ e[(n >>> 16) & 255] ^ j[(g >>> 8) & 255] ^ l[h & 255] ^ c[p++],\n            n = d[n >>> 24] ^ e[(g >>> 16) & 255] ^ j[(h >>> 8) & 255] ^ l[k & 255] ^ c[p++],\n            g = q,\n            h = s,\n            k = t\n        q =\n          ((f[g >>> 24] << 24) |\n            (f[(h >>> 16) & 255] << 16) |\n            (f[(k >>> 8) & 255] << 8) |\n            f[n & 255]) ^\n          c[p++]\n        s =\n          ((f[h >>> 24] << 24) |\n            (f[(k >>> 16) & 255] << 16) |\n            (f[(n >>> 8) & 255] << 8) |\n            f[g & 255]) ^\n          c[p++]\n        t =\n          ((f[k >>> 24] << 24) |\n            (f[(n >>> 16) & 255] << 16) |\n            (f[(g >>> 8) & 255] << 8) |\n            f[h & 255]) ^\n          c[p++]\n        n =\n          ((f[n >>> 24] << 24) |\n            (f[(g >>> 16) & 255] << 16) |\n            (f[(h >>> 8) & 255] << 8) |\n            f[k & 255]) ^\n          c[p++]\n        a[b] = q\n        a[b + 1] = s\n        a[b + 2] = t\n        a[b + 3] = n\n      },\n      keySize: 8\n    }))\n  u.AES = p._createHelper(d)\n})()\n\n// ==================================================================================================\n// END INCLUDE FILE cryptojs/aes.js\n// ==================================================================================================\n\n// ==================================================================================================\n// START INCLUDE FILE cryptojs/hmac.js\n// ==================================================================================================\n;(function() {\n  // Shortcuts\n  var C = CryptoJS\n  var C_lib = C.lib\n  var Base = C_lib.Base\n  var C_enc = C.enc\n  var Utf8 = C_enc.Utf8\n  var C_algo = C.algo\n\n  /**\n   * HMAC algorithm.\n   */\n  var HMAC = (C_algo.HMAC = Base.extend({\n    /**\n     * Initializes a newly created HMAC.\n     *\n     * @param {Hasher} hasher The hash algorithm to use.\n     * @param {WordArray|string} key The secret key.\n     *\n     * @example\n     *\n     *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key)\n     */\n    init: function(hasher: any, key: any) {\n      // Init hasher\n      hasher = this._hasher = new hasher.init()\n\n      // Convert string to WordArray, else assume WordArray already\n      if (typeof key == \"string\") {\n        key = Utf8.parse(key)\n      }\n\n      // Shortcuts\n      var hasherBlockSize = hasher.blockSize\n      var hasherBlockSizeBytes = hasherBlockSize * 4\n\n      // Allow arbitrary length keys\n      if (key.sigBytes > hasherBlockSizeBytes) {\n        key = hasher.finalize(key)\n      }\n\n      // Clamp excess bits\n      key.clamp()\n\n      // Clone key for inner and outer pads\n      var oKey = (this._oKey = key.clone())\n      var iKey = (this._iKey = key.clone())\n\n      // Shortcuts\n      var oKeyWords = oKey.words\n      var iKeyWords = iKey.words\n\n      // XOR keys with pad constants\n      for (var i = 0; i < hasherBlockSize; i++) {\n        oKeyWords[i] ^= 0x5c5c5c5c\n        iKeyWords[i] ^= 0x36363636\n      }\n      oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes\n\n      // Set initial values\n      this.reset()\n    },\n\n    /**\n     * Resets this HMAC to its initial state.\n     *\n     * @example\n     *\n     *     hmacHasher.reset()\n     */\n    reset: function() {\n      // Shortcut\n      var hasher = this._hasher\n\n      // Reset\n      hasher.reset()\n      hasher.update(this._iKey)\n    },\n\n    /**\n     * Updates this HMAC with a message.\n     *\n     * @param {WordArray|string} messageUpdate The message to append.\n     *\n     * @return {HMAC} This HMAC instance.\n     *\n     * @example\n     *\n     *     hmacHasher.update('message')\n     *     hmacHasher.update(wordArray)\n     */\n    update: function(messageUpdate: any) {\n      this._hasher.update(messageUpdate)\n\n      // Chainable\n      return this\n    },\n\n    /**\n     * Finalizes the HMAC computation.\n     * Note that the finalize operation is effectively a destructive, read-once operation.\n     *\n     * @param {WordArray|string} messageUpdate (Optional) A final message update.\n     *\n     * @return {WordArray} The HMAC.\n     *\n     * @example\n     *\n     *     var hmac = hmacHasher.finalize()\n     *     var hmac = hmacHasher.finalize('message')\n     *     var hmac = hmacHasher.finalize(wordArray)\n     */\n    finalize: function(messageUpdate: any) {\n      // Shortcut\n      var hasher = this._hasher\n\n      // Compute HMAC\n      var innerHash = hasher.finalize(messageUpdate)\n      hasher.reset()\n      var hmac = hasher.finalize(this._oKey.clone().concat(innerHash))\n\n      return hmac\n    }\n  }))\n})()\n\n// ==================================================================================================\n// END INCLUDE FILE cryptojs/hmac.js\n// ==================================================================================================\n\n// ==================================================================================================\n// START INCLUDE FILE cryptojs/pbkdf2.js\n// ==================================================================================================\n\n/*\nCryptoJS v3.1.2\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/\n;(function() {\n  // Shortcuts\n  var C = CryptoJS\n  var C_lib = C.lib\n  var Base = C_lib.Base\n  var WordArray = C_lib.WordArray\n  var C_algo = C.algo\n  var SHA1 = C_algo.SHA1\n  var HMAC = C_algo.HMAC\n\n  /**\n   * Password-Based Key Derivation Function 2 algorithm.\n   */\n  var PBKDF2 = (C_algo.PBKDF2 = Base.extend({\n    /**\n     * Configuration options.\n     *\n     * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n     * @property {Hasher} hasher The hasher to use. Default: SHA1\n     * @property {number} iterations The number of iterations to perform. Default: 1\n     */\n    cfg: Base.extend({\n      keySize: 128 / 32,\n      hasher: SHA1,\n      iterations: 1\n    }),\n\n    /**\n     * Initializes a newly created key derivation function.\n     *\n     * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n     *\n     * @example\n     *\n     *     var kdf = CryptoJS.algo.PBKDF2.create();\n     *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8 });\n     *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8, iterations: 1000 });\n     */\n    init: function(cfg: any) {\n      this.cfg = this.cfg.extend(cfg)\n    },\n\n    /**\n     * Computes the Password-Based Key Derivation Function 2.\n     *\n     * @param {WordArray|string} password The password.\n     * @param {WordArray|string} salt A salt.\n     *\n     * @return {WordArray} The derived key.\n     *\n     * @example\n     *\n     *     var key = kdf.compute(password, salt);\n     */\n    compute: function(password: any, salt: any) {\n      // Shortcut\n      var cfg = this.cfg\n\n      // Init HMAC\n      var hmac = HMAC.create(cfg.hasher, password)\n\n      // Initial values\n      var derivedKey = WordArray.create()\n      var blockIndex = WordArray.create([0x00000001])\n\n      // Shortcuts\n      var derivedKeyWords = derivedKey.words\n      var blockIndexWords = blockIndex.words\n      var keySize = cfg.keySize\n      var iterations = cfg.iterations\n\n      // Generate key\n      while (derivedKeyWords.length < keySize) {\n        var block = hmac.update(salt).finalize(blockIndex)\n        hmac.reset()\n\n        // Shortcuts\n        var blockWords = block.words\n        var blockWordsLength = blockWords.length\n\n        // Iterations\n        var intermediate = block\n        for (var i = 1; i < iterations; i++) {\n          intermediate = hmac.finalize(intermediate)\n          hmac.reset()\n\n          // Shortcut\n          var intermediateWords = intermediate.words\n\n          // XOR intermediate with block\n          for (var j = 0; j < blockWordsLength; j++) {\n            blockWords[j] ^= intermediateWords[j]\n          }\n        }\n\n        derivedKey.concat(block)\n        blockIndexWords[0]++\n      }\n      derivedKey.sigBytes = keySize * 4\n\n      return derivedKey\n    }\n  }))\n\n  /**\n   * Computes the Password-Based Key Derivation Function 2.\n   *\n   * @param {WordArray|string} password The password.\n   * @param {WordArray|string} salt A salt.\n   * @param {Object} cfg (Optional) The configuration options to use for this computation.\n   *\n   * @return {WordArray} The derived key.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var key = CryptoJS.PBKDF2(password, salt);\n   *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8 });\n   *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8, iterations: 1000 });\n   */\n  C.PBKDF2 = function(password: any, salt: any, cfg: any) {\n    return PBKDF2.create(cfg).compute(password, salt)\n  }\n})()\n\n// ==================================================================================================\n// END INCLUDE FILE cryptojs/pbkdf2.js\n// ==================================================================================================\n\n// ==================================================================================================\n// START INCLUDE FILE cryptojs/sha256.js\n// ==================================================================================================\n;(function(h) {\n  for (\n    var s = CryptoJS,\n      f = s.lib,\n      t = f.WordArray,\n      g = f.Hasher,\n      f = s.algo,\n      j: any[] = [],\n      q: any[] = [],\n      v = function(a: any) {\n        return (4294967296 * (a - (a | 0))) | 0\n      },\n      u = 2,\n      k = 0;\n    64 > k;\n\n  ) {\n    var l\n    a: {\n      l = u\n      for (var x = h.sqrt(l), w = 2; w <= x; w++)\n        if (!(l % w)) {\n          l = !1\n          break a\n        }\n      l = !0\n    }\n    l && (8 > k && (j[k] = v(h.pow(u, 0.5))), (q[k] = v(h.pow(u, 1 / 3))), k++)\n    u++\n  }\n  var a: any[] = [],\n    f = (f.SHA256 = g.extend({\n      _doReset: function() {\n        this._hash = new t.init(j.slice(0))\n      },\n      _doProcessBlock: function(c: any, d: any) {\n        for (\n          var b = this._hash.words,\n            e = b[0],\n            f = b[1],\n            m = b[2],\n            h = b[3],\n            p = b[4],\n            j = b[5],\n            k = b[6],\n            l = b[7],\n            n = 0;\n          64 > n;\n          n++\n        ) {\n          if (16 > n) a[n] = c[d + n] | 0\n          else {\n            var r = a[n - 15],\n              g = a[n - 2]\n            a[n] =\n              (((r << 25) | (r >>> 7)) ^ ((r << 14) | (r >>> 18)) ^ (r >>> 3)) +\n              a[n - 7] +\n              (((g << 15) | (g >>> 17)) ^ ((g << 13) | (g >>> 19)) ^ (g >>> 10)) +\n              a[n - 16]\n          }\n          r =\n            l +\n            (((p << 26) | (p >>> 6)) ^ ((p << 21) | (p >>> 11)) ^ ((p << 7) | (p >>> 25))) +\n            ((p & j) ^ (~p & k)) +\n            q[n] +\n            a[n]\n          g =\n            (((e << 30) | (e >>> 2)) ^ ((e << 19) | (e >>> 13)) ^ ((e << 10) | (e >>> 22))) +\n            ((e & f) ^ (e & m) ^ (f & m))\n          l = k\n          k = j\n          j = p\n          p = (h + r) | 0\n          h = m\n          m = f\n          f = e\n          e = (r + g) | 0\n        }\n        b[0] = (b[0] + e) | 0\n        b[1] = (b[1] + f) | 0\n        b[2] = (b[2] + m) | 0\n        b[3] = (b[3] + h) | 0\n        b[4] = (b[4] + p) | 0\n        b[5] = (b[5] + j) | 0\n        b[6] = (b[6] + k) | 0\n        b[7] = (b[7] + l) | 0\n      },\n      _doFinalize: function() {\n        var a = this._data,\n          d = a.words,\n          b = 8 * this._nDataBytes,\n          e = 8 * a.sigBytes\n        d[e >>> 5] |= 128 << (24 - e % 32)\n        d[(((e + 64) >>> 9) << 4) + 14] = h.floor(b / 4294967296)\n        d[(((e + 64) >>> 9) << 4) + 15] = b\n        a.sigBytes = 4 * d.length\n        this._process()\n        return this._hash\n      },\n      clone: function() {\n        var a = g.clone.call(this)\n        a._hash = this._hash.clone()\n        return a\n      }\n    }))\n  s.SHA256 = g._createHelper(f)\n  s.HmacSHA256 = g._createHmacHelper(f)\n})(Math)\n\n// ==================================================================================================\n// END INCLUDE FILE cryptojs/sha256.js\n// ==================================================================================================\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2017 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\nimport Big from \"big.js\"\nimport * as converters from \"./converters\"\nimport * as ByteBuffer from \"bytebuffer\"\n\nexport function isPublicKey(publicKeyHex: string): boolean {\n  // if (parseInt(publicKeyHex, 16).toString(16) === publicKeyHex.toLowerCase()) {\n  //   return converters.hexStringToByteArray(publicKeyHex).length == 32\n  // }\n  // return false\n  var regExp = /^[-+]?[0-9A-Fa-f]+\\.?[0-9A-Fa-f]*?$/\n  if (regExp.test(publicKeyHex)) return converters.hexStringToByteArray(publicKeyHex).length == 32\n  return false\n}\n\nexport function unformat(commaFormatted: string): string {\n  return commaFormatted ? commaFormatted.replace(/,/g, \"\") : \"0\"\n}\n\nexport function commaFormat(amount: string) {\n  if (typeof amount == \"undefined\") {\n    return \"0\"\n  }\n  let neg = amount.indexOf(\"-\") == 0\n  if (neg) {\n    amount = amount.substr(1)\n  }\n  let dec = amount.split(\".\") // input is result of convertNQT\n  let parts = dec[0]\n    .split(\"\")\n    .reverse()\n    .join(\"\")\n    .split(/(\\d{3})/)\n    .reverse()\n  let format = []\n  for (var i = 0; i < parts.length; i++) {\n    if (parts[i]) {\n      format.push(\n        parts[i]\n          .split(\"\")\n          .reverse()\n          .join(\"\")\n      )\n    }\n  }\n  return (neg ? \"-\" : \"\") + format.join(\",\") + (dec.length == 2 ? \".\" + dec[1] : \"\")\n}\n\nexport function isNumber(value: string) {\n  var num = String(value).replace(/,/g, \"\")\n  if (num.match(/^\\d+$/)) {\n    return true\n  } else if (num.match(/^\\d+\\.\\d+$/)) {\n    return true\n  }\n  return false\n}\n\n/**\n * Very forgiving test to determine if the number of fractional parts\n * exceeds @decimals param.\n *\n * @param value String number value, can contain commas\n * @param decimals Number max allowed number of decimals.\n * @return boolean\n */\nexport function hasToManyDecimals(value: string, decimals: number) {\n  var num = String(value).replace(/,/g, \"\")\n  var parts: Array<string> = num.split(\".\")\n  if (parts[1]) {\n    var fractional = parts[1].replace(/[\\s0]*$/g, \"\")\n    if (fractional.length > decimals) return true\n  }\n  return false\n}\n\nexport function timestampToDate(timestamp: number) {\n  return new Date(Date.UTC(2013, 10, 24, 12, 0, 0, 0) + timestamp * 1000)\n}\n\nexport function epochTime() {\n  return Math.round((Date.now() - 1385294400000 + 500) / 1000)\n}\n\nexport function roundTo(value: string, decimals: number): string {\n  return String(parseFloat(value).toFixed(decimals))\n}\n\nexport function formatQNT(\n  quantity: string,\n  decimals: number,\n  returnNullZero?: boolean\n): string | null {\n  var asfloat = convertToQNTf(quantity)\n  var cf = commaFormat(asfloat)\n  var parts = cf.split(\".\")\n  var ret\n  if (!parts[1]) ret = parts[0] + \".\" + \"0\".repeat(decimals)\n  else if (parts[1].length > decimals) {\n    var i = parts[1].length - 1\n    while (parts[1].length > decimals) {\n      if (parts[1][i] == \"0\") {\n        parts[1] = parts[i].slice(0, -1)\n        i--\n        continue\n      }\n      break\n    }\n    ret = parts[0] + \".\" + parts[1]\n  } else ret = parts[0] + \".\" + parts[1] + \"0\".repeat(decimals - parts[1].length)\n  return returnNullZero && !ret.match(/[^0\\.]/) ? null : ret\n}\n\nexport function trimDecimals(formatted: string, decimals: number): string {\n  var parts = formatted.split(\".\")\n  if (!parts[1]) parts[1] = \"0\".repeat(decimals)\n  else parts[1] = parts[1].substr(0, decimals)\n  if (parts[1].length < decimals) parts[1] += \"0\".repeat(decimals - parts[1].length)\n  return parts[0] + \".\" + parts[1]\n}\n\nexport function convertToQNTf(quantity: string): string {\n  var decimals = 8\n  if (typeof quantity == \"undefined\") {\n    return \"0\"\n  }\n  if (quantity.length < decimals) {\n    for (var i = quantity.length; i < decimals; i++) {\n      quantity = \"0\" + quantity\n    }\n  }\n  var afterComma = \"\"\n  if (decimals) {\n    afterComma = \".\" + quantity.substring(quantity.length - decimals)\n    quantity = quantity.substring(0, quantity.length - decimals)\n    if (!quantity) {\n      quantity = \"0\"\n    }\n    afterComma = afterComma.replace(/0+$/, \"\")\n    if (afterComma == \".\") {\n      afterComma = \"\"\n    }\n  }\n  return quantity + afterComma\n}\n\nexport function calculateTotalOrderPriceQNT(quantityQNT: string, priceQNT: string): string {\n  return new Big(quantityQNT)\n    .times(new Big(priceQNT).div(new Big(100000000)))\n    .round()\n    .toString()\n}\n\nclass ConvertToQNTError implements Error {\n  public name = \"ConvertToQNTError\"\n  constructor(public message: string, public code: number) {}\n}\n\n/**\n * Converts a float to a QNT based on the number of decimals to use.\n * Note! That this method throws a ConvertToQNTError in case the\n * input is invalid. Callers must catch and handle this situation.\n *\n * @throws utils.ConvertToQNTError\n */\nexport function convertToQNT(quantity: string /*, decimals: number = 8 */): string {\n  var decimals = 8 // qnts all have 8 decimals.\n  var parts = quantity.split(\".\")\n  var qnt = parts[0]\n  if (parts.length == 1) {\n    if (decimals) {\n      for (var i = 0; i < decimals; i++) {\n        qnt += \"0\"\n      }\n    }\n  } else if (parts.length == 2) {\n    var fraction = parts[1]\n    if (fraction.length > decimals) {\n      throw new ConvertToQNTError(\"Fraction can only have \" + decimals + \" decimals max.\", 1)\n    } else if (fraction.length < decimals) {\n      for (var i = fraction.length; i < decimals; i++) {\n        fraction += \"0\"\n      }\n    }\n    qnt += fraction\n  } else {\n    throw new ConvertToQNTError(\"Incorrect input\", 2)\n  }\n  //in case there's a comma or something else in there.. at this point there should only be numbers\n  if (!/^\\d+$/.test(qnt)) {\n    throw new ConvertToQNTError(\"Invalid input. Only numbers and a dot are accepted.\", 3)\n  }\n  //remove leading zeroes\n  return qnt.replace(/^0+/, \"\")\n}\n\n/**\n * Count bytes in a string's UTF-8 representation.\n * @param   string\n * @return  number\n */\nexport function getByteLen(value: string): number {\n  var byteLen = 0\n  for (var i = 0; i < value.length; i++) {\n    var c = value.charCodeAt(i)\n    byteLen +=\n      c < 1 << 7\n        ? 1\n        : c < 1 << 11\n          ? 2\n          : c < 1 << 16 ? 3 : c < 1 << 21 ? 4 : c < 1 << 26 ? 5 : c < 1 << 31 ? 6 : Number.NaN\n  }\n  return byteLen\n}\n\nexport function debounce(func: Function, wait?: number, immediate?: boolean) {\n  var timeout: any\n  return function() {\n    var context = this,\n      args = arguments\n    var later = function() {\n      timeout = null\n      if (!immediate) func.apply(context, args)\n    }\n    var callNow = immediate && !timeout\n    clearTimeout(timeout)\n    timeout = setTimeout(later, wait || 100)\n    if (callNow) func.apply(context, args)\n  }\n}\n\nexport function repeatWhile(delay: number, cb: () => boolean) {\n  var fn = () => {\n    if (cb()) {\n      clearInterval(interval)\n    }\n  }\n  var interval = setInterval(fn, delay)\n}\n\nexport function emptyToNull(input: string): string | null {\n  return isString(input) && input.trim().length == 0 ? null : input\n}\n\nexport function isString(input: any): boolean {\n  return !!(input && typeof input == \"string\")\n}\n\nexport function isDefined(input: any): boolean {\n  return typeof input != \"undefined\"\n}\n\nexport function isObject(input: any): boolean {\n  return !!(input && typeof input == \"object\")\n}\n\nexport function isArray(input: any): boolean {\n  return Array.isArray(input)\n}\n\nexport function extend(destination: { [key: string]: any }, source: { [key: string]: any }) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) destination[key] = source[key]\n  }\n  return destination\n}\n\nexport function isEmpty(obj: { [key: string]: any }) {\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) return false\n  }\n  return true\n}\n\nexport function readBytes(buffer: ByteBuffer, length: number, offset?: number): number[] {\n  if (offset) buffer.offset = offset\n  let array = []\n  for (let i = 0; i < length; i++) array.push(buffer.readByte())\n  return array\n}\n\nexport function writeBytes(buffer: ByteBuffer, bytes: number[]) {\n  for (let i = 0; i < bytes.length; i++) buffer.writeByte(bytes[i])\n}\n\n/* inpired by: https://italonascimento.github.io/applying-a-timeout-to-your-promises/ */\nexport function setPromiseTimeout<T>(milliseconds: number, promise: Promise<any>): Promise<T> {\n  let timeout = new Promise((resolve, reject) => {\n    let id = setTimeout(() => {\n      clearTimeout(id)\n      reject(\"Timed out in \" + milliseconds + \"ms.\")\n    }, milliseconds)\n  })\n  return Promise.race([promise, timeout])\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2017 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n\nexport let MIN_INT32 = 0x80000000\nexport let MAX_INT32 = 0x7fffffff\n\nexport let MAX_ENCRYPTED_MESSAGE_LENGTH = 1000\n\nexport class HeatConstants {\n  static ONE_HEAT = 100000000\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2017 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\nimport { HeatConstants } from \"./constants\"\n\nexport class Fee {\n  public static DEFAULT = (HeatConstants.ONE_HEAT / 100).toString()\n  public static ASSET_ISSUANCE_FEE = (HeatConstants.ONE_HEAT * 500).toString()\n  public static ASSET_ISSUE_MORE_FEE = Fee.DEFAULT\n  public static ASSET_TRANSFER_FEE = Fee.DEFAULT\n  public static ATOMIC_MULTI_TRANSFER_FEE = Fee.DEFAULT\n  public static ORDER_PLACEMENT_FEE = Fee.DEFAULT\n  public static ORDER_CANCELLATION_FEE = Fee.DEFAULT\n  public static WHITELIST_ACCOUNT_FEE = Fee.DEFAULT\n  public static WHITELIST_MARKET_FEE = (HeatConstants.ONE_HEAT * 10).toString()\n  public static EFFECTIVE_BALANCE_LEASING_FEE = Fee.DEFAULT\n\n  public static MESSAGE_APPENDIX_FEE = \"0\"\n  public static ENCRYPTED_MESSAGE_APPENDIX_FEE = \"0\"\n  public static PUBLICKEY_ANNOUNCEMENT_APPENDIX_FEE = \"0\"\n  public static PRIVATE_NAME_ANNOUNCEMENT_APPENDIX_FEE = \"0\"\n  public static PRIVATE_NAME_ASSIGNEMENT_APPENDIX_FEE = \"0\"\n  public static PUBLIC_NAME_ANNOUNCEMENT_APPENDIX_FEE = \"0\"\n  public static PUBLIC_NAME_ASSIGNEMENT_APPENDIX_FEE = \"0\"\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2017 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\nimport * as converters from \"./converters\"\nimport * as utils from \"./utils\"\nimport * as ByteBuffer from \"bytebuffer\"\nimport { Fee } from \"./fee\"\nimport Long from \"long\"\nimport * as constants from \"./constants\"\nimport * as crypto from \"./crypto\"\nimport { fullNameToLong } from \"./crypto\"\n\nexport interface Appendix {\n  getSize(): number\n  putBytes(buffer: ByteBuffer): void\n  getJSONObject(): Object\n  getVersion(): number\n  getFee(): string\n}\n\nexport abstract class AbstractAppendix implements Appendix {\n  constructor(buffer?: ByteBuffer) {\n    if (buffer) this.parse(buffer)\n  }\n\n  protected version: number = 1\n\n  abstract getAppendixName(): string\n\n  public getSize(): number {\n    return this.getMySize() + 1\n  }\n  abstract getMySize(): number\n\n  public putBytes(buffer: ByteBuffer) {\n    buffer.writeByte(this.version)\n    this.putMyBytes(buffer)\n  }\n\n  public parse(buffer: ByteBuffer) {\n    this.version = buffer.readByte()\n    return this\n  }\n\n  abstract putMyBytes(buffer: ByteBuffer): void\n\n  public parseJSON(json: { [key: string]: any }) {\n    this.version = json[\"version.\" + this.getAppendixName()]\n    return this\n  }\n\n  public getJSONObject() {\n    let json: { [key: string]: any } = {}\n    json[\"version.\" + this.getAppendixName()] = this.version\n    this.putMyJSON(json)\n    return json\n  }\n  abstract putMyJSON(json: Object): void\n\n  public getVersion() {\n    return this.version\n  }\n\n  abstract getFee(): string\n}\n\nexport class AppendixMessage extends AbstractAppendix {\n  private message: Array<number>\n  private isText: boolean\n\n  init(message: Array<number>, isText: boolean) {\n    this.message = message\n    this.isText = isText\n    return this\n  }\n\n  getFee(): string {\n    return Fee.MESSAGE_APPENDIX_FEE\n  }\n\n  public getAppendixName() {\n    return \"Message\"\n  }\n\n  public getMySize() {\n    return 4 + this.message.length\n  }\n\n  public parse(buffer: ByteBuffer) {\n    super.parse(buffer)\n    let messageLength = buffer.readInt()\n    this.isText = messageLength < 0\n    if (messageLength < 0) messageLength &= constants.MAX_INT32\n    this.message = []\n    for (let i = 0; i < messageLength; i++) this.message.push(buffer.readByte())\n    return this\n  }\n\n  public putMyBytes(buffer: ByteBuffer) {\n    buffer.writeInt(this.isText ? this.message.length | constants.MIN_INT32 : this.message.length)\n    this.message.forEach(byte => {\n      buffer.writeByte(byte)\n    })\n  }\n\n  public parseJSON(json: { [key: string]: any }) {\n    super.parseJSON(json)\n    this.isText = json[\"messageIsText\"]\n    this.message = this.isText\n      ? converters.stringToByteArray(json[\"message\"])\n      : converters.hexStringToByteArray(json[\"message\"])\n    return this\n  }\n\n  public putMyJSON(json: { [key: string]: any }) {\n    json[\"message\"] = this.isText\n      ? converters.byteArrayToString(this.message)\n      : converters.byteArrayToHexString(this.message)\n    json[\"messageIsText\"] = this.isText\n  }\n\n  public getMessage() {\n    return this.message\n  }\n\n  public getIsText() {\n    return this.isText\n  }\n}\n\nexport abstract class AbstractAppendixEncryptedMessage extends AbstractAppendix {\n  private encryptedMessage: crypto.IEncryptedMessage\n  private isText_: boolean\n\n  init(message: crypto.IEncryptedMessage, isText: boolean) {\n    this.encryptedMessage = message\n    this.isText_ = isText\n    return this\n  }\n\n  getFee(): string {\n    return Fee.ENCRYPTED_MESSAGE_APPENDIX_FEE\n  }\n\n  public getMySize() {\n    return 4 + this.encryptedMessage.data.length + this.encryptedMessage.nonce.length\n  }\n\n  public parse(buffer: ByteBuffer) {\n    super.parse(buffer)\n    let length = buffer.readInt32()\n    this.isText_ = length < 0\n    if (length < 0) length &= constants.MAX_INT32\n    if (length == 0) {\n      this.encryptedMessage = {\n        isText: this.isText_,\n        data: \"\",\n        nonce: \"\"\n      }\n      return this\n    }\n    if (length > constants.MAX_ENCRYPTED_MESSAGE_LENGTH)\n      throw new Error(\"Max encrypted data length exceeded: \" + length)\n    let messageBytes: number[] = new Array(length)\n    for (let i = 0; i < length; i++) messageBytes[i] = buffer.readByte()\n    let nonceBytes: number[] = new Array(32)\n    for (let i = 0; i < 32; i++) nonceBytes[i] = buffer.readByte()\n    this.encryptedMessage = {\n      isText: this.isText_,\n      data: converters.byteArrayToHexString(messageBytes),\n      nonce: converters.byteArrayToHexString(nonceBytes)\n    }\n    return this\n  }\n\n  public putMyBytes(buffer: ByteBuffer) {\n    let messageBytes = converters.hexStringToByteArray(this.encryptedMessage.data)\n    let length = messageBytes.length\n    buffer.writeInt32(this.isText_ ? length | constants.MIN_INT32 : length)\n    messageBytes.forEach(byte => {\n      buffer.writeByte(byte)\n    })\n    converters.hexStringToByteArray(this.encryptedMessage.nonce).forEach(byte => {\n      buffer.writeByte(byte)\n    })\n  }\n\n  public parseJSON(json: { [key: string]: any }) {\n    super.parseJSON(json)\n    this.isText_ = json[\"isText\"]\n    this.encryptedMessage = {\n      isText: this.isText_,\n      data: json[\"data\"],\n      nonce: json[\"nonce\"]\n    }\n    return this\n  }\n\n  public putMyJSON(json: { [key: string]: any }) {\n    json[\"data\"] = this.encryptedMessage.data\n    json[\"nonce\"] = this.encryptedMessage.nonce\n    json[\"isText\"] = this.isText\n  }\n\n  isText(): boolean {\n    return this.isText_\n  }\n}\n\nexport class AppendixEncryptedMessage extends AbstractAppendixEncryptedMessage {\n  public getAppendixName() {\n    return \"EncryptedMessage\"\n  }\n\n  public parseJSON(json: { [key: string]: any }) {\n    super.parseJSON(json[\"encryptedMessage\"])\n    return this\n  }\n\n  public putMyJSON(json: { [key: string]: any }) {\n    super.putMyJSON(json)\n    json[\"encryptedMessage\"] = json\n  }\n}\n\nexport class AppendixEncryptToSelfMessage extends AbstractAppendixEncryptedMessage {\n  public getAppendixName() {\n    return \"EncryptToSelfMessage\"\n  }\n\n  public parseJSON(json: { [key: string]: any }) {\n    super.parseJSON(json[\"encryptToSelfMessage\"])\n    return this\n  }\n\n  public putMyJSON(json: { [key: string]: any }) {\n    super.putMyJSON(json)\n    json[\"encryptToSelfMessage\"] = json\n  }\n}\n\nexport class AppendixPublicKeyAnnouncement extends AbstractAppendix {\n  private publicKey: Array<number>\n\n  public init(publicKey: Array<number>) {\n    this.publicKey = publicKey\n    return this\n  }\n\n  public parse(buffer: ByteBuffer) {\n    super.parse(buffer)\n    this.publicKey = utils.readBytes(buffer, 32)\n    return this\n  }\n\n  getFee(): string {\n    return Fee.PUBLICKEY_ANNOUNCEMENT_APPENDIX_FEE\n  }\n\n  public getAppendixName() {\n    return \"PublicKeyAnnouncement\"\n  }\n\n  public getMySize() {\n    return 32\n  }\n\n  public putMyBytes(buffer: ByteBuffer) {\n    utils.writeBytes(buffer, this.publicKey)\n  }\n\n  public parseJSON(json: { [key: string]: any }) {\n    super.parseJSON(json)\n    this.publicKey = converters.hexStringToByteArray(json[\"recipientPublicKey\"])\n    return this\n  }\n\n  public putMyJSON(json: { [key: string]: any }) {\n    json[\"recipientPublicKey\"] = converters.byteArrayToHexString(this.publicKey)\n  }\n}\n\nexport class AppendixPrivateNameAnnouncement extends AbstractAppendix {\n  private privateNameAnnouncement: Long\n\n  getFee(): string {\n    return Fee.PRIVATE_NAME_ANNOUNCEMENT_APPENDIX_FEE\n  }\n\n  public getAppendixName() {\n    return \"PrivateNameAnnouncement\"\n  }\n\n  public getMySize() {\n    return 8\n  }\n\n  public putMyBytes(buffer: ByteBuffer) {}\n\n  public putMyJSON(json: { [key: string]: any }) {}\n\n  public getName() {\n    return this.privateNameAnnouncement\n  }\n}\n\nexport class AppendixPrivateNameAssignment extends AbstractAppendix {\n  private privateNameAssignment: Long\n  private signature: number[]\n\n  getFee(): string {\n    return Fee.PRIVATE_NAME_ASSIGNEMENT_APPENDIX_FEE\n  }\n\n  public getAppendixName() {\n    return \"PrivateNameAssignment\"\n  }\n\n  public getMySize() {\n    return 8 + 64\n  }\n\n  public parse(buffer: ByteBuffer) {\n    super.parse(buffer)\n    this.privateNameAssignment = buffer.readInt64()\n    this.signature = utils.readBytes(buffer, 64)\n    return this\n  }\n\n  public putMyBytes(buffer: ByteBuffer) {\n    buffer.writeInt64(this.privateNameAssignment)\n    utils.writeBytes(buffer, this.signature)\n  }\n\n  public parseJSON(json: { [key: string]: any }) {\n    super.parseJSON(json)\n    this.privateNameAssignment = Long.fromString(json[\"privateNameAssignment\"], true)\n    this.signature = converters.hexStringToByteArray(json[\"signature\"])\n    return this\n  }\n\n  public putMyJSON(json: { [key: string]: any }) {\n    json[\"privateNameAssignment\"] = this.privateNameAssignment.toUnsigned().toString()\n    json[\"signature\"] = converters.byteArrayToHexString(this.signature)\n  }\n\n  public getName() {\n    return this.privateNameAssignment\n  }\n}\n\nexport class AppendixPublicNameAnnouncement extends AbstractAppendix {\n  private nameHash: Long\n  private publicNameAnnouncement: Int8Array\n\n  getFee(): string {\n    return Fee.PUBLIC_NAME_ANNOUNCEMENT_APPENDIX_FEE\n  }\n\n  public getAppendixName() {\n    return \"PublicNameAnnouncement\"\n  }\n\n  public getMySize() {\n    return 1 + this.publicNameAnnouncement.length\n  }\n\n  public putMyBytes(buffer: ByteBuffer) {}\n\n  public putMyJSON(json: { [key: string]: any }) {}\n\n  public getFullName() {\n    return this.publicNameAnnouncement\n  }\n\n  public getNameHash() {\n    return this.nameHash\n  }\n}\n\nexport class AppendixPublicNameAssignment extends AbstractAppendix {\n  private publicNameAssignment: number[]\n  private signature: number[]\n  private nameHash: Long\n\n  getFee(): string {\n    return Fee.PUBLIC_NAME_ASSIGNEMENT_APPENDIX_FEE\n  }\n\n  public getAppendixName() {\n    return \"PublicAccountNameAssignment\"\n  }\n\n  public getMySize() {\n    return 1 + this.publicNameAssignment.length + 64\n  }\n\n  public parse(buffer: ByteBuffer) {\n    super.parse(buffer)\n    this.publicNameAssignment = utils.readBytes(buffer, buffer.readByte())\n    this.signature = utils.readBytes(buffer, 64)\n    this.nameHash = crypto.fullNameToLong(this.publicNameAssignment)\n    return this\n  }\n\n  public putMyBytes(buffer: ByteBuffer) {\n    buffer.writeByte(this.publicNameAssignment.length)\n    utils.writeBytes(buffer, this.publicNameAssignment)\n    utils.writeBytes(buffer, this.signature)\n  }\n\n  public parseJSON(json: { [key: string]: any }) {\n    super.parseJSON(json)\n    this.publicNameAssignment = converters.hexStringToByteArray(json[\"publicNameAssignment\"])\n    this.signature = converters.hexStringToByteArray(json[\"signature\"])\n    this.nameHash = crypto.fullNameToLong(this.publicNameAssignment)\n    return this\n  }\n\n  public putMyJSON(json: { [key: string]: any }) {\n    json[\"publicNameAssignment\"] = converters.byteArrayToHexString(this.publicNameAssignment)\n    json[\"signature\"] = converters.byteArrayToHexString(this.signature)\n  }\n\n  public getFullName() {\n    return this.publicNameAssignment\n  }\n\n  public getNameHash() {\n    return this.nameHash\n  }\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2017 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\nimport * as attachment from \"./attachment\"\nimport * as ByteBuffer from \"bytebuffer\"\n\nexport abstract class TransactionType {\n  public static TYPE_PAYMENT = 0\n  public static TYPE_MESSAGING = 1\n  public static TYPE_COLORED_COINS = 2\n  public static TYPE_ACCOUNT_CONTROL = 4\n  public static SUBTYPE_PAYMENT_ORDINARY_PAYMENT = 0\n  public static SUBTYPE_MESSAGING_ARBITRARY_MESSAGE = 0\n  public static SUBTYPE_COLORED_COINS_ASSET_ISSUANCE = 0\n  public static SUBTYPE_COLORED_COINS_ASSET_ISSUE_MORE = 1\n  public static SUBTYPE_COLORED_COINS_ASSET_TRANSFER = 2\n  public static SUBTYPE_COLORED_COINS_ASK_ORDER_PLACEMENT = 3\n  public static SUBTYPE_COLORED_COINS_BID_ORDER_PLACEMENT = 4\n  public static SUBTYPE_COLORED_COINS_ASK_ORDER_CANCELLATION = 5\n  public static SUBTYPE_COLORED_COINS_BID_ORDER_CANCELLATION = 6\n  public static SUBTYPE_COLORED_COINS_WHITELIST_ACCOUNT_ADDITION = 7\n  public static SUBTYPE_COLORED_COINS_WHITELIST_ACCOUNT_REMOVAL = 8\n  public static SUBTYPE_COLORED_COINS_WHITELIST_MARKET = 9\n  public static SUBTYPE_COLORED_COINS_ATOMIC_MULTI_TRANSFER = 10\n  public static SUBTYPE_ACCOUNT_CONTROL_EFFECTIVE_BALANCE_LEASING = 0\n\n  abstract getType(): number\n  abstract getSubtype(): number\n  abstract parseAttachment(buffer: ByteBuffer): attachment.Attachment\n  abstract parseAttachmentJSON(json: { [key: string]: any }): attachment.Attachment\n  abstract canHaveRecipient(): boolean\n\n  public static findTransactionType(type: number, subtype: number) {\n    if (type == this.TYPE_PAYMENT) {\n      if (subtype == this.SUBTYPE_PAYMENT_ORDINARY_PAYMENT) {\n        return ORDINARY_PAYMENT_TRANSACTION_TYPE\n      }\n    } else if (type == this.TYPE_MESSAGING) {\n      if (subtype == this.SUBTYPE_MESSAGING_ARBITRARY_MESSAGE) {\n        return ARBITRARY_MESSAGE_TRANSACTION_TYPE\n      }\n    } else if (type == this.TYPE_COLORED_COINS) {\n      if (subtype == this.SUBTYPE_COLORED_COINS_ASSET_ISSUANCE)\n        return COLORED_COINS_ASSET_ISSUANCE_TRANSACTION_TYPE\n      else if (subtype == this.SUBTYPE_COLORED_COINS_ASSET_ISSUE_MORE)\n        return COLORED_COINS_ASSET_ISSUE_MORE_TRANSACTION_TYPE\n      else if (subtype == this.SUBTYPE_COLORED_COINS_ASSET_TRANSFER)\n        return COLORED_COINS_ASSET_TRANSFER_TRANSACTION_TYPE\n      else if (subtype == this.SUBTYPE_COLORED_COINS_ATOMIC_MULTI_TRANSFER)\n        return COLORED_COINS_ATOMIC_MULTI_TRANSFER_TRANSACTION_TYPE\n      else if (subtype == this.SUBTYPE_COLORED_COINS_ASK_ORDER_PLACEMENT)\n        return COLORED_COINS_ASK_ORDER_PLACEMENT_TRANSACTION_TYPE\n      else if (subtype == this.SUBTYPE_COLORED_COINS_BID_ORDER_PLACEMENT)\n        return COLORED_COINS_BID_ORDER_PLACEMENT_TRANSACTION_TYPE\n      else if (subtype == this.SUBTYPE_COLORED_COINS_ASK_ORDER_CANCELLATION)\n        return ASK_ORDER_CANCELLATION_TRANSACTION_TYPE\n      else if (subtype == this.SUBTYPE_COLORED_COINS_BID_ORDER_CANCELLATION)\n        return BID_ORDER_CANCELLATION_TRANSACTION_TYPE\n      else if (subtype == this.SUBTYPE_COLORED_COINS_WHITELIST_ACCOUNT_ADDITION)\n        return WHITELIST_ACCOUNT_ADDITION_TRANSACTION_TYPE\n      else if (subtype == this.SUBTYPE_COLORED_COINS_WHITELIST_ACCOUNT_REMOVAL)\n        return WHITELIST_ACCOUNT_REMOVAL_TRANSACTION_TYPE\n      else if (subtype == this.SUBTYPE_COLORED_COINS_WHITELIST_MARKET)\n        return WHITELIST_MARKET_TRANSACTION_TYPE\n    } else if (type == this.TYPE_ACCOUNT_CONTROL) {\n      if (subtype == this.SUBTYPE_ACCOUNT_CONTROL_EFFECTIVE_BALANCE_LEASING)\n        return EFFECTIVE_BALANCE_LEASING_TRANSACTION_TYPE\n    }\n  }\n\n  mustHaveRecipient(): boolean {\n    return this.canHaveRecipient()\n  }\n}\n\nexport class OrdinaryPayment extends TransactionType {\n  getType() {\n    return TransactionType.TYPE_PAYMENT\n  }\n  getSubtype() {\n    return TransactionType.SUBTYPE_PAYMENT_ORDINARY_PAYMENT\n  }\n  parseAttachment(buffer: ByteBuffer) {\n    buffer.offset++ // advance the buffer position past the version byte\n    return attachment.ORDINARY_PAYMENT\n  }\n  parseAttachmentJSON(json: { [key: string]: any }) {\n    return attachment.ORDINARY_PAYMENT\n  }\n  canHaveRecipient() {\n    return true\n  }\n}\n\nexport class ArbitraryMessage extends TransactionType {\n  getType() {\n    return TransactionType.TYPE_MESSAGING\n  }\n  getSubtype() {\n    return TransactionType.SUBTYPE_MESSAGING_ARBITRARY_MESSAGE\n  }\n  parseAttachment(buffer: ByteBuffer) {\n    buffer.offset++ // advance the buffer position past the version byte\n    return attachment.ARBITRARY_MESSAGE\n  }\n  parseAttachmentJSON(json: { [key: string]: any }) {\n    return attachment.ARBITRARY_MESSAGE\n  }\n  canHaveRecipient() {\n    return true\n  }\n  mustHaveRecipient(): boolean {\n    return false\n  }\n}\n\nexport abstract class ColoredCoins extends TransactionType {\n  getType() {\n    return TransactionType.TYPE_COLORED_COINS\n  }\n}\n\nexport class AssetIssuance extends ColoredCoins {\n  getSubtype() {\n    return TransactionType.SUBTYPE_COLORED_COINS_ASSET_ISSUANCE\n  }\n  parseAttachment(buffer: ByteBuffer) {\n    return new attachment.AssetIssuance().parse(buffer)\n  }\n  parseAttachmentJSON(json: { [key: string]: any }) {\n    return new attachment.AssetIssuance().parseJSON(json)\n  }\n  canHaveRecipient() {\n    return false\n  }\n}\n\nexport class AssetIssueMore extends ColoredCoins {\n  getSubtype() {\n    return TransactionType.SUBTYPE_COLORED_COINS_ASSET_ISSUE_MORE\n  }\n  parseAttachment(buffer: ByteBuffer) {\n    return new attachment.AssetIssueMore().parse(buffer)\n  }\n  parseAttachmentJSON(json: { [key: string]: any }) {\n    return new attachment.AssetIssueMore().parseJSON(json)\n  }\n  canHaveRecipient() {\n    return false\n  }\n}\n\nexport class AssetTransfer extends ColoredCoins {\n  getSubtype() {\n    return TransactionType.SUBTYPE_COLORED_COINS_ASSET_TRANSFER\n  }\n  parseAttachment(buffer: ByteBuffer) {\n    return new attachment.AssetTransfer().parse(buffer)\n  }\n  parseAttachmentJSON(json: { [key: string]: any }) {\n    return new attachment.AssetTransfer().parseJSON(json)\n  }\n  canHaveRecipient() {\n    return true\n  }\n}\n\nexport class AtomicMultiTransfer extends ColoredCoins {\n  getSubtype() {\n    return TransactionType.SUBTYPE_COLORED_COINS_ATOMIC_MULTI_TRANSFER\n  }\n  parseAttachment(buffer: ByteBuffer) {\n    return new attachment.AtomicMultiTransfer().parse(buffer)\n  }\n  parseAttachmentJSON(json: { [key: string]: any }) {\n    return new attachment.AtomicMultiTransfer().parseJSON(json)\n  }\n  canHaveRecipient() {\n    return true\n  }\n}\n\nexport abstract class ColoredCoinsOrderPlacement extends ColoredCoins {\n  canHaveRecipient(): boolean {\n    return false\n  }\n}\n\nexport class AskOrderPlacement extends ColoredCoinsOrderPlacement {\n  getSubtype() {\n    return TransactionType.SUBTYPE_COLORED_COINS_ASK_ORDER_PLACEMENT\n  }\n  parseAttachment(buffer: ByteBuffer) {\n    return new attachment.ColoredCoinsAskOrderPlacement().parse(buffer)\n  }\n  parseAttachmentJSON(json: { [key: string]: any }) {\n    return new attachment.ColoredCoinsAskOrderPlacement().parseJSON(json)\n  }\n}\n\nexport class BidOrderPlacement extends ColoredCoinsOrderPlacement {\n  getSubtype() {\n    return TransactionType.SUBTYPE_COLORED_COINS_BID_ORDER_PLACEMENT\n  }\n  parseAttachment(buffer: ByteBuffer) {\n    return new attachment.ColoredCoinsBidOrderPlacement().parse(buffer)\n  }\n  parseAttachmentJSON(json: { [key: string]: any }) {\n    return new attachment.ColoredCoinsBidOrderPlacement().parseJSON(json)\n  }\n}\n\nexport abstract class ColoredCoinsOrderCancellation extends ColoredCoins {\n  canHaveRecipient(): boolean {\n    return false\n  }\n}\n\nexport class AskOrderCancellation extends ColoredCoinsOrderCancellation {\n  getSubtype() {\n    return TransactionType.SUBTYPE_COLORED_COINS_ASK_ORDER_CANCELLATION\n  }\n  parseAttachment(buffer: ByteBuffer) {\n    return new attachment.ColoredCoinsAskOrderCancellation().parse(buffer)\n  }\n  parseAttachmentJSON(json: { [key: string]: any }) {\n    return new attachment.ColoredCoinsAskOrderCancellation().parseJSON(json)\n  }\n}\n\nexport class BidOrderCancellation extends ColoredCoinsOrderCancellation {\n  getSubtype() {\n    return TransactionType.SUBTYPE_COLORED_COINS_BID_ORDER_CANCELLATION\n  }\n  parseAttachment(buffer: ByteBuffer) {\n    return new attachment.ColoredCoinsBidOrderCancellation().parse(buffer)\n  }\n  parseAttachmentJSON(json: { [key: string]: any }) {\n    return new attachment.ColoredCoinsBidOrderCancellation().parseJSON(json)\n  }\n}\n\nexport abstract class ColoredCoinsWhitelist extends ColoredCoins {\n  canHaveRecipient(): boolean {\n    return false\n  }\n}\n\nexport class WhitelistAccountAddition extends ColoredCoinsWhitelist {\n  getSubtype() {\n    return TransactionType.SUBTYPE_COLORED_COINS_WHITELIST_ACCOUNT_ADDITION\n  }\n  parseAttachment(buffer: ByteBuffer) {\n    return new attachment.ColoredCoinsWhitelistAccountAddition().parse(buffer)\n  }\n  parseAttachmentJSON(json: { [key: string]: any }) {\n    return new attachment.ColoredCoinsWhitelistAccountAddition().parseJSON(json)\n  }\n}\n\nexport class WhitelistAccountRemoval extends ColoredCoinsWhitelist {\n  getSubtype() {\n    return TransactionType.SUBTYPE_COLORED_COINS_WHITELIST_ACCOUNT_REMOVAL\n  }\n  parseAttachment(buffer: ByteBuffer) {\n    return new attachment.ColoredCoinsWhitelistAccountRemoval().parse(buffer)\n  }\n  parseAttachmentJSON(json: { [key: string]: any }) {\n    return new attachment.ColoredCoinsWhitelistAccountRemoval().parseJSON(json)\n  }\n}\n\nexport class WhitelistMarket extends ColoredCoinsWhitelist {\n  getSubtype() {\n    return TransactionType.SUBTYPE_COLORED_COINS_WHITELIST_MARKET\n  }\n  parseAttachment(buffer: ByteBuffer) {\n    return new attachment.ColoredCoinsWhitelistMarket().parse(buffer)\n  }\n  parseAttachmentJSON(json: { [key: string]: any }) {\n    return new attachment.ColoredCoinsWhitelistMarket().parseJSON(json)\n  }\n}\n\nexport abstract class AccountControl extends TransactionType {\n  getType(): number {\n    return TransactionType.TYPE_ACCOUNT_CONTROL\n  }\n  canHaveRecipient(): boolean {\n    return true\n  }\n}\n\nexport class EffectiveBalanceLeasing extends AccountControl {\n  getSubtype() {\n    return TransactionType.SUBTYPE_ACCOUNT_CONTROL_EFFECTIVE_BALANCE_LEASING\n  }\n  parseAttachment(buffer: ByteBuffer) {\n    return new attachment.AccountControlEffectiveBalanceLeasing().parse(buffer)\n  }\n  parseAttachmentJSON(json: { [key: string]: any }) {\n    return new attachment.AccountControlEffectiveBalanceLeasing().parseJSON(json)\n  }\n}\n\nexport const ORDINARY_PAYMENT_TRANSACTION_TYPE = new OrdinaryPayment()\nexport const ARBITRARY_MESSAGE_TRANSACTION_TYPE = new ArbitraryMessage()\nexport const COLORED_COINS_ASSET_ISSUANCE_TRANSACTION_TYPE = new AssetIssuance()\nexport const COLORED_COINS_ASSET_ISSUE_MORE_TRANSACTION_TYPE = new AssetIssueMore()\nexport const COLORED_COINS_ASSET_TRANSFER_TRANSACTION_TYPE = new AssetTransfer()\nexport const COLORED_COINS_ATOMIC_MULTI_TRANSFER_TRANSACTION_TYPE = new AtomicMultiTransfer()\nexport const COLORED_COINS_ASK_ORDER_PLACEMENT_TRANSACTION_TYPE = new AskOrderPlacement()\nexport const COLORED_COINS_BID_ORDER_PLACEMENT_TRANSACTION_TYPE = new BidOrderPlacement()\nexport const ASK_ORDER_CANCELLATION_TRANSACTION_TYPE = new AskOrderCancellation()\nexport const BID_ORDER_CANCELLATION_TRANSACTION_TYPE = new BidOrderCancellation()\nexport const WHITELIST_ACCOUNT_ADDITION_TRANSACTION_TYPE = new WhitelistAccountAddition()\nexport const WHITELIST_ACCOUNT_REMOVAL_TRANSACTION_TYPE = new WhitelistAccountRemoval()\nexport const WHITELIST_MARKET_TRANSACTION_TYPE = new WhitelistMarket()\nexport const EFFECTIVE_BALANCE_LEASING_TRANSACTION_TYPE = new EffectiveBalanceLeasing()\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2017 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\nimport * as appendix from \"./appendix\"\nimport * as transactionType from \"./transaction-type\"\nimport * as converters from \"./converters\"\nimport * as utils from \"./utils\"\nimport { Fee } from \"./fee\"\nimport Long from \"long\"\nimport * as ByteBuffer from \"bytebuffer\"\n\nexport interface Attachment extends appendix.Appendix {\n  getTransactionType(): transactionType.TransactionType\n}\n\nexport abstract class EmptyAttachment extends appendix.AbstractAppendix implements Attachment {\n  constructor() {\n    super()\n    this.version = 0\n  }\n\n  public parse(buffer: ByteBuffer) {\n    return this\n  }\n\n  public getSize(): number {\n    return this.getMySize()\n  }\n\n  putMyBytes(buffer: ByteBuffer) {}\n\n  putMyJSON(json: { [key: string]: any }) {}\n\n  getMySize() {\n    return 0\n  }\n\n  abstract getTransactionType(): transactionType.TransactionType\n  abstract getFee(): string\n}\n\nexport class Payment extends EmptyAttachment {\n  getFee() {\n    return Fee.DEFAULT\n  }\n  getAppendixName() {\n    return \"OrdinaryPayment\"\n  }\n  getTransactionType() {\n    return transactionType.ORDINARY_PAYMENT_TRANSACTION_TYPE\n  }\n}\n\nexport class Message extends EmptyAttachment {\n  getFee() {\n    return Fee.DEFAULT\n  }\n  getAppendixName() {\n    return \"ArbitraryMessage\"\n  }\n  getTransactionType() {\n    return transactionType.ARBITRARY_MESSAGE_TRANSACTION_TYPE\n  }\n}\n\n// ------------------- Asset ------------------------------------------------------------------------------------------\n\nexport class AssetIssuance extends appendix.AbstractAppendix implements Attachment {\n  private descriptionUrl: string\n  private descriptionHash: number[]\n  private quantity: Long\n  private decimals: number\n  private dillutable: boolean\n\n  init(\n    descriptionUrl: string,\n    descriptionHash: number[],\n    quantity: string,\n    decimals: number,\n    dillutable: boolean\n  ) {\n    this.descriptionUrl = descriptionUrl\n    this.descriptionHash = descriptionHash == null ? new Array(32).fill(0) : descriptionHash\n    this.quantity = Long.fromString(quantity)\n    this.decimals = decimals\n    this.dillutable = dillutable\n    return this\n  }\n\n  getMySize(): number {\n    return 1 + converters.stringToByteArray(this.descriptionUrl).length + 32 + 8 + 1 + 1\n  }\n\n  public parse(buffer: ByteBuffer) {\n    super.parse(buffer)\n    this.descriptionUrl = converters.byteArrayToString(utils.readBytes(buffer, buffer.readByte())) //need to check Constants.MAX_ASSET_DESCRIPTION_URL_LENGTH ?\n    this.descriptionHash = utils.readBytes(buffer, 32)\n    this.quantity = buffer.readInt64()\n    this.decimals = buffer.readByte()\n    this.dillutable = buffer.readByte() == 1\n    return this\n  }\n\n  putMyBytes(buffer: ByteBuffer): void {\n    let descriptionUrl = converters.stringToByteArray(this.descriptionUrl)\n    buffer.writeByte(descriptionUrl.length)\n    utils.writeBytes(buffer, descriptionUrl)\n    if (this.descriptionHash && this.descriptionHash.length != 32)\n      throw new Error(\"Description hash length must be 32\")\n    utils.writeBytes(buffer, this.descriptionHash)\n    buffer.writeInt64(this.quantity)\n    buffer.writeByte(this.decimals)\n    buffer.writeByte(this.dillutable ? 1 : 0)\n  }\n\n  public parseJSON(json: { [key: string]: any }) {\n    super.parseJSON(json)\n    this.descriptionUrl = json[\"descriptionUrl\"]\n    this.descriptionHash = <any>converters.hexStringToByteArray(json[\"descriptionHash\"])\n    this.quantity = Long.fromString(json[\"quantity\"])\n    this.decimals = json[\"decimals\"]\n    this.dillutable = json[\"dillutable\"]\n    return this\n  }\n\n  putMyJSON(json: { [key: string]: any }): void {\n    json[\"descriptionUrl\"] = this.descriptionUrl\n    json[\"descriptionHash\"] = converters.byteArrayToHexString(Array.from(this.descriptionHash))\n    json[\"quantity\"] = this.quantity.toString()\n    json[\"decimals\"] = this.decimals\n    json[\"dillutable\"] = this.dillutable\n  }\n\n  getFee() {\n    return Fee.ASSET_ISSUANCE_FEE\n  }\n\n  getAppendixName() {\n    return \"AssetIssuance\"\n  }\n\n  getTransactionType() {\n    return transactionType.COLORED_COINS_ASSET_ISSUANCE_TRANSACTION_TYPE\n  }\n\n  getDescriptionUrl(): string {\n    return this.descriptionUrl\n  }\n\n  getDescriptionHash(): number[] {\n    return this.descriptionHash\n  }\n\n  getQuantity(): Long {\n    return this.quantity\n  }\n\n  getDecimals(): number {\n    return this.decimals\n  }\n\n  getDillutable(): boolean {\n    return this.dillutable\n  }\n}\n\nexport abstract class AssetBase extends appendix.AbstractAppendix {\n  private assetId: Long\n  private quantity: Long\n\n  init(assetId: string, quantity: string) {\n    this.assetId = Long.fromString(assetId)\n    this.quantity = Long.fromString(quantity)\n    return this\n  }\n\n  getMySize(): number {\n    return 8 + 8\n  }\n\n  public parse(buffer: ByteBuffer) {\n    super.parse(buffer)\n    this.assetId = buffer.readInt64()\n    this.quantity = buffer.readInt64()\n    return this\n  }\n\n  putMyBytes(buffer: ByteBuffer): void {\n    buffer.writeInt64(this.assetId)\n    buffer.writeInt64(this.quantity)\n  }\n\n  putMyJSON(json: { [key: string]: any }): void {\n    json[\"asset\"] = this.assetId.toUnsigned().toString()\n    json[\"quantity\"] = this.quantity.toString()\n  }\n\n  parseJSON(json: { [key: string]: any }) {\n    super.parseJSON(json)\n    this.assetId = Long.fromString(json[\"asset\"], true)\n    this.quantity = Long.fromString(json[\"quantity\"])\n    return this\n  }\n\n  getAssetId(): Long {\n    return this.assetId\n  }\n\n  getQuantity(): Long {\n    return this.quantity\n  }\n}\n\nexport class AssetIssueMore extends AssetBase implements Attachment {\n  getFee() {\n    return Fee.ASSET_ISSUE_MORE_FEE\n  }\n\n  getAppendixName() {\n    return \"AssetIssueMore\"\n  }\n\n  getTransactionType() {\n    return transactionType.COLORED_COINS_ASSET_ISSUE_MORE_TRANSACTION_TYPE\n  }\n}\n\nexport class AssetTransfer extends AssetBase implements Attachment {\n  getFee() {\n    return Fee.ASSET_TRANSFER_FEE\n  }\n\n  getAppendixName() {\n    return \"AssetTransfer\"\n  }\n\n  getTransactionType() {\n    return transactionType.COLORED_COINS_ASSET_TRANSFER_TRANSACTION_TYPE\n  }\n}\n\nexport type AtomicTransfer = {\n  recipient: string\n  assetId: string\n  quantity: string\n}\n\nexport class AtomicMultiTransfer extends appendix.AbstractAppendix implements Attachment {\n  private transfers: AtomicTransfer[]\n\n  init(transfers: AtomicTransfer[]) {\n    this.transfers = transfers\n    return this\n  }\n\n  get getTransfers(): AtomicTransfer[] {\n    return this.transfers\n  }\n\n  getFee() {\n    return Fee.ATOMIC_MULTI_TRANSFER_FEE\n  }\n\n  getAppendixName() {\n    return \"AtomicMultiTransfer\"\n  }\n\n  getTransactionType() {\n    return transactionType.COLORED_COINS_ATOMIC_MULTI_TRANSFER_TRANSACTION_TYPE\n  }\n\n  getMySize(): number {\n    return 1 + this.transfers.length * (8 + 8 + 8)\n  }\n\n  putMyBytes(buffer: ByteBuffer): void {\n    buffer.writeByte(this.transfers.length)\n    this.transfers.forEach(function(transfer) {\n      buffer.writeInt64(Long.fromString(transfer.recipient, true))\n      buffer.writeInt64(Long.fromString(transfer.assetId, true))\n      buffer.writeInt64(Long.fromString(transfer.quantity))\n    })\n  }\n\n  public parse(buffer: ByteBuffer) {\n    super.parse(buffer)\n    let count = buffer.readByte()\n    this.transfers = []\n    for (let i = 0; i < count; i++) {\n      let v: AtomicTransfer = {\n        recipient: buffer\n          .readInt64()\n          .toUnsigned()\n          .toString(),\n        assetId: buffer\n          .readInt64()\n          .toUnsigned()\n          .toString(),\n        quantity: buffer.readInt64().toString()\n      }\n      this.transfers.push(v)\n    }\n    return this\n  }\n\n  putMyJSON(json: { [key: string]: any }): void {\n    let ts = <Array<any>>[]\n    this.transfers.forEach(function(transfer) {\n      ts.push({\n        recipient: transfer.recipient,\n        assetId: transfer.assetId,\n        quantity: transfer.quantity\n      })\n    })\n    json[\"transfers\"] = ts\n  }\n\n  parseJSON(json: { [key: string]: any }) {\n    this.transfers = []\n    let ts = json[\"transfers\"]\n    for (let i in ts) {\n      this.transfers.push({\n        recipient: ts[i].recipient,\n        assetId: ts[i].assetId,\n        quantity: ts[i].quantity\n      })\n    }\n    return this\n  }\n}\n\n// ------------------- Colored coins. Orders ----------------------------------------------------------------------------\n\nexport abstract class ColoredCoinsOrderPlacement extends appendix.AbstractAppendix {\n  private currencyId: Long\n  private assetId: Long\n  private quantity: Long\n  private price: Long\n  private expiration: number\n\n  init(currencyId: string, assetId: string, quantity: string, price: string, expiration: number) {\n    this.currencyId = Long.fromString(currencyId)\n    this.assetId = Long.fromString(assetId)\n    this.quantity = Long.fromString(quantity)\n    this.price = Long.fromString(price)\n    this.expiration = expiration\n    return this\n  }\n\n  getMySize(): number {\n    return 8 + 8 + 8 + 8 + 4\n  }\n\n  putMyBytes(buffer: ByteBuffer): void {\n    buffer.writeInt64(this.currencyId)\n    buffer.writeInt64(this.assetId)\n    buffer.writeInt64(this.quantity)\n    buffer.writeInt64(this.price)\n    buffer.writeInt32(this.expiration)\n  }\n\n  public parse(buffer: ByteBuffer) {\n    super.parse(buffer)\n    this.currencyId = buffer.readInt64()\n    this.assetId = buffer.readInt64()\n    this.quantity = buffer.readInt64()\n    this.price = buffer.readInt64()\n    this.expiration = buffer.readInt32()\n    return this\n  }\n\n  putMyJSON(json: { [key: string]: any }): void {\n    json[\"currency\"] = this.currencyId.toUnsigned().toString()\n    json[\"asset\"] = this.assetId.toUnsigned().toString()\n    json[\"quantity\"] = this.quantity.toString()\n    json[\"price\"] = this.price.toString()\n    json[\"expiration\"] = this.expiration.toString()\n  }\n\n  parseJSON(json: { [key: string]: any }) {\n    super.parseJSON(json)\n    this.currencyId = Long.fromString(json[\"currency\"], true)\n    this.assetId = Long.fromString(json[\"asset\"], true)\n    this.quantity = Long.fromString(json[\"quantity\"])\n    this.price = Long.fromString(json[\"price\"])\n    this.expiration = json[\"expiration\"]\n    return this\n  }\n\n  getFee() {\n    return Fee.ORDER_PLACEMENT_FEE\n  }\n\n  getCurrencyId(): Long {\n    return this.currencyId\n  }\n\n  getAssetId(): Long {\n    return this.assetId\n  }\n\n  getQuantity(): Long {\n    return this.quantity\n  }\n\n  getPrice(): Long {\n    return this.price\n  }\n\n  getExpiration(): number {\n    return this.expiration\n  }\n}\n\nexport class ColoredCoinsAskOrderPlacement extends ColoredCoinsOrderPlacement\n  implements Attachment {\n  getAppendixName() {\n    return \"AskOrderPlacement\"\n  }\n\n  getTransactionType() {\n    return transactionType.COLORED_COINS_ASK_ORDER_PLACEMENT_TRANSACTION_TYPE\n  }\n}\n\nexport class ColoredCoinsBidOrderPlacement extends ColoredCoinsOrderPlacement\n  implements Attachment {\n  getAppendixName() {\n    return \"BidOrderPlacement\"\n  }\n\n  getTransactionType() {\n    return transactionType.COLORED_COINS_BID_ORDER_PLACEMENT_TRANSACTION_TYPE\n  }\n}\n\nexport abstract class ColoredCoinsOrderCancellation extends appendix.AbstractAppendix {\n  private orderId: Long\n\n  init(orderId: string) {\n    this.orderId = Long.fromString(orderId)\n    return this\n  }\n\n  getMySize(): number {\n    return 8\n  }\n\n  public parse(buffer: ByteBuffer) {\n    super.parse(buffer)\n    this.orderId = buffer.readInt64()\n    return this\n  }\n\n  putMyBytes(buffer: ByteBuffer): void {\n    buffer.writeInt64(this.orderId)\n  }\n\n  parseJSON(json: { [key: string]: any }) {\n    super.parseJSON(json)\n    this.orderId = Long.fromString(json[\"order\"], true)\n    return this\n  }\n\n  putMyJSON(json: { [key: string]: any }): void {\n    json[\"order\"] = this.orderId.toUnsigned().toString()\n  }\n\n  getFee() {\n    return Fee.ORDER_CANCELLATION_FEE\n  }\n\n  getOrderId(): Long {\n    return this.orderId\n  }\n}\n\nexport class ColoredCoinsAskOrderCancellation extends ColoredCoinsOrderCancellation\n  implements Attachment {\n  getAppendixName() {\n    return \"AskOrderCancellation\"\n  }\n\n  getTransactionType() {\n    return transactionType.ASK_ORDER_CANCELLATION_TRANSACTION_TYPE\n  }\n}\n\nexport class ColoredCoinsBidOrderCancellation extends ColoredCoinsOrderCancellation\n  implements Attachment {\n  getAppendixName() {\n    return \"BidOrderCancellation\"\n  }\n\n  getTransactionType() {\n    return transactionType.BID_ORDER_CANCELLATION_TRANSACTION_TYPE\n  }\n}\n\n// ------------------- Colored coins. Whitelist ------------------------------------------------------------------------\n\nexport class ColoredCoinsWhitelistAccountAddition extends appendix.AbstractAppendix\n  implements Attachment {\n  private assetId: Long\n  private accountId: Long\n  private endHeight: number\n\n  init(assetId: string, accountId: string, endHeight: number) {\n    this.assetId = Long.fromString(assetId)\n    this.accountId = Long.fromString(accountId)\n    this.endHeight = endHeight\n    return this\n  }\n\n  getMySize(): number {\n    return 8 + 8 + 4\n  }\n\n  public parse(buffer: ByteBuffer) {\n    super.parse(buffer)\n    this.assetId = buffer.readInt64()\n    this.accountId = buffer.readInt64()\n    this.endHeight = buffer.readInt32()\n    return this\n  }\n\n  putMyBytes(buffer: ByteBuffer): void {\n    buffer.writeInt64(this.assetId)\n    buffer.writeInt64(this.accountId)\n    buffer.writeInt32(this.endHeight)\n  }\n\n  parseJSON(json: { [key: string]: any }) {\n    super.parseJSON(json)\n    this.assetId = Long.fromString(json[\"asset\"], true)\n    this.accountId = Long.fromString(json[\"account\"], true)\n    this.endHeight = json[\"endHeight\"]\n    return this\n  }\n\n  putMyJSON(json: { [key: string]: any }): void {\n    json[\"asset\"] = this.assetId.toUnsigned().toString()\n    json[\"account\"] = this.accountId.toUnsigned().toString()\n    json[\"endHeight\"] = this.endHeight\n  }\n\n  getAppendixName() {\n    return \"WhitelistAccountAddition\"\n  }\n\n  getTransactionType() {\n    return transactionType.WHITELIST_ACCOUNT_ADDITION_TRANSACTION_TYPE\n  }\n\n  getFee() {\n    return Fee.WHITELIST_ACCOUNT_FEE\n  }\n\n  getAssetId(): Long {\n    return this.assetId\n  }\n\n  getAccountId(): Long {\n    return this.accountId\n  }\n\n  getEndHeight(): number {\n    return this.endHeight\n  }\n}\n\nexport class ColoredCoinsWhitelistAccountRemoval extends appendix.AbstractAppendix\n  implements Attachment {\n  private assetId: Long\n  private accountId: Long\n\n  init(assetId: string, accountId: string) {\n    this.assetId = Long.fromString(assetId)\n    this.accountId = Long.fromString(accountId)\n    return this\n  }\n\n  getMySize(): number {\n    return 8 + 8\n  }\n\n  public parse(buffer: ByteBuffer) {\n    super.parse(buffer)\n    this.assetId = buffer.readInt64()\n    this.accountId = buffer.readInt64()\n    return this\n  }\n\n  putMyBytes(buffer: ByteBuffer): void {\n    buffer.writeInt64(this.assetId)\n    buffer.writeInt64(this.accountId)\n  }\n\n  parseJSON(json: { [key: string]: any }) {\n    super.parseJSON(json)\n    this.assetId = Long.fromString(json[\"asset\"], true)\n    this.accountId = Long.fromString(json[\"account\"], true)\n    return this\n  }\n\n  putMyJSON(json: { [key: string]: any }): void {\n    json[\"asset\"] = this.assetId.toUnsigned().toString()\n    json[\"account\"] = this.accountId.toUnsigned().toString()\n  }\n\n  getAppendixName() {\n    return \"WhitelistAccountRemoval\"\n  }\n\n  getTransactionType() {\n    return transactionType.WHITELIST_ACCOUNT_REMOVAL_TRANSACTION_TYPE\n  }\n\n  getFee() {\n    return Fee.WHITELIST_ACCOUNT_FEE\n  }\n\n  getAssetId(): Long {\n    return this.assetId\n  }\n\n  getAccountId(): Long {\n    return this.accountId\n  }\n}\n\nexport class ColoredCoinsWhitelistMarket extends appendix.AbstractAppendix implements Attachment {\n  private currencyId: Long\n  private assetId: Long\n\n  init(currencyId: string, assetId: string) {\n    this.currencyId = Long.fromString(currencyId)\n    this.assetId = Long.fromString(assetId)\n    return this\n  }\n\n  getMySize(): number {\n    return 8 + 8\n  }\n\n  public parse(buffer: ByteBuffer) {\n    super.parse(buffer)\n    this.currencyId = buffer.readInt64()\n    this.assetId = buffer.readInt64()\n    return this\n  }\n\n  putMyBytes(buffer: ByteBuffer): void {\n    buffer.writeInt64(this.currencyId)\n    buffer.writeInt64(this.assetId)\n  }\n\n  parseJSON(json: { [key: string]: any }) {\n    super.parseJSON(json)\n    this.currencyId = Long.fromString(json[\"currency\"], true)\n    this.assetId = Long.fromString(json[\"asset\"], true)\n    return this\n  }\n\n  putMyJSON(json: { [key: string]: any }): void {\n    json[\"currency\"] = this.currencyId.toUnsigned().toString()\n    json[\"asset\"] = this.assetId.toUnsigned().toString()\n  }\n\n  getAppendixName() {\n    return \"WhitelistMarket\"\n  }\n\n  getTransactionType() {\n    return transactionType.WHITELIST_MARKET_TRANSACTION_TYPE\n  }\n\n  getFee() {\n    return Fee.WHITELIST_MARKET_FEE\n  }\n\n  getAssetId(): Long {\n    return this.assetId\n  }\n\n  getCurrencyId(): Long {\n    return this.currencyId\n  }\n}\n\n// ------------------- AccountControlEffectiveBalanceLeasing -----------------------------------------------------------\n\nexport class AccountControlEffectiveBalanceLeasing extends appendix.AbstractAppendix\n  implements Attachment {\n  private period: number\n\n  init(period: number) {\n    this.period = period\n    return this\n  }\n\n  getMySize(): number {\n    return 4\n  }\n\n  public parse(buffer: ByteBuffer) {\n    super.parse(buffer)\n    this.period = buffer.readInt32()\n    return this\n  }\n\n  putMyBytes(buffer: ByteBuffer): void {\n    buffer.writeInt32(this.period)\n  }\n\n  parseJSON(json: { [key: string]: any }) {\n    super.parseJSON(json)\n    this.period = json[\"period\"]\n    return this\n  }\n\n  putMyJSON(json: { [key: string]: any }): void {\n    json[\"period\"] = this.period\n  }\n\n  getAppendixName() {\n    return \"EffectiveBalanceLeasing\"\n  }\n\n  getTransactionType() {\n    return transactionType.EFFECTIVE_BALANCE_LEASING_TRANSACTION_TYPE\n  }\n\n  getFee() {\n    return Fee.EFFECTIVE_BALANCE_LEASING_FEE\n  }\n\n  getPeriod(): number {\n    return this.period\n  }\n}\n\nexport const ORDINARY_PAYMENT = new Payment()\nexport const ARBITRARY_MESSAGE = new Message()\n","/*\r\n Copyright 2013-2014 Daniel Wirtz <dcode@dcode.io>\r\n\r\n Licensed under the Apache License, Version 2.0 (the \"License\");\r\n you may not use this file except in compliance with the License.\r\n You may obtain a copy of the License at\r\n\r\n http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n Unless required by applicable law or agreed to in writing, software\r\n distributed under the License is distributed on an \"AS IS\" BASIS,\r\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n See the License for the specific language governing permissions and\r\n limitations under the License.\r\n */\r\n\r\n/**\r\n * @license bytebuffer.js (c) 2015 Daniel Wirtz <dcode@dcode.io>\r\n * Backing buffer / Accessor: node Buffer\r\n * Released under the Apache License, Version 2.0\r\n * see: https://github.com/dcodeIO/bytebuffer.js for details\r\n */\r\nmodule.exports = (function() {\r\n    \"use strict\";\r\n\r\n    var buffer = require(\"buffer\"),\r\n        Buffer = buffer[\"Buffer\"],\r\n        Long = require(\"long\"),\r\n        memcpy = null; try { memcpy = require(\"memcpy\"); } catch (e) {}\r\n\r\n    /**\r\n     * Constructs a new ByteBuffer.\r\n     * @class The swiss army knife for binary data in JavaScript.\r\n     * @exports ByteBuffer\r\n     * @constructor\r\n     * @param {number=} capacity Initial capacity. Defaults to {@link ByteBuffer.DEFAULT_CAPACITY}.\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @expose\r\n     */\r\n    var ByteBuffer = function(capacity, littleEndian, noAssert) {\r\n        if (typeof capacity === 'undefined')\r\n            capacity = ByteBuffer.DEFAULT_CAPACITY;\r\n        if (typeof littleEndian === 'undefined')\r\n            littleEndian = ByteBuffer.DEFAULT_ENDIAN;\r\n        if (typeof noAssert === 'undefined')\r\n            noAssert = ByteBuffer.DEFAULT_NOASSERT;\r\n        if (!noAssert) {\r\n            capacity = capacity | 0;\r\n            if (capacity < 0)\r\n                throw RangeError(\"Illegal capacity\");\r\n            littleEndian = !!littleEndian;\r\n            noAssert = !!noAssert;\r\n        }\r\n\r\n        /**\r\n         * Backing node Buffer.\r\n         * @type {!Buffer}\r\n         * @expose\r\n         */\r\n        this.buffer = capacity === 0 ? EMPTY_BUFFER : new Buffer(capacity);\r\n\r\n        /**\r\n         * Absolute read/write offset.\r\n         * @type {number}\r\n         * @expose\r\n         * @see ByteBuffer#flip\r\n         * @see ByteBuffer#clear\r\n         */\r\n        this.offset = 0;\r\n\r\n        /**\r\n         * Marked offset.\r\n         * @type {number}\r\n         * @expose\r\n         * @see ByteBuffer#mark\r\n         * @see ByteBuffer#reset\r\n         */\r\n        this.markedOffset = -1;\r\n\r\n        /**\r\n         * Absolute limit of the contained data. Set to the backing buffer's capacity upon allocation.\r\n         * @type {number}\r\n         * @expose\r\n         * @see ByteBuffer#flip\r\n         * @see ByteBuffer#clear\r\n         */\r\n        this.limit = capacity;\r\n\r\n        /**\r\n         * Whether to use little endian byte order, defaults to `false` for big endian.\r\n         * @type {boolean}\r\n         * @expose\r\n         */\r\n        this.littleEndian = littleEndian;\r\n\r\n        /**\r\n         * Whether to skip assertions of offsets and values, defaults to `false`.\r\n         * @type {boolean}\r\n         * @expose\r\n         */\r\n        this.noAssert = noAssert;\r\n    };\r\n\r\n    /**\r\n     * ByteBuffer version.\r\n     * @type {string}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ByteBuffer.VERSION = \"5.0.1\";\r\n\r\n    /**\r\n     * Little endian constant that can be used instead of its boolean value. Evaluates to `true`.\r\n     * @type {boolean}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ByteBuffer.LITTLE_ENDIAN = true;\r\n\r\n    /**\r\n     * Big endian constant that can be used instead of its boolean value. Evaluates to `false`.\r\n     * @type {boolean}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ByteBuffer.BIG_ENDIAN = false;\r\n\r\n    /**\r\n     * Default initial capacity of `16`.\r\n     * @type {number}\r\n     * @expose\r\n     */\r\n    ByteBuffer.DEFAULT_CAPACITY = 16;\r\n\r\n    /**\r\n     * Default endianess of `false` for big endian.\r\n     * @type {boolean}\r\n     * @expose\r\n     */\r\n    ByteBuffer.DEFAULT_ENDIAN = ByteBuffer.BIG_ENDIAN;\r\n\r\n    /**\r\n     * Default no assertions flag of `false`.\r\n     * @type {boolean}\r\n     * @expose\r\n     */\r\n    ByteBuffer.DEFAULT_NOASSERT = false;\r\n\r\n    /**\r\n     * A `Long` class for representing a 64-bit two's-complement integer value.\r\n     * @type {!Long}\r\n     * @const\r\n     * @see https://npmjs.org/package/long\r\n     * @expose\r\n     */\r\n    ByteBuffer.Long = Long;\r\n\r\n    /**\r\n     * @alias ByteBuffer.prototype\r\n     * @inner\r\n     */\r\n    var ByteBufferPrototype = ByteBuffer.prototype;\r\n\r\n    /**\r\n     * An indicator used to reliably determine if an object is a ByteBuffer or not.\r\n     * @type {boolean}\r\n     * @const\r\n     * @expose\r\n     * @private\r\n     */\r\n    ByteBufferPrototype.__isByteBuffer__;\r\n\r\n    Object.defineProperty(ByteBufferPrototype, \"__isByteBuffer__\", {\r\n        value: true,\r\n        enumerable: false,\r\n        configurable: false\r\n    });\r\n\r\n    // helpers\r\n\r\n    /**\r\n     * @type {!Buffer}\r\n     * @inner\r\n     */\r\n    var EMPTY_BUFFER = new Buffer(0);\r\n\r\n    /**\r\n     * String.fromCharCode reference for compile-time renaming.\r\n     * @type {function(...number):string}\r\n     * @inner\r\n     */\r\n    var stringFromCharCode = String.fromCharCode;\r\n\r\n    /**\r\n     * Creates a source function for a string.\r\n     * @param {string} s String to read from\r\n     * @returns {function():number|null} Source function returning the next char code respectively `null` if there are\r\n     *  no more characters left.\r\n     * @throws {TypeError} If the argument is invalid\r\n     * @inner\r\n     */\r\n    function stringSource(s) {\r\n        var i=0; return function() {\r\n            return i < s.length ? s.charCodeAt(i++) : null;\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Creates a destination function for a string.\r\n     * @returns {function(number=):undefined|string} Destination function successively called with the next char code.\r\n     *  Returns the final string when called without arguments.\r\n     * @inner\r\n     */\r\n    function stringDestination() {\r\n        var cs = [], ps = []; return function() {\r\n            if (arguments.length === 0)\r\n                return ps.join('')+stringFromCharCode.apply(String, cs);\r\n            if (cs.length + arguments.length > 1024)\r\n                ps.push(stringFromCharCode.apply(String, cs)),\r\n                    cs.length = 0;\r\n            Array.prototype.push.apply(cs, arguments);\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Gets the accessor type.\r\n     * @returns {Function} `Buffer` under node.js, `Uint8Array` respectively `DataView` in the browser (classes)\r\n     * @expose\r\n     */\r\n    ByteBuffer.accessor = function() {\r\n        return Buffer;\r\n    };\r\n    /**\r\n     * Allocates a new ByteBuffer backed by a buffer of the specified capacity.\r\n     * @param {number=} capacity Initial capacity. Defaults to {@link ByteBuffer.DEFAULT_CAPACITY}.\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @returns {!ByteBuffer}\r\n     * @expose\r\n     */\r\n    ByteBuffer.allocate = function(capacity, littleEndian, noAssert) {\r\n        return new ByteBuffer(capacity, littleEndian, noAssert);\r\n    };\r\n\r\n    /**\r\n     * Concatenates multiple ByteBuffers into one.\r\n     * @param {!Array.<!ByteBuffer|!Buffer|!ArrayBuffer|!Uint8Array|string>} buffers Buffers to concatenate\r\n     * @param {(string|boolean)=} encoding String encoding if `buffers` contains a string (\"base64\", \"hex\", \"binary\",\r\n     *  defaults to \"utf8\")\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order for the resulting ByteBuffer. Defaults\r\n     *  to {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values for the resulting ByteBuffer. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @returns {!ByteBuffer} Concatenated ByteBuffer\r\n     * @expose\r\n     */\r\n    ByteBuffer.concat = function(buffers, encoding, littleEndian, noAssert) {\r\n        if (typeof encoding === 'boolean' || typeof encoding !== 'string') {\r\n            noAssert = littleEndian;\r\n            littleEndian = encoding;\r\n            encoding = undefined;\r\n        }\r\n        var capacity = 0;\r\n        for (var i=0, k=buffers.length, length; i<k; ++i) {\r\n            if (!ByteBuffer.isByteBuffer(buffers[i]))\r\n                buffers[i] = ByteBuffer.wrap(buffers[i], encoding);\r\n            length = buffers[i].limit - buffers[i].offset;\r\n            if (length > 0) capacity += length;\r\n        }\r\n        if (capacity === 0)\r\n            return new ByteBuffer(0, littleEndian, noAssert);\r\n        var bb = new ByteBuffer(capacity, littleEndian, noAssert),\r\n            bi;\r\n        i=0; while (i<k) {\r\n            bi = buffers[i++];\r\n            length = bi.limit - bi.offset;\r\n            if (length <= 0) continue;\r\n            bi.buffer.copy(bb.buffer, bb.offset, bi.offset, bi.limit);\r\n            bb.offset += length;\r\n        }\r\n        bb.limit = bb.offset;\r\n        bb.offset = 0;\r\n        return bb;\r\n    };\r\n\r\n    /**\r\n     * Tests if the specified type is a ByteBuffer.\r\n     * @param {*} bb ByteBuffer to test\r\n     * @returns {boolean} `true` if it is a ByteBuffer, otherwise `false`\r\n     * @expose\r\n     */\r\n    ByteBuffer.isByteBuffer = function(bb) {\r\n        return (bb && bb[\"__isByteBuffer__\"]) === true;\r\n    };\r\n    /**\r\n     * Gets the backing buffer type.\r\n     * @returns {Function} `Buffer` under node.js, `ArrayBuffer` in the browser (classes)\r\n     * @expose\r\n     */\r\n    ByteBuffer.type = function() {\r\n        return Buffer;\r\n    };\r\n    /**\r\n     * Wraps a buffer or a string. Sets the allocated ByteBuffer's {@link ByteBuffer#offset} to `0` and its\r\n     *  {@link ByteBuffer#limit} to the length of the wrapped data.\r\n     * @param {!ByteBuffer|!Buffer|!ArrayBuffer|!Uint8Array|string|!Array.<number>} buffer Anything that can be wrapped\r\n     * @param {(string|boolean)=} encoding String encoding if `buffer` is a string (\"base64\", \"hex\", \"binary\", defaults to\r\n     *  \"utf8\")\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @returns {!ByteBuffer} A ByteBuffer wrapping `buffer`\r\n     * @expose\r\n     */\r\n    ByteBuffer.wrap = function(buffer, encoding, littleEndian, noAssert) {\r\n        if (typeof encoding !== 'string') {\r\n            noAssert = littleEndian;\r\n            littleEndian = encoding;\r\n            encoding = undefined;\r\n        }\r\n        if (typeof buffer === 'string') {\r\n            if (typeof encoding === 'undefined')\r\n                encoding = \"utf8\";\r\n            switch (encoding) {\r\n                case \"base64\":\r\n                    return ByteBuffer.fromBase64(buffer, littleEndian);\r\n                case \"hex\":\r\n                    return ByteBuffer.fromHex(buffer, littleEndian);\r\n                case \"binary\":\r\n                    return ByteBuffer.fromBinary(buffer, littleEndian);\r\n                case \"utf8\":\r\n                    return ByteBuffer.fromUTF8(buffer, littleEndian);\r\n                case \"debug\":\r\n                    return ByteBuffer.fromDebug(buffer, littleEndian);\r\n                default:\r\n                    throw Error(\"Unsupported encoding: \"+encoding);\r\n            }\r\n        }\r\n        if (buffer === null || typeof buffer !== 'object')\r\n            throw TypeError(\"Illegal buffer\");\r\n        var bb;\r\n        if (ByteBuffer.isByteBuffer(buffer)) {\r\n            bb = ByteBufferPrototype.clone.call(buffer);\r\n            bb.markedOffset = -1;\r\n            return bb;\r\n        }\r\n        var i = 0,\r\n            k = 0,\r\n            b;\r\n        if (buffer instanceof Uint8Array) { // Extract bytes from Uint8Array\r\n            b = new Buffer(buffer.length);\r\n            if (memcpy) { // Fast\r\n                memcpy(b, 0, buffer.buffer, buffer.byteOffset, buffer.byteOffset + buffer.length);\r\n            } else { // Slow\r\n                for (i=0, k=buffer.length; i<k; ++i)\r\n                    b[i] = buffer[i];\r\n            }\r\n            buffer = b;\r\n        } else if (buffer instanceof ArrayBuffer) { // Convert ArrayBuffer to Buffer\r\n            b = new Buffer(buffer.byteLength);\r\n            if (memcpy) { // Fast\r\n                memcpy(b, 0, buffer, 0, buffer.byteLength);\r\n            } else { // Slow\r\n                buffer = new Uint8Array(buffer);\r\n                for (i=0, k=buffer.length; i<k; ++i) {\r\n                    b[i] = buffer[i];\r\n                }\r\n            }\r\n            buffer = b;\r\n        } else if (!(buffer instanceof Buffer)) { // Create from octets if it is an error, otherwise fail\r\n            if (Object.prototype.toString.call(buffer) !== \"[object Array]\")\r\n                throw TypeError(\"Illegal buffer\");\r\n            buffer = new Buffer(buffer);\r\n        }\r\n        bb = new ByteBuffer(0, littleEndian, noAssert);\r\n        if (buffer.length > 0) { // Avoid references to more than one EMPTY_BUFFER\r\n            bb.buffer = buffer;\r\n            bb.limit = buffer.length;\r\n        }\r\n        return bb;\r\n    };\r\n\r\n    /**\r\n     * Writes the array as a bitset.\r\n     * @param {Array<boolean>} value Array of booleans to write\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `length` if omitted.\r\n     * @returns {!ByteBuffer}\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeBitSet = function(value, offset) {\r\n      var relative = typeof offset === 'undefined';\n      if (relative) offset = this.offset;\n      if (!this.noAssert) {\r\n        if (!(value instanceof Array))\r\n          throw TypeError(\"Illegal BitSet: Not an array\");\r\n        if (typeof offset !== 'number' || offset % 1 !== 0)\n            throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n        offset >>>= 0;\n        if (offset < 0 || offset + 0 > this.buffer.length)\n            throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n      }\r\n\r\n      var start = offset,\r\n          bits = value.length,\r\n          bytes = (bits >> 3),\r\n          bit = 0,\r\n          k;\r\n\r\n      offset += this.writeVarint32(bits,offset);\r\n\r\n      while(bytes--) {\r\n        k = (!!value[bit++] & 1) |\r\n            ((!!value[bit++] & 1) << 1) |\r\n            ((!!value[bit++] & 1) << 2) |\r\n            ((!!value[bit++] & 1) << 3) |\r\n            ((!!value[bit++] & 1) << 4) |\r\n            ((!!value[bit++] & 1) << 5) |\r\n            ((!!value[bit++] & 1) << 6) |\r\n            ((!!value[bit++] & 1) << 7);\r\n        this.writeByte(k,offset++);\r\n      }\r\n\r\n      if(bit < bits) {\r\n        var m = 0; k = 0;\r\n        while(bit < bits) k = k | ((!!value[bit++] & 1) << (m++));\r\n        this.writeByte(k,offset++);\r\n      }\r\n\r\n      if (relative) {\r\n        this.offset = offset;\r\n        return this;\r\n      }\r\n      return offset - start;\r\n    }\r\n\r\n    /**\r\n     * Reads a BitSet as an array of booleans.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `length` if omitted.\r\n     * @returns {Array<boolean>\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readBitSet = function(offset) {\r\n      var relative = typeof offset === 'undefined';\n      if (relative) offset = this.offset;\n\r\n      var ret = this.readVarint32(offset),\r\n          bits = ret.value,\r\n          bytes = (bits >> 3),\r\n          bit = 0,\r\n          value = [],\r\n          k;\r\n\r\n      offset += ret.length;\r\n\r\n      while(bytes--) {\r\n        k = this.readByte(offset++);\r\n        value[bit++] = !!(k & 0x01);\r\n        value[bit++] = !!(k & 0x02);\r\n        value[bit++] = !!(k & 0x04);\r\n        value[bit++] = !!(k & 0x08);\r\n        value[bit++] = !!(k & 0x10);\r\n        value[bit++] = !!(k & 0x20);\r\n        value[bit++] = !!(k & 0x40);\r\n        value[bit++] = !!(k & 0x80);\r\n      }\r\n\r\n      if(bit < bits) {\r\n        var m = 0;\r\n        k = this.readByte(offset++);\r\n        while(bit < bits) value[bit++] = !!((k >> (m++)) & 1);\r\n      }\r\n\r\n      if (relative) {\r\n        this.offset = offset;\r\n      }\r\n      return value;\r\n    }\r\n    /**\r\n     * Reads the specified number of bytes.\r\n     * @param {number} length Number of bytes to read\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `length` if omitted.\r\n     * @returns {!ByteBuffer}\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readBytes = function(length, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + length > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+length+\") <= \"+this.buffer.length);\n        }\r\n        var slice = this.slice(offset, offset + length);\r\n        if (relative) this.offset += length;\n        return slice;\r\n    };\r\n\r\n    /**\r\n     * Writes a payload of bytes. This is an alias of {@link ByteBuffer#append}.\r\n     * @function\r\n     * @param {!ByteBuffer|!Buffer|!ArrayBuffer|!Uint8Array|string} source Data to write. If `source` is a ByteBuffer, its\r\n     * offsets will be modified according to the performed read operation.\r\n     * @param {(string|number)=} encoding Encoding if `data` is a string (\"base64\", \"hex\", \"binary\", defaults to \"utf8\")\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeBytes = ByteBufferPrototype.append;\r\n\r\n    // types/ints/int8\r\n\r\n    /**\r\n     * Writes an 8bit signed integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeInt8 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value |= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\r\n        offset += 1;\n        var capacity0 = this.buffer.length;\n        if (offset > capacity0)\n            this.resize((capacity0 *= 2) > offset ? capacity0 : offset);\n        offset -= 1;\n        this.buffer[offset] = value;\r\n        if (relative) this.offset += 1;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes an 8bit signed integer. This is an alias of {@link ByteBuffer#writeInt8}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeByte = ByteBufferPrototype.writeInt8;\r\n\r\n    /**\r\n     * Reads an 8bit signed integer.\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readInt8 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 1 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.length);\n        }\r\n        var value = this.buffer[offset];\r\n        if ((value & 0x80) === 0x80) value = -(0xFF - value + 1); // Cast to signed\r\n        if (relative) this.offset += 1;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads an 8bit signed integer. This is an alias of {@link ByteBuffer#readInt8}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readByte = ByteBufferPrototype.readInt8;\r\n\r\n    /**\r\n     * Writes an 8bit unsigned integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeUint8 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value >>>= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\r\n        offset += 1;\n        var capacity1 = this.buffer.length;\n        if (offset > capacity1)\n            this.resize((capacity1 *= 2) > offset ? capacity1 : offset);\n        offset -= 1;\n        this.buffer[offset] = value;\r\n        if (relative) this.offset += 1;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes an 8bit unsigned integer. This is an alias of {@link ByteBuffer#writeUint8}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeUInt8 = ByteBufferPrototype.writeUint8;\r\n\r\n    /**\r\n     * Reads an 8bit unsigned integer.\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readUint8 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 1 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.length);\n        }\r\n        var value = this.buffer[offset];\r\n        if (relative) this.offset += 1;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads an 8bit unsigned integer. This is an alias of {@link ByteBuffer#readUint8}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readUInt8 = ByteBufferPrototype.readUint8;\r\n\r\n    // types/ints/int16\r\n\r\n    /**\r\n     * Writes a 16bit signed integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @throws {TypeError} If `offset` or `value` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeInt16 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value |= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\r\n        offset += 2;\n        var capacity2 = this.buffer.length;\n        if (offset > capacity2)\n            this.resize((capacity2 *= 2) > offset ? capacity2 : offset);\n        offset -= 2;\n        if (this.littleEndian) {\r\n            this.buffer[offset+1] = (value & 0xFF00) >>> 8;\r\n            this.buffer[offset  ] =  value & 0x00FF;\r\n        } else {\r\n            this.buffer[offset]   = (value & 0xFF00) >>> 8;\r\n            this.buffer[offset+1] =  value & 0x00FF;\r\n        }\r\n        if (relative) this.offset += 2;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes a 16bit signed integer. This is an alias of {@link ByteBuffer#writeInt16}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @throws {TypeError} If `offset` or `value` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeShort = ByteBufferPrototype.writeInt16;\r\n\r\n    /**\r\n     * Reads a 16bit signed integer.\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @returns {number} Value read\r\n     * @throws {TypeError} If `offset` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readInt16 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 2 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+2+\") <= \"+this.buffer.length);\n        }\r\n        var value = 0;\r\n        if (this.littleEndian) {\r\n            value  = this.buffer[offset  ];\r\n            value |= this.buffer[offset+1] << 8;\r\n        } else {\r\n            value  = this.buffer[offset  ] << 8;\r\n            value |= this.buffer[offset+1];\r\n        }\r\n        if ((value & 0x8000) === 0x8000) value = -(0xFFFF - value + 1); // Cast to signed\r\n        if (relative) this.offset += 2;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads a 16bit signed integer. This is an alias of {@link ByteBuffer#readInt16}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @returns {number} Value read\r\n     * @throws {TypeError} If `offset` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readShort = ByteBufferPrototype.readInt16;\r\n\r\n    /**\r\n     * Writes a 16bit unsigned integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @throws {TypeError} If `offset` or `value` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeUint16 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value >>>= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\r\n        offset += 2;\n        var capacity3 = this.buffer.length;\n        if (offset > capacity3)\n            this.resize((capacity3 *= 2) > offset ? capacity3 : offset);\n        offset -= 2;\n        if (this.littleEndian) {\r\n            this.buffer[offset+1] = (value & 0xFF00) >>> 8;\r\n            this.buffer[offset  ] =  value & 0x00FF;\r\n        } else {\r\n            this.buffer[offset]   = (value & 0xFF00) >>> 8;\r\n            this.buffer[offset+1] =  value & 0x00FF;\r\n        }\r\n        if (relative) this.offset += 2;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes a 16bit unsigned integer. This is an alias of {@link ByteBuffer#writeUint16}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @throws {TypeError} If `offset` or `value` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeUInt16 = ByteBufferPrototype.writeUint16;\r\n\r\n    /**\r\n     * Reads a 16bit unsigned integer.\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @returns {number} Value read\r\n     * @throws {TypeError} If `offset` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readUint16 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 2 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+2+\") <= \"+this.buffer.length);\n        }\r\n        var value = 0;\r\n        if (this.littleEndian) {\r\n            value  = this.buffer[offset  ];\r\n            value |= this.buffer[offset+1] << 8;\r\n        } else {\r\n            value  = this.buffer[offset  ] << 8;\r\n            value |= this.buffer[offset+1];\r\n        }\r\n        if (relative) this.offset += 2;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads a 16bit unsigned integer. This is an alias of {@link ByteBuffer#readUint16}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @returns {number} Value read\r\n     * @throws {TypeError} If `offset` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readUInt16 = ByteBufferPrototype.readUint16;\r\n\r\n    // types/ints/int32\r\n\r\n    /**\r\n     * Writes a 32bit signed integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeInt32 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value |= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\r\n        offset += 4;\n        var capacity4 = this.buffer.length;\n        if (offset > capacity4)\n            this.resize((capacity4 *= 2) > offset ? capacity4 : offset);\n        offset -= 4;\n        if (this.littleEndian) {\n            this.buffer[offset+3] = (value >>> 24) & 0xFF;\n            this.buffer[offset+2] = (value >>> 16) & 0xFF;\n            this.buffer[offset+1] = (value >>>  8) & 0xFF;\n            this.buffer[offset  ] =  value         & 0xFF;\n        } else {\n            this.buffer[offset  ] = (value >>> 24) & 0xFF;\n            this.buffer[offset+1] = (value >>> 16) & 0xFF;\n            this.buffer[offset+2] = (value >>>  8) & 0xFF;\n            this.buffer[offset+3] =  value         & 0xFF;\n        }\n        if (relative) this.offset += 4;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes a 32bit signed integer. This is an alias of {@link ByteBuffer#writeInt32}.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeInt = ByteBufferPrototype.writeInt32;\r\n\r\n    /**\r\n     * Reads a 32bit signed integer.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readInt32 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 4 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+4+\") <= \"+this.buffer.length);\n        }\r\n        var value = 0;\r\n        if (this.littleEndian) {\n            value  = this.buffer[offset+2] << 16;\n            value |= this.buffer[offset+1] <<  8;\n            value |= this.buffer[offset  ];\n            value += this.buffer[offset+3] << 24 >>> 0;\n        } else {\n            value  = this.buffer[offset+1] << 16;\n            value |= this.buffer[offset+2] <<  8;\n            value |= this.buffer[offset+3];\n            value += this.buffer[offset  ] << 24 >>> 0;\n        }\n        value |= 0; // Cast to signed\r\n        if (relative) this.offset += 4;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads a 32bit signed integer. This is an alias of {@link ByteBuffer#readInt32}.\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readInt = ByteBufferPrototype.readInt32;\r\n\r\n    /**\r\n     * Writes a 32bit unsigned integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeUint32 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value >>>= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\r\n        offset += 4;\n        var capacity5 = this.buffer.length;\n        if (offset > capacity5)\n            this.resize((capacity5 *= 2) > offset ? capacity5 : offset);\n        offset -= 4;\n        if (this.littleEndian) {\n            this.buffer[offset+3] = (value >>> 24) & 0xFF;\n            this.buffer[offset+2] = (value >>> 16) & 0xFF;\n            this.buffer[offset+1] = (value >>>  8) & 0xFF;\n            this.buffer[offset  ] =  value         & 0xFF;\n        } else {\n            this.buffer[offset  ] = (value >>> 24) & 0xFF;\n            this.buffer[offset+1] = (value >>> 16) & 0xFF;\n            this.buffer[offset+2] = (value >>>  8) & 0xFF;\n            this.buffer[offset+3] =  value         & 0xFF;\n        }\n        if (relative) this.offset += 4;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes a 32bit unsigned integer. This is an alias of {@link ByteBuffer#writeUint32}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeUInt32 = ByteBufferPrototype.writeUint32;\r\n\r\n    /**\r\n     * Reads a 32bit unsigned integer.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readUint32 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 4 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+4+\") <= \"+this.buffer.length);\n        }\r\n        var value = 0;\r\n        if (this.littleEndian) {\n            value  = this.buffer[offset+2] << 16;\n            value |= this.buffer[offset+1] <<  8;\n            value |= this.buffer[offset  ];\n            value += this.buffer[offset+3] << 24 >>> 0;\n        } else {\n            value  = this.buffer[offset+1] << 16;\n            value |= this.buffer[offset+2] <<  8;\n            value |= this.buffer[offset+3];\n            value += this.buffer[offset  ] << 24 >>> 0;\n        }\n        if (relative) this.offset += 4;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads a 32bit unsigned integer. This is an alias of {@link ByteBuffer#readUint32}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readUInt32 = ByteBufferPrototype.readUint32;\r\n\r\n    // types/ints/int64\r\n\r\n    if (Long) {\r\n\r\n        /**\r\n         * Writes a 64bit signed integer.\r\n         * @param {number|!Long} value Value to write\r\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!ByteBuffer} this\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.writeInt64 = function(value, offset) {\r\n            var relative = typeof offset === 'undefined';\n            if (relative) offset = this.offset;\n            if (!this.noAssert) {\r\n                if (typeof value === 'number')\n                    value = Long.fromNumber(value);\n                else if (typeof value === 'string')\n                    value = Long.fromString(value);\n                else if (!(value && value instanceof Long))\n                    throw TypeError(\"Illegal value: \"+value+\" (not an integer or Long)\");\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + 0 > this.buffer.length)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n            }\r\n            if (typeof value === 'number')\n                value = Long.fromNumber(value);\n            else if (typeof value === 'string')\n                value = Long.fromString(value);\n            offset += 8;\n            var capacity6 = this.buffer.length;\n            if (offset > capacity6)\n                this.resize((capacity6 *= 2) > offset ? capacity6 : offset);\n            offset -= 8;\n            var lo = value.low,\r\n                hi = value.high;\r\n            if (this.littleEndian) {\r\n                this.buffer[offset+3] = (lo >>> 24) & 0xFF;\n                this.buffer[offset+2] = (lo >>> 16) & 0xFF;\n                this.buffer[offset+1] = (lo >>>  8) & 0xFF;\n                this.buffer[offset  ] =  lo         & 0xFF;\n                offset += 4;\r\n                this.buffer[offset+3] = (hi >>> 24) & 0xFF;\n                this.buffer[offset+2] = (hi >>> 16) & 0xFF;\n                this.buffer[offset+1] = (hi >>>  8) & 0xFF;\n                this.buffer[offset  ] =  hi         & 0xFF;\n            } else {\r\n                this.buffer[offset  ] = (hi >>> 24) & 0xFF;\n                this.buffer[offset+1] = (hi >>> 16) & 0xFF;\n                this.buffer[offset+2] = (hi >>>  8) & 0xFF;\n                this.buffer[offset+3] =  hi         & 0xFF;\n                offset += 4;\r\n                this.buffer[offset  ] = (lo >>> 24) & 0xFF;\n                this.buffer[offset+1] = (lo >>> 16) & 0xFF;\n                this.buffer[offset+2] = (lo >>>  8) & 0xFF;\n                this.buffer[offset+3] =  lo         & 0xFF;\n            }\r\n            if (relative) this.offset += 8;\n            return this;\r\n        };\r\n\r\n        /**\r\n         * Writes a 64bit signed integer. This is an alias of {@link ByteBuffer#writeInt64}.\r\n         * @param {number|!Long} value Value to write\r\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!ByteBuffer} this\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.writeLong = ByteBufferPrototype.writeInt64;\r\n\r\n        /**\r\n         * Reads a 64bit signed integer.\r\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!Long}\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.readInt64 = function(offset) {\r\n            var relative = typeof offset === 'undefined';\n            if (relative) offset = this.offset;\n            if (!this.noAssert) {\r\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + 8 > this.buffer.length)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+8+\") <= \"+this.buffer.length);\n            }\r\n            var lo = 0,\r\n                hi = 0;\r\n            if (this.littleEndian) {\r\n                lo  = this.buffer[offset+2] << 16;\n                lo |= this.buffer[offset+1] <<  8;\n                lo |= this.buffer[offset  ];\n                lo += this.buffer[offset+3] << 24 >>> 0;\n                offset += 4;\r\n                hi  = this.buffer[offset+2] << 16;\n                hi |= this.buffer[offset+1] <<  8;\n                hi |= this.buffer[offset  ];\n                hi += this.buffer[offset+3] << 24 >>> 0;\n            } else {\r\n                hi  = this.buffer[offset+1] << 16;\n                hi |= this.buffer[offset+2] <<  8;\n                hi |= this.buffer[offset+3];\n                hi += this.buffer[offset  ] << 24 >>> 0;\n                offset += 4;\r\n                lo  = this.buffer[offset+1] << 16;\n                lo |= this.buffer[offset+2] <<  8;\n                lo |= this.buffer[offset+3];\n                lo += this.buffer[offset  ] << 24 >>> 0;\n            }\r\n            var value = new Long(lo, hi, false);\r\n            if (relative) this.offset += 8;\n            return value;\r\n        };\r\n\r\n        /**\r\n         * Reads a 64bit signed integer. This is an alias of {@link ByteBuffer#readInt64}.\r\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!Long}\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.readLong = ByteBufferPrototype.readInt64;\r\n\r\n        /**\r\n         * Writes a 64bit unsigned integer.\r\n         * @param {number|!Long} value Value to write\r\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!ByteBuffer} this\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.writeUint64 = function(value, offset) {\r\n            var relative = typeof offset === 'undefined';\n            if (relative) offset = this.offset;\n            if (!this.noAssert) {\r\n                if (typeof value === 'number')\n                    value = Long.fromNumber(value);\n                else if (typeof value === 'string')\n                    value = Long.fromString(value);\n                else if (!(value && value instanceof Long))\n                    throw TypeError(\"Illegal value: \"+value+\" (not an integer or Long)\");\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + 0 > this.buffer.length)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n            }\r\n            if (typeof value === 'number')\n                value = Long.fromNumber(value);\n            else if (typeof value === 'string')\n                value = Long.fromString(value);\n            offset += 8;\n            var capacity7 = this.buffer.length;\n            if (offset > capacity7)\n                this.resize((capacity7 *= 2) > offset ? capacity7 : offset);\n            offset -= 8;\n            var lo = value.low,\r\n                hi = value.high;\r\n            if (this.littleEndian) {\r\n                this.buffer[offset+3] = (lo >>> 24) & 0xFF;\n                this.buffer[offset+2] = (lo >>> 16) & 0xFF;\n                this.buffer[offset+1] = (lo >>>  8) & 0xFF;\n                this.buffer[offset  ] =  lo         & 0xFF;\n                offset += 4;\r\n                this.buffer[offset+3] = (hi >>> 24) & 0xFF;\n                this.buffer[offset+2] = (hi >>> 16) & 0xFF;\n                this.buffer[offset+1] = (hi >>>  8) & 0xFF;\n                this.buffer[offset  ] =  hi         & 0xFF;\n            } else {\r\n                this.buffer[offset  ] = (hi >>> 24) & 0xFF;\n                this.buffer[offset+1] = (hi >>> 16) & 0xFF;\n                this.buffer[offset+2] = (hi >>>  8) & 0xFF;\n                this.buffer[offset+3] =  hi         & 0xFF;\n                offset += 4;\r\n                this.buffer[offset  ] = (lo >>> 24) & 0xFF;\n                this.buffer[offset+1] = (lo >>> 16) & 0xFF;\n                this.buffer[offset+2] = (lo >>>  8) & 0xFF;\n                this.buffer[offset+3] =  lo         & 0xFF;\n            }\r\n            if (relative) this.offset += 8;\n            return this;\r\n        };\r\n\r\n        /**\r\n         * Writes a 64bit unsigned integer. This is an alias of {@link ByteBuffer#writeUint64}.\r\n         * @function\r\n         * @param {number|!Long} value Value to write\r\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!ByteBuffer} this\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.writeUInt64 = ByteBufferPrototype.writeUint64;\r\n\r\n        /**\r\n         * Reads a 64bit unsigned integer.\r\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!Long}\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.readUint64 = function(offset) {\r\n            var relative = typeof offset === 'undefined';\n            if (relative) offset = this.offset;\n            if (!this.noAssert) {\r\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + 8 > this.buffer.length)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+8+\") <= \"+this.buffer.length);\n            }\r\n            var lo = 0,\r\n                hi = 0;\r\n            if (this.littleEndian) {\r\n                lo  = this.buffer[offset+2] << 16;\n                lo |= this.buffer[offset+1] <<  8;\n                lo |= this.buffer[offset  ];\n                lo += this.buffer[offset+3] << 24 >>> 0;\n                offset += 4;\r\n                hi  = this.buffer[offset+2] << 16;\n                hi |= this.buffer[offset+1] <<  8;\n                hi |= this.buffer[offset  ];\n                hi += this.buffer[offset+3] << 24 >>> 0;\n            } else {\r\n                hi  = this.buffer[offset+1] << 16;\n                hi |= this.buffer[offset+2] <<  8;\n                hi |= this.buffer[offset+3];\n                hi += this.buffer[offset  ] << 24 >>> 0;\n                offset += 4;\r\n                lo  = this.buffer[offset+1] << 16;\n                lo |= this.buffer[offset+2] <<  8;\n                lo |= this.buffer[offset+3];\n                lo += this.buffer[offset  ] << 24 >>> 0;\n            }\r\n            var value = new Long(lo, hi, true);\r\n            if (relative) this.offset += 8;\n            return value;\r\n        };\r\n\r\n        /**\r\n         * Reads a 64bit unsigned integer. This is an alias of {@link ByteBuffer#readUint64}.\r\n         * @function\r\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!Long}\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.readUInt64 = ByteBufferPrototype.readUint64;\r\n\r\n    } // Long\r\n\r\n\r\n    // types/floats/float32\r\n\r\n    /**\r\n     * Writes a 32bit float.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeFloat32 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number')\r\n                throw TypeError(\"Illegal value: \"+value+\" (not a number)\");\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\r\n        offset += 4;\n        var capacity8 = this.buffer.length;\n        if (offset > capacity8)\n            this.resize((capacity8 *= 2) > offset ? capacity8 : offset);\n        offset -= 4;\n        this.littleEndian\r\n            ? this.buffer.writeFloatLE(value, offset, true)\r\n            : this.buffer.writeFloatBE(value, offset, true);\r\n        if (relative) this.offset += 4;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes a 32bit float. This is an alias of {@link ByteBuffer#writeFloat32}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeFloat = ByteBufferPrototype.writeFloat32;\r\n\r\n    /**\r\n     * Reads a 32bit float.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {number}\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readFloat32 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 4 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+4+\") <= \"+this.buffer.length);\n        }\r\n        var value = this.littleEndian\r\n            ? this.buffer.readFloatLE(offset, true)\r\n            : this.buffer.readFloatBE(offset, true);\r\n        if (relative) this.offset += 4;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads a 32bit float. This is an alias of {@link ByteBuffer#readFloat32}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {number}\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readFloat = ByteBufferPrototype.readFloat32;\r\n\r\n    // types/floats/float64\r\n\r\n    /**\r\n     * Writes a 64bit float.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeFloat64 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number')\r\n                throw TypeError(\"Illegal value: \"+value+\" (not a number)\");\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\r\n        offset += 8;\n        var capacity9 = this.buffer.length;\n        if (offset > capacity9)\n            this.resize((capacity9 *= 2) > offset ? capacity9 : offset);\n        offset -= 8;\n        this.littleEndian\r\n            ? this.buffer.writeDoubleLE(value, offset, true)\r\n            : this.buffer.writeDoubleBE(value, offset, true);\r\n        if (relative) this.offset += 8;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes a 64bit float. This is an alias of {@link ByteBuffer#writeFloat64}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeDouble = ByteBufferPrototype.writeFloat64;\r\n\r\n    /**\r\n     * Reads a 64bit float.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n     * @returns {number}\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readFloat64 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 8 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+8+\") <= \"+this.buffer.length);\n        }\r\n        var value = this.littleEndian\r\n            ? this.buffer.readDoubleLE(offset, true)\r\n            : this.buffer.readDoubleBE(offset, true);\r\n        if (relative) this.offset += 8;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads a 64bit float. This is an alias of {@link ByteBuffer#readFloat64}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n     * @returns {number}\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readDouble = ByteBufferPrototype.readFloat64;\r\n\r\n\r\n    // types/varints/varint32\r\n\r\n    /**\r\n     * Maximum number of bytes required to store a 32bit base 128 variable-length integer.\r\n     * @type {number}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ByteBuffer.MAX_VARINT32_BYTES = 5;\r\n\r\n    /**\r\n     * Calculates the actual number of bytes required to store a 32bit base 128 variable-length integer.\r\n     * @param {number} value Value to encode\r\n     * @returns {number} Number of bytes required. Capped to {@link ByteBuffer.MAX_VARINT32_BYTES}\r\n     * @expose\r\n     */\r\n    ByteBuffer.calculateVarint32 = function(value) {\r\n        // ref: src/google/protobuf/io/coded_stream.cc\r\n        value = value >>> 0;\r\n             if (value < 1 << 7 ) return 1;\r\n        else if (value < 1 << 14) return 2;\r\n        else if (value < 1 << 21) return 3;\r\n        else if (value < 1 << 28) return 4;\r\n        else                      return 5;\r\n    };\r\n\r\n    /**\r\n     * Zigzag encodes a signed 32bit integer so that it can be effectively used with varint encoding.\r\n     * @param {number} n Signed 32bit integer\r\n     * @returns {number} Unsigned zigzag encoded 32bit integer\r\n     * @expose\r\n     */\r\n    ByteBuffer.zigZagEncode32 = function(n) {\r\n        return (((n |= 0) << 1) ^ (n >> 31)) >>> 0; // ref: src/google/protobuf/wire_format_lite.h\r\n    };\r\n\r\n    /**\r\n     * Decodes a zigzag encoded signed 32bit integer.\r\n     * @param {number} n Unsigned zigzag encoded 32bit integer\r\n     * @returns {number} Signed 32bit integer\r\n     * @expose\r\n     */\r\n    ByteBuffer.zigZagDecode32 = function(n) {\r\n        return ((n >>> 1) ^ -(n & 1)) | 0; // // ref: src/google/protobuf/wire_format_lite.h\r\n    };\r\n\r\n    /**\r\n     * Writes a 32bit base 128 variable-length integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {!ByteBuffer|number} this if `offset` is omitted, else the actual number of bytes written\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeVarint32 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value |= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\r\n        var size = ByteBuffer.calculateVarint32(value),\r\n            b;\r\n        offset += size;\n        var capacity10 = this.buffer.length;\n        if (offset > capacity10)\n            this.resize((capacity10 *= 2) > offset ? capacity10 : offset);\n        offset -= size;\n        value >>>= 0;\r\n        while (value >= 0x80) {\r\n            b = (value & 0x7f) | 0x80;\r\n            this.buffer[offset++] = b;\r\n            value >>>= 7;\r\n        }\r\n        this.buffer[offset++] = value;\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return this;\r\n        }\r\n        return size;\r\n    };\r\n\r\n    /**\r\n     * Writes a zig-zag encoded (signed) 32bit base 128 variable-length integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {!ByteBuffer|number} this if `offset` is omitted, else the actual number of bytes written\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeVarint32ZigZag = function(value, offset) {\r\n        return this.writeVarint32(ByteBuffer.zigZagEncode32(value), offset);\r\n    };\r\n\r\n    /**\r\n     * Reads a 32bit base 128 variable-length integer.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {number|!{value: number, length: number}} The value read if offset is omitted, else the value read\r\n     *  and the actual number of bytes read.\r\n     * @throws {Error} If it's not a valid varint. Has a property `truncated = true` if there is not enough data available\r\n     *  to fully decode the varint.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readVarint32 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 1 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.length);\n        }\r\n        var c = 0,\r\n            value = 0 >>> 0,\r\n            b;\r\n        do {\r\n            if (!this.noAssert && offset > this.limit) {\r\n                var err = Error(\"Truncated\");\r\n                err['truncated'] = true;\r\n                throw err;\r\n            }\r\n            b = this.buffer[offset++];\r\n            if (c < 5)\r\n                value |= (b & 0x7f) << (7*c);\r\n            ++c;\r\n        } while ((b & 0x80) !== 0);\r\n        value |= 0;\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return value;\r\n        }\r\n        return {\r\n            \"value\": value,\r\n            \"length\": c\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Reads a zig-zag encoded (signed) 32bit base 128 variable-length integer.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {number|!{value: number, length: number}} The value read if offset is omitted, else the value read\r\n     *  and the actual number of bytes read.\r\n     * @throws {Error} If it's not a valid varint\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readVarint32ZigZag = function(offset) {\r\n        var val = this.readVarint32(offset);\r\n        if (typeof val === 'object')\r\n            val[\"value\"] = ByteBuffer.zigZagDecode32(val[\"value\"]);\r\n        else\r\n            val = ByteBuffer.zigZagDecode32(val);\r\n        return val;\r\n    };\r\n\r\n    // types/varints/varint64\r\n\r\n    if (Long) {\r\n\r\n        /**\r\n         * Maximum number of bytes required to store a 64bit base 128 variable-length integer.\r\n         * @type {number}\r\n         * @const\r\n         * @expose\r\n         */\r\n        ByteBuffer.MAX_VARINT64_BYTES = 10;\r\n\r\n        /**\r\n         * Calculates the actual number of bytes required to store a 64bit base 128 variable-length integer.\r\n         * @param {number|!Long} value Value to encode\r\n         * @returns {number} Number of bytes required. Capped to {@link ByteBuffer.MAX_VARINT64_BYTES}\r\n         * @expose\r\n         */\r\n        ByteBuffer.calculateVarint64 = function(value) {\r\n            if (typeof value === 'number')\n                value = Long.fromNumber(value);\n            else if (typeof value === 'string')\n                value = Long.fromString(value);\n            // ref: src/google/protobuf/io/coded_stream.cc\r\n            var part0 = value.toInt() >>> 0,\r\n                part1 = value.shiftRightUnsigned(28).toInt() >>> 0,\r\n                part2 = value.shiftRightUnsigned(56).toInt() >>> 0;\r\n            if (part2 == 0) {\r\n                if (part1 == 0) {\r\n                    if (part0 < 1 << 14)\r\n                        return part0 < 1 << 7 ? 1 : 2;\r\n                    else\r\n                        return part0 < 1 << 21 ? 3 : 4;\r\n                } else {\r\n                    if (part1 < 1 << 14)\r\n                        return part1 < 1 << 7 ? 5 : 6;\r\n                    else\r\n                        return part1 < 1 << 21 ? 7 : 8;\r\n                }\r\n            } else\r\n                return part2 < 1 << 7 ? 9 : 10;\r\n        };\r\n\r\n        /**\r\n         * Zigzag encodes a signed 64bit integer so that it can be effectively used with varint encoding.\r\n         * @param {number|!Long} value Signed long\r\n         * @returns {!Long} Unsigned zigzag encoded long\r\n         * @expose\r\n         */\r\n        ByteBuffer.zigZagEncode64 = function(value) {\r\n            if (typeof value === 'number')\n                value = Long.fromNumber(value, false);\n            else if (typeof value === 'string')\n                value = Long.fromString(value, false);\n            else if (value.unsigned !== false) value = value.toSigned();\n            // ref: src/google/protobuf/wire_format_lite.h\r\n            return value.shiftLeft(1).xor(value.shiftRight(63)).toUnsigned();\r\n        };\r\n\r\n        /**\r\n         * Decodes a zigzag encoded signed 64bit integer.\r\n         * @param {!Long|number} value Unsigned zigzag encoded long or JavaScript number\r\n         * @returns {!Long} Signed long\r\n         * @expose\r\n         */\r\n        ByteBuffer.zigZagDecode64 = function(value) {\r\n            if (typeof value === 'number')\n                value = Long.fromNumber(value, false);\n            else if (typeof value === 'string')\n                value = Long.fromString(value, false);\n            else if (value.unsigned !== false) value = value.toSigned();\n            // ref: src/google/protobuf/wire_format_lite.h\r\n            return value.shiftRightUnsigned(1).xor(value.and(Long.ONE).toSigned().negate()).toSigned();\r\n        };\r\n\r\n        /**\r\n         * Writes a 64bit base 128 variable-length integer.\r\n         * @param {number|Long} value Value to write\r\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n         *  written if omitted.\r\n         * @returns {!ByteBuffer|number} `this` if offset is omitted, else the actual number of bytes written.\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.writeVarint64 = function(value, offset) {\r\n            var relative = typeof offset === 'undefined';\n            if (relative) offset = this.offset;\n            if (!this.noAssert) {\r\n                if (typeof value === 'number')\n                    value = Long.fromNumber(value);\n                else if (typeof value === 'string')\n                    value = Long.fromString(value);\n                else if (!(value && value instanceof Long))\n                    throw TypeError(\"Illegal value: \"+value+\" (not an integer or Long)\");\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + 0 > this.buffer.length)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n            }\r\n            if (typeof value === 'number')\n                value = Long.fromNumber(value, false);\n            else if (typeof value === 'string')\n                value = Long.fromString(value, false);\n            else if (value.unsigned !== false) value = value.toSigned();\n            var size = ByteBuffer.calculateVarint64(value),\r\n                part0 = value.toInt() >>> 0,\r\n                part1 = value.shiftRightUnsigned(28).toInt() >>> 0,\r\n                part2 = value.shiftRightUnsigned(56).toInt() >>> 0;\r\n            offset += size;\n            var capacity11 = this.buffer.length;\n            if (offset > capacity11)\n                this.resize((capacity11 *= 2) > offset ? capacity11 : offset);\n            offset -= size;\n            switch (size) {\r\n                case 10: this.buffer[offset+9] = (part2 >>>  7) & 0x01;\r\n                case 9 : this.buffer[offset+8] = size !== 9 ? (part2       ) | 0x80 : (part2       ) & 0x7F;\r\n                case 8 : this.buffer[offset+7] = size !== 8 ? (part1 >>> 21) | 0x80 : (part1 >>> 21) & 0x7F;\r\n                case 7 : this.buffer[offset+6] = size !== 7 ? (part1 >>> 14) | 0x80 : (part1 >>> 14) & 0x7F;\r\n                case 6 : this.buffer[offset+5] = size !== 6 ? (part1 >>>  7) | 0x80 : (part1 >>>  7) & 0x7F;\r\n                case 5 : this.buffer[offset+4] = size !== 5 ? (part1       ) | 0x80 : (part1       ) & 0x7F;\r\n                case 4 : this.buffer[offset+3] = size !== 4 ? (part0 >>> 21) | 0x80 : (part0 >>> 21) & 0x7F;\r\n                case 3 : this.buffer[offset+2] = size !== 3 ? (part0 >>> 14) | 0x80 : (part0 >>> 14) & 0x7F;\r\n                case 2 : this.buffer[offset+1] = size !== 2 ? (part0 >>>  7) | 0x80 : (part0 >>>  7) & 0x7F;\r\n                case 1 : this.buffer[offset  ] = size !== 1 ? (part0       ) | 0x80 : (part0       ) & 0x7F;\r\n            }\r\n            if (relative) {\r\n                this.offset += size;\r\n                return this;\r\n            } else {\r\n                return size;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Writes a zig-zag encoded 64bit base 128 variable-length integer.\r\n         * @param {number|Long} value Value to write\r\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n         *  written if omitted.\r\n         * @returns {!ByteBuffer|number} `this` if offset is omitted, else the actual number of bytes written.\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.writeVarint64ZigZag = function(value, offset) {\r\n            return this.writeVarint64(ByteBuffer.zigZagEncode64(value), offset);\r\n        };\r\n\r\n        /**\r\n         * Reads a 64bit base 128 variable-length integer. Requires Long.js.\r\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n         *  read if omitted.\r\n         * @returns {!Long|!{value: Long, length: number}} The value read if offset is omitted, else the value read and\r\n         *  the actual number of bytes read.\r\n         * @throws {Error} If it's not a valid varint\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.readVarint64 = function(offset) {\r\n            var relative = typeof offset === 'undefined';\n            if (relative) offset = this.offset;\n            if (!this.noAssert) {\r\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + 1 > this.buffer.length)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.length);\n            }\r\n            // ref: src/google/protobuf/io/coded_stream.cc\r\n            var start = offset,\r\n                part0 = 0,\r\n                part1 = 0,\r\n                part2 = 0,\r\n                b  = 0;\r\n            b = this.buffer[offset++]; part0  = (b & 0x7F)      ; if ( b & 0x80                                                   ) {\r\n            b = this.buffer[offset++]; part0 |= (b & 0x7F) <<  7; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.buffer[offset++]; part0 |= (b & 0x7F) << 14; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.buffer[offset++]; part0 |= (b & 0x7F) << 21; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.buffer[offset++]; part1  = (b & 0x7F)      ; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.buffer[offset++]; part1 |= (b & 0x7F) <<  7; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.buffer[offset++]; part1 |= (b & 0x7F) << 14; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.buffer[offset++]; part1 |= (b & 0x7F) << 21; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.buffer[offset++]; part2  = (b & 0x7F)      ; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.buffer[offset++]; part2 |= (b & 0x7F) <<  7; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            throw Error(\"Buffer overrun\"); }}}}}}}}}}\r\n            var value = Long.fromBits(part0 | (part1 << 28), (part1 >>> 4) | (part2) << 24, false);\r\n            if (relative) {\r\n                this.offset = offset;\r\n                return value;\r\n            } else {\r\n                return {\r\n                    'value': value,\r\n                    'length': offset-start\r\n                };\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Reads a zig-zag encoded 64bit base 128 variable-length integer. Requires Long.js.\r\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n         *  read if omitted.\r\n         * @returns {!Long|!{value: Long, length: number}} The value read if offset is omitted, else the value read and\r\n         *  the actual number of bytes read.\r\n         * @throws {Error} If it's not a valid varint\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.readVarint64ZigZag = function(offset) {\r\n            var val = this.readVarint64(offset);\r\n            if (val && val['value'] instanceof Long)\r\n                val[\"value\"] = ByteBuffer.zigZagDecode64(val[\"value\"]);\r\n            else\r\n                val = ByteBuffer.zigZagDecode64(val);\r\n            return val;\r\n        };\r\n\r\n    } // Long\r\n\r\n\r\n    // types/strings/cstring\r\n\r\n    /**\r\n     * Writes a NULL-terminated UTF8 encoded string. For this to work the specified string must not contain any NULL\r\n     *  characters itself.\r\n     * @param {string} str String to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  contained in `str` + 1 if omitted.\r\n     * @returns {!ByteBuffer|number} this if offset is omitted, else the actual number of bytes written\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeCString = function(str, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        var i,\r\n            k = str.length;\r\n        if (!this.noAssert) {\r\n            if (typeof str !== 'string')\r\n                throw TypeError(\"Illegal str: Not a string\");\r\n            for (i=0; i<k; ++i) {\r\n                if (str.charCodeAt(i) === 0)\r\n                    throw RangeError(\"Illegal str: Contains NULL-characters\");\r\n            }\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\r\n        // UTF8 strings do not contain zero bytes in between except for the zero character, so:\r\n        k = Buffer.byteLength(str, \"utf8\");\r\n        offset += k+1;\n        var capacity12 = this.buffer.length;\n        if (offset > capacity12)\n            this.resize((capacity12 *= 2) > offset ? capacity12 : offset);\n        offset -= k+1;\n        offset += this.buffer.write(str, offset, k, \"utf8\");\r\n        this.buffer[offset++] = 0;\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return this;\r\n        }\r\n        return k;\r\n    };\r\n\r\n    /**\r\n     * Reads a NULL-terminated UTF8 encoded string. For this to work the string read must not contain any NULL characters\r\n     *  itself.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  read if omitted.\r\n     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string\r\n     *  read and the actual number of bytes read.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readCString = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 1 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.length);\n        }\r\n        var start = offset,\r\n            temp;\r\n        // UTF8 strings do not contain zero bytes in between except for the zero character itself, so:\r\n        do {\r\n            if (offset >= this.buffer.length)\r\n                throw RangeError(\"Index out of range: \"+offset+\" <= \"+this.buffer.length);\r\n            temp = this.buffer[offset++];\r\n        } while (temp !== 0);\r\n        var str = this.buffer.toString(\"utf8\", start, offset-1);\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return str;\r\n        } else {\r\n            return {\r\n                \"string\": str,\r\n                \"length\": offset - start\r\n            };\r\n        }\r\n    };\r\n\r\n    // types/strings/istring\r\n\r\n    /**\r\n     * Writes a length as uint32 prefixed UTF8 encoded string.\r\n     * @param {string} str String to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {!ByteBuffer|number} `this` if `offset` is omitted, else the actual number of bytes written\r\n     * @expose\r\n     * @see ByteBuffer#writeVarint32\r\n     */\r\n    ByteBufferPrototype.writeIString = function(str, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof str !== 'string')\r\n                throw TypeError(\"Illegal str: Not a string\");\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\r\n        var start = offset,\r\n            k;\r\n        k = Buffer.byteLength(str, \"utf8\");\r\n        offset += 4+k;\n        var capacity13 = this.buffer.length;\n        if (offset > capacity13)\n            this.resize((capacity13 *= 2) > offset ? capacity13 : offset);\n        offset -= 4+k;\n        if (this.littleEndian) {\n            this.buffer[offset+3] = (k >>> 24) & 0xFF;\n            this.buffer[offset+2] = (k >>> 16) & 0xFF;\n            this.buffer[offset+1] = (k >>>  8) & 0xFF;\n            this.buffer[offset  ] =  k         & 0xFF;\n        } else {\n            this.buffer[offset  ] = (k >>> 24) & 0xFF;\n            this.buffer[offset+1] = (k >>> 16) & 0xFF;\n            this.buffer[offset+2] = (k >>>  8) & 0xFF;\n            this.buffer[offset+3] =  k         & 0xFF;\n        }\n        offset += 4;\r\n        offset += this.buffer.write(str, offset, k, \"utf8\");\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return this;\r\n        }\r\n        return offset - start;\r\n    };\r\n\r\n    /**\r\n     * Reads a length as uint32 prefixed UTF8 encoded string.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  read if omitted.\r\n     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string\r\n     *  read and the actual number of bytes read.\r\n     * @expose\r\n     * @see ByteBuffer#readVarint32\r\n     */\r\n    ByteBufferPrototype.readIString = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 4 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+4+\") <= \"+this.buffer.length);\n        }\r\n        var start = offset;\r\n        var len = this.readUint32(offset);\r\n        var str = this.readUTF8String(len, ByteBuffer.METRICS_BYTES, offset += 4);\r\n        offset += str['length'];\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return str['string'];\r\n        } else {\r\n            return {\r\n                'string': str['string'],\r\n                'length': offset - start\r\n            };\r\n        }\r\n    };\r\n\r\n    // types/strings/utf8string\r\n\r\n    /**\r\n     * Metrics representing number of UTF8 characters. Evaluates to `c`.\r\n     * @type {string}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ByteBuffer.METRICS_CHARS = 'c';\r\n\r\n    /**\r\n     * Metrics representing number of bytes. Evaluates to `b`.\r\n     * @type {string}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ByteBuffer.METRICS_BYTES = 'b';\r\n\r\n    /**\r\n     * Writes an UTF8 encoded string.\r\n     * @param {string} str String to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} if omitted.\r\n     * @returns {!ByteBuffer|number} this if offset is omitted, else the actual number of bytes written.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeUTF8String = function(str, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\r\n        var k;\r\n        k = Buffer.byteLength(str, \"utf8\");\r\n        offset += k;\n        var capacity14 = this.buffer.length;\n        if (offset > capacity14)\n            this.resize((capacity14 *= 2) > offset ? capacity14 : offset);\n        offset -= k;\n        offset += this.buffer.write(str, offset, k, \"utf8\");\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return this;\r\n        }\r\n        return k;\r\n    };\r\n\r\n    /**\r\n     * Writes an UTF8 encoded string. This is an alias of {@link ByteBuffer#writeUTF8String}.\r\n     * @function\r\n     * @param {string} str String to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} if omitted.\r\n     * @returns {!ByteBuffer|number} this if offset is omitted, else the actual number of bytes written.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeString = ByteBufferPrototype.writeUTF8String;\r\n\r\n    /**\r\n     * Calculates the number of UTF8 characters of a string. JavaScript itself uses UTF-16, so that a string's\r\n     *  `length` property does not reflect its actual UTF8 size if it contains code points larger than 0xFFFF.\r\n     * @param {string} str String to calculate\r\n     * @returns {number} Number of UTF8 characters\r\n     * @expose\r\n     */\r\n    ByteBuffer.calculateUTF8Chars = function(str) {\r\n        return utfx.calculateUTF16asUTF8(stringSource(str))[0];\r\n    };\r\n\r\n    /**\r\n     * Calculates the number of UTF8 bytes of a string.\r\n     * @param {string} str String to calculate\r\n     * @returns {number} Number of UTF8 bytes\r\n     * @expose\r\n     */\r\n    ByteBuffer.calculateUTF8Bytes = function(str) {\r\n        if (typeof str !== 'string')\r\n            throw TypeError(\"Illegal argument: \"+(typeof str));\r\n        return Buffer.byteLength(str, \"utf8\");\r\n    };\r\n\r\n    /**\r\n     * Calculates the number of UTF8 bytes of a string. This is an alias of {@link ByteBuffer.calculateUTF8Bytes}.\r\n     * @function\r\n     * @param {string} str String to calculate\r\n     * @returns {number} Number of UTF8 bytes\r\n     * @expose\r\n     */\r\n    ByteBuffer.calculateString = ByteBuffer.calculateUTF8Bytes;\r\n\r\n    /**\r\n     * Reads an UTF8 encoded string.\r\n     * @param {number} length Number of characters or bytes to read.\r\n     * @param {string=} metrics Metrics specifying what `length` is meant to count. Defaults to\r\n     *  {@link ByteBuffer.METRICS_CHARS}.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  read if omitted.\r\n     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string\r\n     *  read and the actual number of bytes read.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readUTF8String = function(length, metrics, offset) {\r\n        if (typeof metrics === 'number') {\r\n            offset = metrics;\r\n            metrics = undefined;\r\n        }\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (typeof metrics === 'undefined') metrics = ByteBuffer.METRICS_CHARS;\r\n        if (!this.noAssert) {\r\n            if (typeof length !== 'number' || length % 1 !== 0)\n                throw TypeError(\"Illegal length: \"+length+\" (not an integer)\");\n            length |= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\r\n        var i = 0,\r\n            start = offset,\r\n            temp,\r\n            sd;\r\n        if (metrics === ByteBuffer.METRICS_CHARS) { // The same for node and the browser\r\n            sd = stringDestination();\r\n            utfx.decodeUTF8(function() {\r\n                return i < length && offset < this.limit ? this.buffer[offset++] : null;\r\n            }.bind(this), function(cp) {\r\n                ++i; utfx.UTF8toUTF16(cp, sd);\r\n            });\r\n            if (i !== length)\r\n                throw RangeError(\"Illegal range: Truncated data, \"+i+\" == \"+length);\r\n            if (relative) {\r\n                this.offset = offset;\r\n                return sd();\r\n            } else {\r\n                return {\r\n                    \"string\": sd(),\r\n                    \"length\": offset - start\r\n                };\r\n            }\r\n        } else if (metrics === ByteBuffer.METRICS_BYTES) {\r\n            if (!this.noAssert) {\r\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + length > this.buffer.length)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+length+\") <= \"+this.buffer.length);\n            }\r\n            temp = this.buffer.toString(\"utf8\", offset, offset+length);\r\n            if (relative) {\r\n                this.offset += length;\r\n                return temp;\r\n            } else {\r\n                return {\r\n                    'string': temp,\r\n                    'length': length\r\n                };\r\n            }\r\n        } else\r\n            throw TypeError(\"Unsupported metrics: \"+metrics);\r\n    };\r\n\r\n    /**\r\n     * Reads an UTF8 encoded string. This is an alias of {@link ByteBuffer#readUTF8String}.\r\n     * @function\r\n     * @param {number} length Number of characters or bytes to read\r\n     * @param {number=} metrics Metrics specifying what `n` is meant to count. Defaults to\r\n     *  {@link ByteBuffer.METRICS_CHARS}.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  read if omitted.\r\n     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string\r\n     *  read and the actual number of bytes read.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readString = ByteBufferPrototype.readUTF8String;\r\n\r\n    // types/strings/vstring\r\n\r\n    /**\r\n     * Writes a length as varint32 prefixed UTF8 encoded string.\r\n     * @param {string} str String to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {!ByteBuffer|number} `this` if `offset` is omitted, else the actual number of bytes written\r\n     * @expose\r\n     * @see ByteBuffer#writeVarint32\r\n     */\r\n    ByteBufferPrototype.writeVString = function(str, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof str !== 'string')\r\n                throw TypeError(\"Illegal str: Not a string\");\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\r\n        var start = offset,\r\n            k, l;\r\n        k = Buffer.byteLength(str, \"utf8\");\r\n        l = ByteBuffer.calculateVarint32(k);\r\n        offset += l+k;\n        var capacity15 = this.buffer.length;\n        if (offset > capacity15)\n            this.resize((capacity15 *= 2) > offset ? capacity15 : offset);\n        offset -= l+k;\n        offset += this.writeVarint32(k, offset);\r\n        offset += this.buffer.write(str, offset, k, \"utf8\");\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return this;\r\n        }\r\n        return offset - start;\r\n    };\r\n\r\n    /**\r\n     * Reads a length as varint32 prefixed UTF8 encoded string.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  read if omitted.\r\n     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string\r\n     *  read and the actual number of bytes read.\r\n     * @expose\r\n     * @see ByteBuffer#readVarint32\r\n     */\r\n    ByteBufferPrototype.readVString = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 1 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.length);\n        }\r\n        var start = offset;\r\n        var len = this.readVarint32(offset);\r\n        var str = this.readUTF8String(len['value'], ByteBuffer.METRICS_BYTES, offset += len['length']);\r\n        offset += str['length'];\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return str['string'];\r\n        } else {\r\n            return {\r\n                'string': str['string'],\r\n                'length': offset - start\r\n            };\r\n        }\r\n    };\r\n\r\n\r\n    /**\r\n     * Appends some data to this ByteBuffer. This will overwrite any contents behind the specified offset up to the appended\r\n     *  data's length.\r\n     * @param {!ByteBuffer|!Buffer|!ArrayBuffer|!Uint8Array|string} source Data to append. If `source` is a ByteBuffer, its\r\n     * offsets will be modified according to the performed read operation.\r\n     * @param {(string|number)=} encoding Encoding if `data` is a string (\"base64\", \"hex\", \"binary\", defaults to \"utf8\")\r\n     * @param {number=} offset Offset to append at. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     * @example A relative `<01 02>03.append(<04 05>)` will result in `<01 02 04 05>, 04 05|`\r\n     * @example An absolute `<01 02>03.append(04 05>, 1)` will result in `<01 04>05, 04 05|`\r\n     */\r\n    ByteBufferPrototype.append = function(source, encoding, offset) {\r\n        if (typeof encoding === 'number' || typeof encoding !== 'string') {\r\n            offset = encoding;\r\n            encoding = undefined;\r\n        }\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\r\n        if (!(source instanceof ByteBuffer))\r\n            source = ByteBuffer.wrap(source, encoding);\r\n        var length = source.limit - source.offset;\r\n        if (length <= 0) return this; // Nothing to append\r\n        offset += length;\n        var capacity16 = this.buffer.length;\n        if (offset > capacity16)\n            this.resize((capacity16 *= 2) > offset ? capacity16 : offset);\n        offset -= length;\n        source.buffer.copy(this.buffer, offset, source.offset, source.limit);\r\n        source.offset += length;\r\n        if (relative) this.offset += length;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Appends this ByteBuffer's contents to another ByteBuffer. This will overwrite any contents at and after the\r\n        specified offset up to the length of this ByteBuffer's data.\r\n     * @param {!ByteBuffer} target Target ByteBuffer\r\n     * @param {number=} offset Offset to append to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  read if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     * @see ByteBuffer#append\r\n     */\r\n    ByteBufferPrototype.appendTo = function(target, offset) {\r\n        target.append(this, offset);\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Enables or disables assertions of argument types and offsets. Assertions are enabled by default but you can opt to\r\n     *  disable them if your code already makes sure that everything is valid.\r\n     * @param {boolean} assert `true` to enable assertions, otherwise `false`\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.assert = function(assert) {\r\n        this.noAssert = !assert;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Gets the capacity of this ByteBuffer's backing buffer.\r\n     * @returns {number} Capacity of the backing buffer\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.capacity = function() {\r\n        return this.buffer.length;\r\n    };\r\n    /**\r\n     * Clears this ByteBuffer's offsets by setting {@link ByteBuffer#offset} to `0` and {@link ByteBuffer#limit} to the\r\n     *  backing buffer's capacity. Discards {@link ByteBuffer#markedOffset}.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.clear = function() {\r\n        this.offset = 0;\r\n        this.limit = this.buffer.length;\r\n        this.markedOffset = -1;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Creates a cloned instance of this ByteBuffer, preset with this ByteBuffer's values for {@link ByteBuffer#offset},\r\n     *  {@link ByteBuffer#markedOffset} and {@link ByteBuffer#limit}.\r\n     * @param {boolean=} copy Whether to copy the backing buffer or to return another view on the same, defaults to `false`\r\n     * @returns {!ByteBuffer} Cloned instance\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.clone = function(copy) {\r\n        var bb = new ByteBuffer(0, this.littleEndian, this.noAssert);\r\n        if (copy) {\r\n            var buffer = new Buffer(this.buffer.length);\r\n            this.buffer.copy(buffer);\r\n            bb.buffer = buffer;\r\n        } else {\r\n            bb.buffer = this.buffer;\r\n        }\r\n        bb.offset = this.offset;\r\n        bb.markedOffset = this.markedOffset;\r\n        bb.limit = this.limit;\r\n        return bb;\r\n    };\r\n\r\n    /**\r\n     * Compacts this ByteBuffer to be backed by a {@link ByteBuffer#buffer} of its contents' length. Contents are the bytes\r\n     *  between {@link ByteBuffer#offset} and {@link ByteBuffer#limit}. Will set `offset = 0` and `limit = capacity` and\r\n     *  adapt {@link ByteBuffer#markedOffset} to the same relative position if set.\r\n     * @param {number=} begin Offset to start at, defaults to {@link ByteBuffer#offset}\r\n     * @param {number=} end Offset to end at, defaults to {@link ByteBuffer#limit}\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.compact = function(begin, end) {\r\n        if (typeof begin === 'undefined') begin = this.offset;\r\n        if (typeof end === 'undefined') end = this.limit;\r\n        if (!this.noAssert) {\r\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.length)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.length);\n        }\r\n        if (begin === 0 && end === this.buffer.length)\r\n            return this; // Already compacted\r\n        var len = end - begin;\r\n        if (len === 0) {\r\n            this.buffer = EMPTY_BUFFER;\r\n            if (this.markedOffset >= 0) this.markedOffset -= begin;\r\n            this.offset = 0;\r\n            this.limit = 0;\r\n            return this;\r\n        }\r\n        var buffer = new Buffer(len);\r\n        this.buffer.copy(buffer, 0, begin, end);\r\n        this.buffer = buffer;\r\n        if (this.markedOffset >= 0) this.markedOffset -= begin;\r\n        this.offset = 0;\r\n        this.limit = len;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Creates a copy of this ByteBuffer's contents. Contents are the bytes between {@link ByteBuffer#offset} and\r\n     *  {@link ByteBuffer#limit}.\r\n     * @param {number=} begin Begin offset, defaults to {@link ByteBuffer#offset}.\r\n     * @param {number=} end End offset, defaults to {@link ByteBuffer#limit}.\r\n     * @returns {!ByteBuffer} Copy\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.copy = function(begin, end) {\r\n        if (typeof begin === 'undefined') begin = this.offset;\r\n        if (typeof end === 'undefined') end = this.limit;\r\n        if (!this.noAssert) {\r\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.length)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.length);\n        }\r\n        if (begin === end)\r\n            return new ByteBuffer(0, this.littleEndian, this.noAssert);\r\n        var capacity = end - begin,\r\n            bb = new ByteBuffer(capacity, this.littleEndian, this.noAssert);\r\n        bb.offset = 0;\r\n        bb.limit = capacity;\r\n        if (bb.markedOffset >= 0) bb.markedOffset -= begin;\r\n        this.copyTo(bb, 0, begin, end);\r\n        return bb;\r\n    };\r\n\r\n    /**\r\n     * Copies this ByteBuffer's contents to another ByteBuffer. Contents are the bytes between {@link ByteBuffer#offset} and\r\n     *  {@link ByteBuffer#limit}.\r\n     * @param {!ByteBuffer} target Target ByteBuffer\r\n     * @param {number=} targetOffset Offset to copy to. Will use and increase the target's {@link ByteBuffer#offset}\r\n     *  by the number of bytes copied if omitted.\r\n     * @param {number=} sourceOffset Offset to start copying from. Will use and increase {@link ByteBuffer#offset} by the\r\n     *  number of bytes copied if omitted.\r\n     * @param {number=} sourceLimit Offset to end copying from, defaults to {@link ByteBuffer#limit}\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.copyTo = function(target, targetOffset, sourceOffset, sourceLimit) {\r\n        var relative,\r\n            targetRelative;\r\n        if (!this.noAssert) {\r\n            if (!ByteBuffer.isByteBuffer(target))\r\n                throw TypeError(\"Illegal target: Not a ByteBuffer\");\r\n        }\r\n        targetOffset = (targetRelative = typeof targetOffset === 'undefined') ? target.offset : targetOffset | 0;\r\n        sourceOffset = (relative = typeof sourceOffset === 'undefined') ? this.offset : sourceOffset | 0;\r\n        sourceLimit = typeof sourceLimit === 'undefined' ? this.limit : sourceLimit | 0;\r\n\r\n        if (targetOffset < 0 || targetOffset > target.buffer.length)\r\n            throw RangeError(\"Illegal target range: 0 <= \"+targetOffset+\" <= \"+target.buffer.length);\r\n        if (sourceOffset < 0 || sourceLimit > this.buffer.length)\r\n            throw RangeError(\"Illegal source range: 0 <= \"+sourceOffset+\" <= \"+this.buffer.length);\r\n\r\n        var len = sourceLimit - sourceOffset;\r\n        if (len === 0)\r\n            return target; // Nothing to copy\r\n\r\n        target.ensureCapacity(targetOffset + len);\r\n\r\n        this.buffer.copy(target.buffer, targetOffset, sourceOffset, sourceLimit);\r\n\r\n        if (relative) this.offset += len;\r\n        if (targetRelative) target.offset += len;\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Makes sure that this ByteBuffer is backed by a {@link ByteBuffer#buffer} of at least the specified capacity. If the\r\n     *  current capacity is exceeded, it will be doubled. If double the current capacity is less than the required capacity,\r\n     *  the required capacity will be used instead.\r\n     * @param {number} capacity Required capacity\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.ensureCapacity = function(capacity) {\r\n        var current = this.buffer.length;\r\n        if (current < capacity)\r\n            return this.resize((current *= 2) > capacity ? current : capacity);\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Overwrites this ByteBuffer's contents with the specified value. Contents are the bytes between\r\n     *  {@link ByteBuffer#offset} and {@link ByteBuffer#limit}.\r\n     * @param {number|string} value Byte value to fill with. If given as a string, the first character is used.\r\n     * @param {number=} begin Begin offset. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted. defaults to {@link ByteBuffer#offset}.\r\n     * @param {number=} end End offset, defaults to {@link ByteBuffer#limit}.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     * @example `someByteBuffer.clear().fill(0)` fills the entire backing buffer with zeroes\r\n     */\r\n    ByteBufferPrototype.fill = function(value, begin, end) {\r\n        var relative = typeof begin === 'undefined';\n        if (relative) begin = this.offset;\n        if (typeof value === 'string' && value.length > 0)\r\n            value = value.charCodeAt(0);\r\n        if (typeof begin === 'undefined') begin = this.offset;\r\n        if (typeof end === 'undefined') end = this.limit;\r\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value |= 0;\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.length)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.length);\n        }\r\n        if (begin >= end)\r\n            return this; // Nothing to fill\r\n        this.buffer.fill(value, begin, end);\r\n        begin = end;\r\n        if (relative) this.offset = begin;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Makes this ByteBuffer ready for a new sequence of write or relative read operations. Sets `limit = offset` and\r\n     *  `offset = 0`. Make sure always to flip a ByteBuffer when all relative read or write operations are complete.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.flip = function() {\r\n        this.limit = this.offset;\r\n        this.offset = 0;\r\n        return this;\r\n    };\r\n    /**\r\n     * Marks an offset on this ByteBuffer to be used later.\r\n     * @param {number=} offset Offset to mark. Defaults to {@link ByteBuffer#offset}.\r\n     * @returns {!ByteBuffer} this\r\n     * @throws {TypeError} If `offset` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @see ByteBuffer#reset\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.mark = function(offset) {\r\n        offset = typeof offset === 'undefined' ? this.offset : offset;\r\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\r\n        this.markedOffset = offset;\r\n        return this;\r\n    };\r\n    /**\r\n     * Sets the byte order.\r\n     * @param {boolean} littleEndian `true` for little endian byte order, `false` for big endian\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.order = function(littleEndian) {\r\n        if (!this.noAssert) {\r\n            if (typeof littleEndian !== 'boolean')\r\n                throw TypeError(\"Illegal littleEndian: Not a boolean\");\r\n        }\r\n        this.littleEndian = !!littleEndian;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Switches (to) little endian byte order.\r\n     * @param {boolean=} littleEndian Defaults to `true`, otherwise uses big endian\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.LE = function(littleEndian) {\r\n        this.littleEndian = typeof littleEndian !== 'undefined' ? !!littleEndian : true;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Switches (to) big endian byte order.\r\n     * @param {boolean=} bigEndian Defaults to `true`, otherwise uses little endian\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.BE = function(bigEndian) {\r\n        this.littleEndian = typeof bigEndian !== 'undefined' ? !bigEndian : false;\r\n        return this;\r\n    };\r\n    /**\r\n     * Prepends some data to this ByteBuffer. This will overwrite any contents before the specified offset up to the\r\n     *  prepended data's length. If there is not enough space available before the specified `offset`, the backing buffer\r\n     *  will be resized and its contents moved accordingly.\r\n     * @param {!ByteBuffer|string||!Buffer} source Data to prepend. If `source` is a ByteBuffer, its offset will be modified\r\n     *  according to the performed read operation.\r\n     * @param {(string|number)=} encoding Encoding if `data` is a string (\"base64\", \"hex\", \"binary\", defaults to \"utf8\")\r\n     * @param {number=} offset Offset to prepend at. Will use and decrease {@link ByteBuffer#offset} by the number of bytes\r\n     *  prepended if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     * @example A relative `00<01 02 03>.prepend(<04 05>)` results in `<04 05 01 02 03>, 04 05|`\r\n     * @example An absolute `00<01 02 03>.prepend(<04 05>, 2)` results in `04<05 02 03>, 04 05|`\r\n     */\r\n    ByteBufferPrototype.prepend = function(source, encoding, offset) {\r\n        if (typeof encoding === 'number' || typeof encoding !== 'string') {\r\n            offset = encoding;\r\n            encoding = undefined;\r\n        }\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\r\n        if (!(source instanceof ByteBuffer))\r\n            source = ByteBuffer.wrap(source, encoding);\r\n        var len = source.limit - source.offset;\r\n        if (len <= 0) return this; // Nothing to prepend\r\n        var diff = len - offset;\r\n        if (diff > 0) { // Not enough space before offset, so resize + move\r\n            var buffer = new Buffer(this.buffer.length + diff);\r\n            this.buffer.copy(buffer, len, offset, this.buffer.length);\r\n            this.buffer = buffer;\r\n            this.offset += diff;\r\n            if (this.markedOffset >= 0) this.markedOffset += diff;\r\n            this.limit += diff;\r\n            offset += diff;\r\n        }        source.buffer.copy(this.buffer, offset - len, source.offset, source.limit);\r\n\r\n        source.offset = source.limit;\r\n        if (relative)\r\n            this.offset -= len;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Prepends this ByteBuffer to another ByteBuffer. This will overwrite any contents before the specified offset up to the\r\n     *  prepended data's length. If there is not enough space available before the specified `offset`, the backing buffer\r\n     *  will be resized and its contents moved accordingly.\r\n     * @param {!ByteBuffer} target Target ByteBuffer\r\n     * @param {number=} offset Offset to prepend at. Will use and decrease {@link ByteBuffer#offset} by the number of bytes\r\n     *  prepended if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     * @see ByteBuffer#prepend\r\n     */\r\n    ByteBufferPrototype.prependTo = function(target, offset) {\r\n        target.prepend(this, offset);\r\n        return this;\r\n    };\r\n    /**\r\n     * Prints debug information about this ByteBuffer's contents.\r\n     * @param {function(string)=} out Output function to call, defaults to console.log\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.printDebug = function(out) {\r\n        if (typeof out !== 'function') out = console.log.bind(console);\r\n        out(\r\n            this.toString()+\"\\n\"+\r\n            \"-------------------------------------------------------------------\\n\"+\r\n            this.toDebug(/* columns */ true)\r\n        );\r\n    };\r\n\r\n    /**\r\n     * Gets the number of remaining readable bytes. Contents are the bytes between {@link ByteBuffer#offset} and\r\n     *  {@link ByteBuffer#limit}, so this returns `limit - offset`.\r\n     * @returns {number} Remaining readable bytes. May be negative if `offset > limit`.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.remaining = function() {\r\n        return this.limit - this.offset;\r\n    };\r\n    /**\r\n     * Resets this ByteBuffer's {@link ByteBuffer#offset}. If an offset has been marked through {@link ByteBuffer#mark}\r\n     *  before, `offset` will be set to {@link ByteBuffer#markedOffset}, which will then be discarded. If no offset has been\r\n     *  marked, sets `offset = 0`.\r\n     * @returns {!ByteBuffer} this\r\n     * @see ByteBuffer#mark\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.reset = function() {\r\n        if (this.markedOffset >= 0) {\r\n            this.offset = this.markedOffset;\r\n            this.markedOffset = -1;\r\n        } else {\r\n            this.offset = 0;\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Resizes this ByteBuffer to be backed by a buffer of at least the given capacity. Will do nothing if already that\r\n     *  large or larger.\r\n     * @param {number} capacity Capacity required\r\n     * @returns {!ByteBuffer} this\r\n     * @throws {TypeError} If `capacity` is not a number\r\n     * @throws {RangeError} If `capacity < 0`\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.resize = function(capacity) {\r\n        if (!this.noAssert) {\r\n            if (typeof capacity !== 'number' || capacity % 1 !== 0)\n                throw TypeError(\"Illegal capacity: \"+capacity+\" (not an integer)\");\n            capacity |= 0;\n            if (capacity < 0)\r\n                throw RangeError(\"Illegal capacity: 0 <= \"+capacity);\r\n        }\r\n        if (this.buffer.length < capacity) {\r\n            var buffer = new Buffer(capacity);\r\n            this.buffer.copy(buffer);\r\n            this.buffer = buffer;\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Reverses this ByteBuffer's contents.\r\n     * @param {number=} begin Offset to start at, defaults to {@link ByteBuffer#offset}\r\n     * @param {number=} end Offset to end at, defaults to {@link ByteBuffer#limit}\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.reverse = function(begin, end) {\r\n        if (typeof begin === 'undefined') begin = this.offset;\r\n        if (typeof end === 'undefined') end = this.limit;\r\n        if (!this.noAssert) {\r\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.length)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.length);\n        }\r\n        if (begin === end)\r\n            return this; // Nothing to reverse\r\n        Array.prototype.reverse.call(this.buffer.slice(begin, end));\r\n        return this;\r\n    };\r\n    /**\r\n     * Skips the next `length` bytes. This will just advance\r\n     * @param {number} length Number of bytes to skip. May also be negative to move the offset back.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.skip = function(length) {\r\n        if (!this.noAssert) {\r\n            if (typeof length !== 'number' || length % 1 !== 0)\n                throw TypeError(\"Illegal length: \"+length+\" (not an integer)\");\n            length |= 0;\n        }\r\n        var offset = this.offset + length;\r\n        if (!this.noAssert) {\r\n            if (offset < 0 || offset > this.buffer.length)\r\n                throw RangeError(\"Illegal length: 0 <= \"+this.offset+\" + \"+length+\" <= \"+this.buffer.length);\r\n        }\r\n        this.offset = offset;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Slices this ByteBuffer by creating a cloned instance with `offset = begin` and `limit = end`.\r\n     * @param {number=} begin Begin offset, defaults to {@link ByteBuffer#offset}.\r\n     * @param {number=} end End offset, defaults to {@link ByteBuffer#limit}.\r\n     * @returns {!ByteBuffer} Clone of this ByteBuffer with slicing applied, backed by the same {@link ByteBuffer#buffer}\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.slice = function(begin, end) {\r\n        if (typeof begin === 'undefined') begin = this.offset;\r\n        if (typeof end === 'undefined') end = this.limit;\r\n        if (!this.noAssert) {\r\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.length)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.length);\n        }\r\n        var bb = this.clone();\r\n        bb.offset = begin;\r\n        bb.limit = end;\r\n        return bb;\r\n    };\r\n    /**\r\n     * Returns a copy of the backing buffer that contains this ByteBuffer's contents. Contents are the bytes between\r\n     *  {@link ByteBuffer#offset} and {@link ByteBuffer#limit}.\r\n     * @param {boolean=} forceCopy If `true` returns a copy, otherwise returns a view referencing the same memory if\r\n     *  possible. Defaults to `false`\r\n     * @returns {!Buffer} Contents as a Buffer\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.toBuffer = function(forceCopy) {\r\n        var offset = this.offset,\r\n            limit = this.limit;\r\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: Not an integer\");\n            offset >>>= 0;\n            if (typeof limit !== 'number' || limit % 1 !== 0)\n                throw TypeError(\"Illegal limit: Not an integer\");\n            limit >>>= 0;\n            if (offset < 0 || offset > limit || limit > this.buffer.length)\n                throw RangeError(\"Illegal range: 0 <= \"+offset+\" <= \"+limit+\" <= \"+this.buffer.length);\n        }\r\n        if (forceCopy) {\r\n            var buffer = new Buffer(limit - offset);\r\n            this.buffer.copy(buffer, 0, offset, limit);\r\n            return buffer;\r\n        } else {\r\n            if (offset === 0 && limit === this.buffer.length)\r\n                return this.buffer;\r\n            else\r\n                return this.buffer.slice(offset, limit);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns a copy of the backing buffer compacted to contain this ByteBuffer's contents. Contents are the bytes between\r\n     *  {@link ByteBuffer#offset} and {@link ByteBuffer#limit}.\r\n     * @returns {!ArrayBuffer} Contents as an ArrayBuffer\r\n     */\r\n    ByteBufferPrototype.toArrayBuffer = function() {\r\n        var offset = this.offset,\r\n            limit = this.limit;\r\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: Not an integer\");\n            offset >>>= 0;\n            if (typeof limit !== 'number' || limit % 1 !== 0)\n                throw TypeError(\"Illegal limit: Not an integer\");\n            limit >>>= 0;\n            if (offset < 0 || offset > limit || limit > this.buffer.length)\n                throw RangeError(\"Illegal range: 0 <= \"+offset+\" <= \"+limit+\" <= \"+this.buffer.length);\n        }\r\n        var ab = new ArrayBuffer(limit - offset);\r\n        if (memcpy) { // Fast\r\n            memcpy(ab, 0, this.buffer, offset, limit);\r\n        } else { // Slow\r\n            var dst = new Uint8Array(ab);\r\n            for (var i=offset; i<limit; ++i)\r\n                dst[i-offset] = this.buffer[i];\r\n        }\r\n        return ab;\r\n    };\r\n\r\n    /**\r\n     * Converts the ByteBuffer's contents to a string.\r\n     * @param {string=} encoding Output encoding. Returns an informative string representation if omitted but also allows\r\n     *  direct conversion to \"utf8\", \"hex\", \"base64\" and \"binary\" encoding. \"debug\" returns a hex representation with\r\n     *  highlighted offsets.\r\n     * @param {number=} begin Offset to begin at, defaults to {@link ByteBuffer#offset}\r\n     * @param {number=} end Offset to end at, defaults to {@link ByteBuffer#limit}\r\n     * @returns {string} String representation\r\n     * @throws {Error} If `encoding` is invalid\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.toString = function(encoding, begin, end) {\r\n        if (typeof encoding === 'undefined')\r\n            return \"ByteBufferNB(offset=\"+this.offset+\",markedOffset=\"+this.markedOffset+\",limit=\"+this.limit+\",capacity=\"+this.capacity()+\")\";\r\n        if (typeof encoding === 'number')\r\n            encoding = \"utf8\",\r\n            begin = encoding,\r\n            end = begin;\r\n        switch (encoding) {\r\n            case \"utf8\":\r\n                return this.toUTF8(begin, end);\r\n            case \"base64\":\r\n                return this.toBase64(begin, end);\r\n            case \"hex\":\r\n                return this.toHex(begin, end);\r\n            case \"binary\":\r\n                return this.toBinary(begin, end);\r\n            case \"debug\":\r\n                return this.toDebug();\r\n            case \"columns\":\r\n                return this.toColumns();\r\n            default:\r\n                throw Error(\"Unsupported encoding: \"+encoding);\r\n        }\r\n    };\r\n\r\n    // encodings/base64\r\n\r\n    /**\r\n     * Encodes this ByteBuffer's contents to a base64 encoded string.\r\n     * @param {number=} begin Offset to begin at, defaults to {@link ByteBuffer#offset}.\r\n     * @param {number=} end Offset to end at, defaults to {@link ByteBuffer#limit}.\r\n     * @returns {string} Base64 encoded string\r\n     * @throws {RangeError} If `begin` or `end` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.toBase64 = function(begin, end) {\r\n        if (typeof begin === 'undefined')\r\n            begin = this.offset;\r\n        if (typeof end === 'undefined')\r\n            end = this.limit;\r\n        begin = begin | 0; end = end | 0;\r\n        if (begin < 0 || end > this.capacity || begin > end)\r\n            throw RangeError(\"begin, end\");\r\n        return this.buffer.toString(\"base64\", begin, end);\r\n    };\r\n\r\n    /**\r\n     * Decodes a base64 encoded string to a ByteBuffer.\r\n     * @param {string} str String to decode\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @returns {!ByteBuffer} ByteBuffer\r\n     * @expose\r\n     */\r\n    ByteBuffer.fromBase64 = function(str, littleEndian) {\r\n        return ByteBuffer.wrap(new Buffer(str, \"base64\"), littleEndian);\r\n        return bb;\r\n    };\r\n\r\n    /**\r\n     * Encodes a binary string to base64 like `window.btoa` does.\r\n     * @param {string} str Binary string\r\n     * @returns {string} Base64 encoded string\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window.btoa\r\n     * @expose\r\n     */\r\n    ByteBuffer.btoa = function(str) {\r\n        return ByteBuffer.fromBinary(str).toBase64();\r\n    };\r\n\r\n    /**\r\n     * Decodes a base64 encoded string to binary like `window.atob` does.\r\n     * @param {string} b64 Base64 encoded string\r\n     * @returns {string} Binary string\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window.atob\r\n     * @expose\r\n     */\r\n    ByteBuffer.atob = function(b64) {\r\n        return ByteBuffer.fromBase64(b64).toBinary();\r\n    };\r\n\r\n    // encodings/binary\r\n\r\n    /**\r\n     * Encodes this ByteBuffer to a binary encoded string, that is using only characters 0x00-0xFF as bytes.\r\n     * @param {number=} begin Offset to begin at. Defaults to {@link ByteBuffer#offset}.\r\n     * @param {number=} end Offset to end at. Defaults to {@link ByteBuffer#limit}.\r\n     * @returns {string} Binary encoded string\r\n     * @throws {RangeError} If `offset > limit`\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.toBinary = function(begin, end) {\r\n        if (typeof begin === 'undefined')\r\n            begin = this.offset;\r\n        if (typeof end === 'undefined')\r\n            end = this.limit;\r\n        begin |= 0; end |= 0;\r\n        if (begin < 0 || end > this.capacity() || begin > end)\r\n            throw RangeError(\"begin, end\");\r\n        return this.buffer.toString(\"binary\", begin, end);\r\n    };\r\n\r\n    /**\r\n     * Decodes a binary encoded string, that is using only characters 0x00-0xFF as bytes, to a ByteBuffer.\r\n     * @param {string} str String to decode\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @returns {!ByteBuffer} ByteBuffer\r\n     * @expose\r\n     */\r\n    ByteBuffer.fromBinary = function(str, littleEndian) {\r\n        return ByteBuffer.wrap(new Buffer(str, \"binary\"), littleEndian);\r\n        return bb;\r\n    };\r\n\r\n    // encodings/debug\r\n\r\n    /**\r\n     * Encodes this ByteBuffer to a hex encoded string with marked offsets. Offset symbols are:\r\n     * * `<` : offset,\r\n     * * `'` : markedOffset,\r\n     * * `>` : limit,\r\n     * * `|` : offset and limit,\r\n     * * `[` : offset and markedOffset,\r\n     * * `]` : markedOffset and limit,\r\n     * * `!` : offset, markedOffset and limit\r\n     * @param {boolean=} columns If `true` returns two columns hex + ascii, defaults to `false`\r\n     * @returns {string|!Array.<string>} Debug string or array of lines if `asArray = true`\r\n     * @expose\r\n     * @example `>00'01 02<03` contains four bytes with `limit=0, markedOffset=1, offset=3`\r\n     * @example `00[01 02 03>` contains four bytes with `offset=markedOffset=1, limit=4`\r\n     * @example `00|01 02 03` contains four bytes with `offset=limit=1, markedOffset=-1`\r\n     * @example `|` contains zero bytes with `offset=limit=0, markedOffset=-1`\r\n     */\r\n    ByteBufferPrototype.toDebug = function(columns) {\r\n        var i = -1,\r\n            k = this.buffer.length,\r\n            b,\r\n            hex = \"\",\r\n            asc = \"\",\r\n            out = \"\";\r\n        while (i<k) {\r\n            if (i !== -1) {\r\n                b = this.buffer[i];\r\n                if (b < 0x10) hex += \"0\"+b.toString(16).toUpperCase();\r\n                else hex += b.toString(16).toUpperCase();\r\n                if (columns)\r\n                    asc += b > 32 && b < 127 ? String.fromCharCode(b) : '.';\r\n            }\r\n            ++i;\r\n            if (columns) {\r\n                if (i > 0 && i % 16 === 0 && i !== k) {\r\n                    while (hex.length < 3*16+3) hex += \" \";\r\n                    out += hex+asc+\"\\n\";\r\n                    hex = asc = \"\";\r\n                }\r\n            }\r\n            if (i === this.offset && i === this.limit)\r\n                hex += i === this.markedOffset ? \"!\" : \"|\";\r\n            else if (i === this.offset)\r\n                hex += i === this.markedOffset ? \"[\" : \"<\";\r\n            else if (i === this.limit)\r\n                hex += i === this.markedOffset ? \"]\" : \">\";\r\n            else\r\n                hex += i === this.markedOffset ? \"'\" : (columns || (i !== 0 && i !== k) ? \" \" : \"\");\r\n        }\r\n        if (columns && hex !== \" \") {\r\n            while (hex.length < 3*16+3)\r\n                hex += \" \";\r\n            out += hex + asc + \"\\n\";\r\n        }\r\n        return columns ? out : hex;\r\n    };\r\n\r\n    /**\r\n     * Decodes a hex encoded string with marked offsets to a ByteBuffer.\r\n     * @param {string} str Debug string to decode (not be generated with `columns = true`)\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @returns {!ByteBuffer} ByteBuffer\r\n     * @expose\r\n     * @see ByteBuffer#toDebug\r\n     */\r\n    ByteBuffer.fromDebug = function(str, littleEndian, noAssert) {\r\n        var k = str.length,\r\n            bb = new ByteBuffer(((k+1)/3)|0, littleEndian, noAssert);\r\n        var i = 0, j = 0, ch, b,\r\n            rs = false, // Require symbol next\r\n            ho = false, hm = false, hl = false, // Already has offset (ho), markedOffset (hm), limit (hl)?\r\n            fail = false;\r\n        while (i<k) {\r\n            switch (ch = str.charAt(i++)) {\r\n                case '!':\r\n                    if (!noAssert) {\r\n                        if (ho || hm || hl) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                        ho = hm = hl = true;\r\n                    }\r\n                    bb.offset = bb.markedOffset = bb.limit = j;\r\n                    rs = false;\r\n                    break;\r\n                case '|':\r\n                    if (!noAssert) {\r\n                        if (ho || hl) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                        ho = hl = true;\r\n                    }\r\n                    bb.offset = bb.limit = j;\r\n                    rs = false;\r\n                    break;\r\n                case '[':\r\n                    if (!noAssert) {\r\n                        if (ho || hm) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                        ho = hm = true;\r\n                    }\r\n                    bb.offset = bb.markedOffset = j;\r\n                    rs = false;\r\n                    break;\r\n                case '<':\r\n                    if (!noAssert) {\r\n                        if (ho) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                        ho = true;\r\n                    }\r\n                    bb.offset = j;\r\n                    rs = false;\r\n                    break;\r\n                case ']':\r\n                    if (!noAssert) {\r\n                        if (hl || hm) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                        hl = hm = true;\r\n                    }\r\n                    bb.limit = bb.markedOffset = j;\r\n                    rs = false;\r\n                    break;\r\n                case '>':\r\n                    if (!noAssert) {\r\n                        if (hl) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                        hl = true;\r\n                    }\r\n                    bb.limit = j;\r\n                    rs = false;\r\n                    break;\r\n                case \"'\":\r\n                    if (!noAssert) {\r\n                        if (hm) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                        hm = true;\r\n                    }\r\n                    bb.markedOffset = j;\r\n                    rs = false;\r\n                    break;\r\n                case ' ':\r\n                    rs = false;\r\n                    break;\r\n                default:\r\n                    if (!noAssert) {\r\n                        if (rs) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    b = parseInt(ch+str.charAt(i++), 16);\r\n                    if (!noAssert) {\r\n                        if (isNaN(b) || b < 0 || b > 255)\r\n                            throw TypeError(\"Illegal str: Not a debug encoded string\");\r\n                    }\r\n                    bb.buffer[j++] = b;\r\n                    rs = true;\r\n            }\r\n            if (fail)\r\n                throw TypeError(\"Illegal str: Invalid symbol at \"+i);\r\n        }\r\n        if (!noAssert) {\r\n            if (!ho || !hl)\r\n                throw TypeError(\"Illegal str: Missing offset or limit\");\r\n            if (j<bb.buffer.length)\r\n                throw TypeError(\"Illegal str: Not a debug encoded string (is it hex?) \"+j+\" < \"+k);\r\n        }\r\n        return bb;\r\n    };\r\n\r\n    // encodings/hex\r\n\r\n    /**\r\n     * Encodes this ByteBuffer's contents to a hex encoded string.\r\n     * @param {number=} begin Offset to begin at. Defaults to {@link ByteBuffer#offset}.\r\n     * @param {number=} end Offset to end at. Defaults to {@link ByteBuffer#limit}.\r\n     * @returns {string} Hex encoded string\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.toHex = function(begin, end) {\r\n        begin = typeof begin === 'undefined' ? this.offset : begin;\r\n        end = typeof end === 'undefined' ? this.limit : end;\r\n        if (!this.noAssert) {\r\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.length)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.length);\n        }\r\n        return this.buffer.toString(\"hex\", begin, end);\r\n    };\r\n\r\n    /**\r\n     * Decodes a hex encoded string to a ByteBuffer.\r\n     * @param {string} str String to decode\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @returns {!ByteBuffer} ByteBuffer\r\n     * @expose\r\n     */\r\n    ByteBuffer.fromHex = function(str, littleEndian, noAssert) {\r\n        if (!noAssert) {\r\n            if (typeof str !== 'string')\r\n                throw TypeError(\"Illegal str: Not a string\");\r\n            if (str.length % 2 !== 0)\r\n                throw TypeError(\"Illegal str: Length not a multiple of 2\");\r\n        }\r\n        var bb = new ByteBuffer(0, littleEndian, true);\r\n        bb.buffer = new Buffer(str, \"hex\");\r\n        bb.limit = bb.buffer.length;\r\n        return bb;\r\n    };\r\n\r\n    // utfx-embeddable\r\n\r\n    /**\r\n     * utfx-embeddable (c) 2014 Daniel Wirtz <dcode@dcode.io>\r\n     * Released under the Apache License, Version 2.0\r\n     * see: https://github.com/dcodeIO/utfx for details\r\n     */\r\n    var utfx = function() {\r\n        \"use strict\";\r\n\r\n        /**\r\n         * utfx namespace.\r\n         * @inner\r\n         * @type {!Object.<string,*>}\r\n         */\r\n        var utfx = {};\r\n\r\n        /**\r\n         * Maximum valid code point.\r\n         * @type {number}\r\n         * @const\r\n         */\r\n        utfx.MAX_CODEPOINT = 0x10FFFF;\r\n\r\n        /**\r\n         * Encodes UTF8 code points to UTF8 bytes.\r\n         * @param {(!function():number|null) | number} src Code points source, either as a function returning the next code point\r\n         *  respectively `null` if there are no more code points left or a single numeric code point.\r\n         * @param {!function(number)} dst Bytes destination as a function successively called with the next byte\r\n         */\r\n        utfx.encodeUTF8 = function(src, dst) {\r\n            var cp = null;\r\n            if (typeof src === 'number')\r\n                cp = src,\r\n                src = function() { return null; };\r\n            while (cp !== null || (cp = src()) !== null) {\r\n                if (cp < 0x80)\r\n                    dst(cp&0x7F);\r\n                else if (cp < 0x800)\r\n                    dst(((cp>>6)&0x1F)|0xC0),\r\n                    dst((cp&0x3F)|0x80);\r\n                else if (cp < 0x10000)\r\n                    dst(((cp>>12)&0x0F)|0xE0),\r\n                    dst(((cp>>6)&0x3F)|0x80),\r\n                    dst((cp&0x3F)|0x80);\r\n                else\r\n                    dst(((cp>>18)&0x07)|0xF0),\r\n                    dst(((cp>>12)&0x3F)|0x80),\r\n                    dst(((cp>>6)&0x3F)|0x80),\r\n                    dst((cp&0x3F)|0x80);\r\n                cp = null;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Decodes UTF8 bytes to UTF8 code points.\r\n         * @param {!function():number|null} src Bytes source as a function returning the next byte respectively `null` if there\r\n         *  are no more bytes left.\r\n         * @param {!function(number)} dst Code points destination as a function successively called with each decoded code point.\r\n         * @throws {RangeError} If a starting byte is invalid in UTF8\r\n         * @throws {Error} If the last sequence is truncated. Has an array property `bytes` holding the\r\n         *  remaining bytes.\r\n         */\r\n        utfx.decodeUTF8 = function(src, dst) {\r\n            var a, b, c, d, fail = function(b) {\r\n                b = b.slice(0, b.indexOf(null));\r\n                var err = Error(b.toString());\r\n                err.name = \"TruncatedError\";\r\n                err['bytes'] = b;\r\n                throw err;\r\n            };\r\n            while ((a = src()) !== null) {\r\n                if ((a&0x80) === 0)\r\n                    dst(a);\r\n                else if ((a&0xE0) === 0xC0)\r\n                    ((b = src()) === null) && fail([a, b]),\r\n                    dst(((a&0x1F)<<6) | (b&0x3F));\r\n                else if ((a&0xF0) === 0xE0)\r\n                    ((b=src()) === null || (c=src()) === null) && fail([a, b, c]),\r\n                    dst(((a&0x0F)<<12) | ((b&0x3F)<<6) | (c&0x3F));\r\n                else if ((a&0xF8) === 0xF0)\r\n                    ((b=src()) === null || (c=src()) === null || (d=src()) === null) && fail([a, b, c ,d]),\r\n                    dst(((a&0x07)<<18) | ((b&0x3F)<<12) | ((c&0x3F)<<6) | (d&0x3F));\r\n                else throw RangeError(\"Illegal starting byte: \"+a);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Converts UTF16 characters to UTF8 code points.\r\n         * @param {!function():number|null} src Characters source as a function returning the next char code respectively\r\n         *  `null` if there are no more characters left.\r\n         * @param {!function(number)} dst Code points destination as a function successively called with each converted code\r\n         *  point.\r\n         */\r\n        utfx.UTF16toUTF8 = function(src, dst) {\r\n            var c1, c2 = null;\r\n            while (true) {\r\n                if ((c1 = c2 !== null ? c2 : src()) === null)\r\n                    break;\r\n                if (c1 >= 0xD800 && c1 <= 0xDFFF) {\r\n                    if ((c2 = src()) !== null) {\r\n                        if (c2 >= 0xDC00 && c2 <= 0xDFFF) {\r\n                            dst((c1-0xD800)*0x400+c2-0xDC00+0x10000);\r\n                            c2 = null; continue;\r\n                        }\r\n                    }\r\n                }\r\n                dst(c1);\r\n            }\r\n            if (c2 !== null) dst(c2);\r\n        };\r\n\r\n        /**\r\n         * Converts UTF8 code points to UTF16 characters.\r\n         * @param {(!function():number|null) | number} src Code points source, either as a function returning the next code point\r\n         *  respectively `null` if there are no more code points left or a single numeric code point.\r\n         * @param {!function(number)} dst Characters destination as a function successively called with each converted char code.\r\n         * @throws {RangeError} If a code point is out of range\r\n         */\r\n        utfx.UTF8toUTF16 = function(src, dst) {\r\n            var cp = null;\r\n            if (typeof src === 'number')\r\n                cp = src, src = function() { return null; };\r\n            while (cp !== null || (cp = src()) !== null) {\r\n                if (cp <= 0xFFFF)\r\n                    dst(cp);\r\n                else\r\n                    cp -= 0x10000,\r\n                    dst((cp>>10)+0xD800),\r\n                    dst((cp%0x400)+0xDC00);\r\n                cp = null;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Converts and encodes UTF16 characters to UTF8 bytes.\r\n         * @param {!function():number|null} src Characters source as a function returning the next char code respectively `null`\r\n         *  if there are no more characters left.\r\n         * @param {!function(number)} dst Bytes destination as a function successively called with the next byte.\r\n         */\r\n        utfx.encodeUTF16toUTF8 = function(src, dst) {\r\n            utfx.UTF16toUTF8(src, function(cp) {\r\n                utfx.encodeUTF8(cp, dst);\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Decodes and converts UTF8 bytes to UTF16 characters.\r\n         * @param {!function():number|null} src Bytes source as a function returning the next byte respectively `null` if there\r\n         *  are no more bytes left.\r\n         * @param {!function(number)} dst Characters destination as a function successively called with each converted char code.\r\n         * @throws {RangeError} If a starting byte is invalid in UTF8\r\n         * @throws {Error} If the last sequence is truncated. Has an array property `bytes` holding the remaining bytes.\r\n         */\r\n        utfx.decodeUTF8toUTF16 = function(src, dst) {\r\n            utfx.decodeUTF8(src, function(cp) {\r\n                utfx.UTF8toUTF16(cp, dst);\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Calculates the byte length of an UTF8 code point.\r\n         * @param {number} cp UTF8 code point\r\n         * @returns {number} Byte length\r\n         */\r\n        utfx.calculateCodePoint = function(cp) {\r\n            return (cp < 0x80) ? 1 : (cp < 0x800) ? 2 : (cp < 0x10000) ? 3 : 4;\r\n        };\r\n\r\n        /**\r\n         * Calculates the number of UTF8 bytes required to store UTF8 code points.\r\n         * @param {(!function():number|null)} src Code points source as a function returning the next code point respectively\r\n         *  `null` if there are no more code points left.\r\n         * @returns {number} The number of UTF8 bytes required\r\n         */\r\n        utfx.calculateUTF8 = function(src) {\r\n            var cp, l=0;\r\n            while ((cp = src()) !== null)\r\n                l += (cp < 0x80) ? 1 : (cp < 0x800) ? 2 : (cp < 0x10000) ? 3 : 4;\r\n            return l;\r\n        };\r\n\r\n        /**\r\n         * Calculates the number of UTF8 code points respectively UTF8 bytes required to store UTF16 char codes.\r\n         * @param {(!function():number|null)} src Characters source as a function returning the next char code respectively\r\n         *  `null` if there are no more characters left.\r\n         * @returns {!Array.<number>} The number of UTF8 code points at index 0 and the number of UTF8 bytes required at index 1.\r\n         */\r\n        utfx.calculateUTF16asUTF8 = function(src) {\r\n            var n=0, l=0;\r\n            utfx.UTF16toUTF8(src, function(cp) {\r\n                ++n; l += (cp < 0x80) ? 1 : (cp < 0x800) ? 2 : (cp < 0x10000) ? 3 : 4;\r\n            });\r\n            return [n,l];\r\n        };\r\n\r\n        return utfx;\r\n    }();\r\n\r\n    // encodings/utf8\r\n\r\n    /**\r\n     * Encodes this ByteBuffer's contents between {@link ByteBuffer#offset} and {@link ByteBuffer#limit} to an UTF8 encoded\r\n     *  string.\r\n     * @returns {string} Hex encoded string\r\n     * @throws {RangeError} If `offset > limit`\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.toUTF8 = function(begin, end) {\r\n        if (typeof begin === 'undefined') begin = this.offset;\r\n        if (typeof end === 'undefined') end = this.limit;\r\n        if (!this.noAssert) {\r\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.length)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.length);\n        }\r\n        return this.buffer.toString(\"utf8\", begin, end);\r\n    };\r\n\r\n    /**\r\n     * Decodes an UTF8 encoded string to a ByteBuffer.\r\n     * @param {string} str String to decode\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @returns {!ByteBuffer} ByteBuffer\r\n     * @expose\r\n     */\r\n    ByteBuffer.fromUTF8 = function(str, littleEndian, noAssert) {\r\n        if (!noAssert)\r\n            if (typeof str !== 'string')\r\n                throw TypeError(\"Illegal str: Not a string\");\r\n        var bb = new ByteBuffer(0, littleEndian, noAssert);\r\n        bb.buffer = new Buffer(str, \"utf8\");\r\n        bb.limit = bb.buffer.length;\r\n        return bb;\r\n    };\r\n\r\n\r\n    /**\r\n     * node-memcpy. This is an optional binding dependency and may not be present.\r\n     * @function\r\n     * @param {!(Buffer|ArrayBuffer|Uint8Array)} target Destination\r\n     * @param {number|!(Buffer|ArrayBuffer)} targetStart Destination start, defaults to 0.\r\n     * @param {(!(Buffer|ArrayBuffer|Uint8Array)|number)=} source Source\r\n     * @param {number=} sourceStart Source start, defaults to 0.\r\n     * @param {number=} sourceEnd Source end, defaults to capacity.\r\n     * @returns {number} Number of bytes copied\r\n     * @throws {Error} If any index is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBuffer.memcpy = memcpy;\r\n\r\n    return ByteBuffer;\r\n\r\n})();\r\n","/// <reference types=\"bytebuffer\" />\n/// <reference types=\"long\" />\n/*\n * The MIT License (MIT)\n * Copyright (c) 2017 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\nimport { TransactionType } from \"./transaction-type\"\nimport { Attachment } from \"./attachment\"\nimport * as appendix from \"./appendix\"\nimport * as utils from \"./utils\"\nimport * as converters from \"./converters\"\nimport * as crypto from \"./crypto\"\nimport Long from \"long\"\nimport ByteBuffer from \"bytebuffer\"\nimport { Buffer } from \"buffer\"\n\nexport class Builder {\n  public _deadline = 1440\n  public _senderPublicKey: Array<number>\n  public _amountHQT: string\n  public _feeHQT: string\n  public _type: TransactionType\n  public _version = 1\n  public _attachment: Attachment\n  public _recipientId: string\n  public _signature: Array<number>\n  public _message: appendix.AppendixMessage\n  public _encryptedMessage: appendix.AppendixEncryptedMessage\n  public _encryptToSelfMessage: appendix.AppendixEncryptToSelfMessage\n  public _publicKeyAnnouncement: appendix.AppendixPublicKeyAnnouncement\n  public _privateNameAnnouncement: appendix.AppendixPrivateNameAnnouncement\n  public _privateNameAssignment: appendix.AppendixPrivateNameAssignment\n  public _publicNameAnnouncement: appendix.AppendixPublicNameAnnouncement\n  public _publicNameAssignment: appendix.AppendixPublicNameAssignment\n  public _isTestnet: boolean\n  public _genesisKey: Array<number>\n  public _timestamp: number\n  public _ecBlockHeight: number\n  public _ecBlockId: string\n\n  public deadline(deadline: number) {\n    this._deadline = deadline\n    return this\n  }\n  public senderPublicKey(senderPublicKey: Array<number>) {\n    this._senderPublicKey = senderPublicKey\n    return this\n  }\n  public amountHQT(amountHQT: string) {\n    this._amountHQT = amountHQT\n    return this\n  }\n  public feeHQT(feeHQT: string) {\n    this._feeHQT = feeHQT\n    return this\n  }\n  public version(version: number) {\n    this._version = version\n    return this\n  }\n  public attachment(attachment: Attachment) {\n    this._attachment = attachment\n    this._type = attachment.getTransactionType()\n    return this\n  }\n  public recipientId(recipientId: string) {\n    this._recipientId = recipientId\n    return this\n  }\n  public signature(signature: Array<number>) {\n    this._signature = signature\n    return this\n  }\n  public message(message: appendix.AppendixMessage) {\n    this._message = message\n    return this\n  }\n  public encryptedMessage(encryptedMessage: appendix.AppendixEncryptedMessage) {\n    this._encryptedMessage = encryptedMessage\n    return this\n  }\n  public encryptToSelfMessage(encryptToSelfMessage: appendix.AppendixEncryptToSelfMessage) {\n    this._encryptToSelfMessage = encryptToSelfMessage\n    return this\n  }\n  public publicKeyAnnouncement(publicKeyAnnouncement: appendix.AppendixPublicKeyAnnouncement) {\n    this._publicKeyAnnouncement = publicKeyAnnouncement\n    return this\n  }\n  public privateNameAnnouncement(\n    privateNameAnnouncement: appendix.AppendixPrivateNameAnnouncement\n  ) {\n    this._privateNameAnnouncement = privateNameAnnouncement\n    return this\n  }\n  public privateNameAssignment(privateNameAssignment: appendix.AppendixPrivateNameAssignment) {\n    this._privateNameAssignment = privateNameAssignment\n    return this\n  }\n  public publicNameAnnouncement(publicNameAnnouncement: appendix.AppendixPublicNameAnnouncement) {\n    this._publicNameAnnouncement = publicNameAnnouncement\n    return this\n  }\n  public publicNameAssignment(publicNameAssignment: appendix.AppendixPublicNameAssignment) {\n    this._publicNameAssignment = publicNameAssignment\n    return this\n  }\n  public isTestnet(isTestnet: boolean) {\n    this._isTestnet = isTestnet\n    return this\n  }\n  public genesisKey(genesisKey: Array<number>) {\n    this._genesisKey = genesisKey\n    return this\n  }\n  public timestamp(timestamp: number) {\n    this._timestamp = timestamp\n    return this\n  }\n  public ecBlockId(ecBlockId: string) {\n    this._ecBlockId = ecBlockId\n    return this\n  }\n  public ecBlockHeight(ecBlockHeight: number) {\n    this._ecBlockHeight = ecBlockHeight\n    return this\n  }\n\n  public build(secretPhrase: string): TransactionImpl {\n    return new TransactionImpl(this, secretPhrase)\n  }\n}\n\nexport class TransactionImpl {\n  private appendages: Array<appendix.Appendix>\n  private appendagesSize: number\n  private height = 0x7fffffff\n  private signature: Array<number>\n  private type: TransactionType\n  private version: number\n  private timestamp: number\n  private deadline: number\n  private senderPublicKey: Array<number>\n  private recipientId: string\n  private amountHQT: string\n  private feeHQT: string\n  private message: appendix.AppendixMessage\n  private encryptedMessage: appendix.AppendixEncryptedMessage\n  private encryptToSelfMessage: appendix.AppendixEncryptToSelfMessage\n  private publicKeyAnnouncement: appendix.AppendixPublicKeyAnnouncement\n  private privateNameAnnouncement: appendix.AppendixPrivateNameAnnouncement\n  private privateNameAssignment: appendix.AppendixPrivateNameAssignment\n  private publicNameAnnouncement: appendix.AppendixPublicNameAnnouncement\n  private publicNameAssignment: appendix.AppendixPublicNameAssignment\n  private ecBlockHeight: number\n  private ecBlockId: string\n  private isTestnet: boolean\n  private genesisKey: Array<number>\n\n  constructor(builder: Builder, secretPhrase: string | null) {\n    this.appendages = []\n    this.isTestnet = builder._isTestnet\n    this.genesisKey = builder._genesisKey\n    this.timestamp = builder._timestamp\n    this.type = builder._type\n    this.version = builder._version\n    this.deadline = builder._deadline\n    this.senderPublicKey = builder._senderPublicKey\n    this.recipientId = builder._recipientId\n    this.amountHQT = builder._amountHQT\n    this.feeHQT = builder._feeHQT\n    this.signature = builder._signature\n    this.message = builder._message\n    this.encryptedMessage = builder._encryptedMessage\n    this.encryptToSelfMessage = builder._encryptToSelfMessage\n    this.publicKeyAnnouncement = builder._publicKeyAnnouncement\n    this.privateNameAnnouncement = builder._privateNameAnnouncement\n    this.privateNameAssignment = builder._privateNameAssignment\n    this.publicNameAnnouncement = builder._publicNameAnnouncement\n    this.publicNameAssignment = builder._publicNameAssignment\n    this.ecBlockHeight = builder._ecBlockHeight\n    this.ecBlockId = builder._ecBlockId\n    this.senderPublicKey\n    if (utils.isDefined(builder._senderPublicKey)) this.senderPublicKey = builder._senderPublicKey\n    else if (secretPhrase)\n      this.senderPublicKey = converters.hexStringToByteArray(\n        crypto.secretPhraseToPublicKey(secretPhrase)\n      )\n\n    if (!utils.isDefined(builder._attachment)) throw new Error(\"Must provide attachment\")\n    this.appendages.push(builder._attachment)\n\n    if (!utils.isDefined(builder._feeHQT)) this.feeHQT = builder._attachment.getFee()\n\n    if (builder._message) this.appendages.push(builder._message)\n    if (builder._encryptedMessage) this.appendages.push(builder._encryptedMessage)\n    if (builder._publicKeyAnnouncement) this.appendages.push(builder._publicKeyAnnouncement)\n    if (builder._encryptToSelfMessage) this.appendages.push(builder._encryptToSelfMessage)\n    if (builder._privateNameAnnouncement) this.appendages.push(builder._privateNameAnnouncement)\n    if (builder._privateNameAssignment) this.appendages.push(builder._privateNameAssignment)\n    if (builder._publicNameAnnouncement) this.appendages.push(builder._publicNameAnnouncement)\n    if (builder._publicNameAssignment) this.appendages.push(builder._publicNameAssignment)\n    this.appendagesSize = 0\n    this.appendages.forEach(appendage => {\n      this.appendagesSize += appendage.getSize()\n    })\n\n    if (builder._signature && secretPhrase != null) throw new Error(\"Transaction is already signed\")\n    else if (secretPhrase) {\n      let unsignedBytes = this.getUnsignedBytes()\n      let unsignedHex = converters.byteArrayToHexString(unsignedBytes)\n      let signatureHex = crypto.signBytes(unsignedHex, converters.stringToHexString(secretPhrase))\n      if (signatureHex) this.signature = converters.hexStringToByteArray(signatureHex)\n      else throw new Error(\"Could not create signature\")\n    }\n  }\n\n  public getSignature() {\n    return this.signature\n  }\n\n  public getUnsignedBytes(): Array<number> {\n    let bytesHex = this.getBytesAsHex()\n    let bytes = converters.hexStringToByteArray(bytesHex)\n    return this.zeroSignature(bytes)\n  }\n\n  private getSize() {\n    return this.signatureOffset() + 64 + 4 + 4 + 8 + this.appendagesSize\n  }\n\n  private getFlags() {\n    let flags = 0\n    let position = 1\n    if (this.message) flags |= position\n    position <<= 1\n    if (this.encryptedMessage != null) flags |= position\n    position <<= 1\n    if (this.publicKeyAnnouncement != null) flags |= position\n    position <<= 1\n    if (this.encryptToSelfMessage != null) flags |= position\n    position <<= 1\n    if (this.privateNameAnnouncement != null) flags |= position\n    position <<= 1\n    if (this.privateNameAssignment != null) flags |= position\n    position <<= 1\n    if (this.publicNameAnnouncement != null) flags |= position\n    position <<= 1\n    if (this.publicNameAssignment != null) flags |= position\n    return flags\n  }\n\n  private signatureOffset() {\n    return 1 + 1 + 4 + 2 + 32 + 8 + 8 + 8\n  }\n\n  private zeroSignature(bytes: Array<number>): Array<number> {\n    let start = this.signatureOffset()\n    for (let i = start; i < start + 64; i++) {\n      bytes[i] = 0\n    }\n    return bytes\n  }\n\n  public getByteBuffer() {\n    let size = this.getSize()\n    if (this.isTestnet) size += 8\n\n    let buffer = ByteBuffer.allocate(size).order(ByteBuffer.LITTLE_ENDIAN)\n    buffer.writeByte(this.type.getType())\n    buffer.writeByte((this.version << 4) | this.type.getSubtype())\n    buffer.writeInt(this.timestamp)\n    buffer.writeShort(this.deadline)\n    for (let i = 0; i < this.senderPublicKey.length; i++) buffer.writeByte(this.senderPublicKey[i])\n\n    let recipient = Long.fromString(\n      this.type.canHaveRecipient() ? this.recipientId : \"8150091319858025343\",\n      true\n    )\n    buffer.writeInt64(recipient)\n\n    let amount = Long.fromString(this.amountHQT, false)\n    buffer.writeInt64(amount)\n\n    let fee = Long.fromString(this.feeHQT, false)\n    buffer.writeInt64(fee)\n\n    for (let i = 0; i < 64; i++) buffer.writeByte(this.signature ? this.signature[i] : 0)\n\n    buffer.writeInt(this.getFlags())\n    buffer.writeInt(this.ecBlockHeight)\n\n    let ecBlockId = Long.fromString(this.ecBlockId, true)\n    buffer.writeInt64(ecBlockId)\n\n    this.appendages.forEach(appendage => {\n      appendage.putBytes(buffer)\n    })\n\n    if (this.genesisKey) {\n      // replay on main net preventer\n      this.genesisKey.forEach(byte => {\n        buffer.writeByte(byte)\n      })\n    }\n\n    buffer.flip()\n    return buffer\n  }\n\n  public getBytes(): Buffer {\n    return this.getByteBuffer().buffer\n  }\n\n  public getBytesAsHex() {\n    return this.getByteBuffer().toHex()\n  }\n\n  public getRaw() {\n    let raw: any = {}\n    raw[\"type\"] = this.type.getType()\n    raw[\"subtype\"] = this.type.getSubtype()\n    raw[\"version\"] = this.version\n    raw[\"timestamp\"] = this.timestamp\n    raw[\"deadline\"] = this.deadline\n    raw[\"senderPublicKey\"] = this.senderPublicKey ? new Buffer(this.senderPublicKey) : new Buffer(0)\n    raw[\"recipientId\"] = Long.fromString(this.recipientId, true)\n    raw[\"amountHQT\"] = Long.fromString(this.amountHQT)\n    raw[\"feeHQT\"] = Long.fromString(this.feeHQT)\n    raw[\"signature\"] = this.signature ? new Buffer(this.signature) : new Buffer(0)\n    raw[\"flags\"] = this.getFlags()\n    raw[\"ecBlockHeight\"] = this.ecBlockHeight\n    raw[\"ecBlockId\"] = Long.fromString(this.ecBlockId, true)\n    let attachment = this.appendages[0]\n    if (attachment.getSize() > 0) {\n      let attachmentBytes = ByteBuffer.allocate(attachment.getSize()).order(\n        ByteBuffer.LITTLE_ENDIAN\n      )\n      attachment.putBytes(attachmentBytes)\n      raw[\"attachmentBytes\"] = new Buffer(attachmentBytes.buffer)\n    } else {\n      raw[\"attachmentBytes\"] = new Buffer(0)\n    }\n    let totalSize = 0\n    for (let i = 1; i < this.appendages.length; i++) {\n      totalSize += this.appendages[i].getSize()\n    }\n    if (totalSize > 0) {\n      let appendixBytes = ByteBuffer.allocate(totalSize).order(ByteBuffer.LITTLE_ENDIAN)\n      for (let i = 1; i < this.appendages.length; i++) this.appendages[i].putBytes(appendixBytes)\n      raw[\"appendixBytes\"] = new Buffer(appendixBytes.buffer)\n    } else {\n      raw[\"appendixBytes\"] = new Buffer(0)\n    }\n    return raw\n  }\n\n  public getJSONObject() {\n    let json: { [key: string]: any } = {}\n    json[\"type\"] = this.type.getType()\n    json[\"subtype\"] = this.type.getSubtype()\n    json[\"timestamp\"] = this.timestamp\n    json[\"deadline\"] = this.deadline\n    json[\"senderPublicKey\"] = converters.byteArrayToHexString(this.senderPublicKey)\n    if (this.type.canHaveRecipient()) {\n      json[\"recipient\"] = this.recipientId\n    }\n    json[\"amount\"] = this.amountHQT\n    json[\"fee\"] = this.feeHQT\n    json[\"ecBlockHeight\"] = this.ecBlockHeight\n    json[\"ecBlockId\"] = this.ecBlockId\n    json[\"signature\"] = converters.byteArrayToHexString(this.signature)\n\n    let attachmentJSON = {}\n    this.appendages.forEach(appendage => {\n      utils.extend(attachmentJSON, appendage.getJSONObject())\n    })\n    if (!utils.isEmpty(attachmentJSON)) {\n      json[\"attachment\"] = attachmentJSON\n    }\n    json[\"version\"] = this.version\n    return json\n  }\n\n  public verifySignature(): boolean {\n    if (!emptyArrayToNull(this.signature)) throw new Error(\"Transaction is not signed\")\n    let signatureHex = converters.byteArrayToHexString(this.signature)\n    let bytesHex = converters.byteArrayToHexString(this.getUnsignedBytes())\n    let publicKeyHex = converters.byteArrayToHexString(this.senderPublicKey)\n    return crypto.verifyBytes(signatureHex, bytesHex, publicKeyHex)\n  }\n\n  public static parseJSON(json: { [key: string]: any }, isTestnet?: boolean) {\n    let type = json.type\n    let subtype = json.subtype\n    let version = json.version\n    let timestamp = json.timestamp\n    let deadline = json.deadline\n    let senderPublicKey: number[] = []\n    if (json.senderPublicKey)\n      senderPublicKey = converters.hexStringToByteArray(json.senderPublicKey)\n\n    let recipientId = Long.fromString(json.recipient, true)\n    let amountHQT = Long.fromString(json.amount)\n    let feeHQT = Long.fromString(json.fee)\n    let signature: number[] = []\n    if (json.signature) signature = converters.hexStringToByteArray(json.signature)\n    signature = <number[]>emptyArrayToNull(signature)\n\n    let ecBlockHeight = json.ecBlockHeight\n    let ecBlockId = Long.fromString(json.ecBlockId, true)\n\n    let transactionType = TransactionType.findTransactionType(type, subtype)\n    if (!transactionType) throw new Error(\"Transaction type not implemented or undefined\")\n\n    let attachment = json.attachment\n    let builder = new Builder()\n      .timestamp(timestamp)\n      .version(version)\n      .senderPublicKey(senderPublicKey)\n      .amountHQT(amountHQT.toString())\n      .feeHQT(feeHQT.toString())\n      .deadline(deadline)\n      .attachment(transactionType.parseAttachmentJSON(attachment))\n      .timestamp(timestamp)\n      .signature(signature)\n      .ecBlockHeight(ecBlockHeight)\n      .ecBlockId(ecBlockId.toUnsigned().toString())\n      .isTestnet(!!isTestnet)\n    if (transactionType.canHaveRecipient()) builder.recipientId(recipientId.toUnsigned().toString())\n\n    if (utils.isDefined(attachment[\"version.Message\"]))\n      builder.message(new appendix.AppendixMessage().parseJSON(attachment))\n    if (utils.isDefined(attachment[\"version.EncryptedMessage\"]))\n      builder.encryptedMessage(new appendix.AppendixEncryptedMessage().parseJSON(attachment))\n    if (utils.isDefined(attachment[\"version.PublicKeyAnnouncement\"]))\n      builder.publicKeyAnnouncement(\n        new appendix.AppendixPublicKeyAnnouncement().parseJSON(attachment)\n      )\n    if (utils.isDefined(attachment[\"version.EncryptToSelfMessage\"]))\n      builder.encryptToSelfMessage(\n        new appendix.AppendixEncryptToSelfMessage().parseJSON(attachment)\n      )\n    if (utils.isDefined(attachment[\"version.PrivateNameAnnouncement\"]))\n      builder.privateNameAnnouncement(\n        new appendix.AppendixPrivateNameAnnouncement().parseJSON(attachment)\n      )\n    if (utils.isDefined(attachment[\"version.PrivateNameAssignment\"]))\n      builder.privateNameAssignment(\n        new appendix.AppendixPrivateNameAssignment().parseJSON(attachment)\n      )\n    if (utils.isDefined(attachment[\"version.PublicNameAnnouncement\"]))\n      builder.publicNameAnnouncement(\n        new appendix.AppendixPublicNameAnnouncement().parseJSON(attachment)\n      )\n    if (utils.isDefined(attachment[\"version.PublicNameAssignment\"]))\n      builder.publicNameAssignment(\n        new appendix.AppendixPublicNameAssignment().parseJSON(attachment)\n      )\n\n    return new TransactionImpl(builder, null)\n  }\n\n  public static parse(transactionBytesHex: string, isTestnet?: boolean) {\n    let buffer = ByteBuffer.wrap(transactionBytesHex, \"hex\", true)\n\n    let type = buffer.readByte() // 1\n    let subtype = buffer.readByte() // 1\n    let version = (subtype & 0xf0) >> 4\n    subtype = subtype & 0x0f\n    let timestamp = buffer.readInt() // 4\n    let deadline = buffer.readShort() // 2\n    let senderPublicKey: number[] = [] // 32\n    for (let i = 0; i < 32; i++) senderPublicKey[i] = buffer.readByte()\n\n    let recipientId = buffer.readLong() // 8\n    let amountHQT = buffer.readLong() // 8\n    let feeHQT = buffer.readLong() // 8\n    let signature: number[] = [] // 64\n    for (let i = 0; i < 64; i++) signature[i] = buffer.readByte()\n    signature = <number[]>emptyArrayToNull(signature)\n    let flags = buffer.readInt() // 4\n    let ecBlockHeight = buffer.readInt() // 4\n    let ecBlockId = buffer.readLong() // 8\n\n    let transactionType = TransactionType.findTransactionType(type, subtype)\n    if (!transactionType) throw new Error(\"Transaction type not implemented or undefined\")\n    let builder = new Builder()\n      .version(version)\n      .senderPublicKey(senderPublicKey)\n      .amountHQT(amountHQT.toUnsigned().toString())\n      .feeHQT(feeHQT.toUnsigned().toString())\n      .deadline(deadline)\n      .attachment(transactionType.parseAttachment(buffer))\n      .timestamp(timestamp)\n      .signature(signature)\n      .ecBlockHeight(ecBlockHeight)\n      .ecBlockId(ecBlockId.toUnsigned().toString())\n    if (transactionType.canHaveRecipient()) builder.recipientId(recipientId.toUnsigned().toString())\n\n    let position = 1\n    if ((flags & position) != 0) builder.message(new appendix.AppendixMessage().parse(buffer))\n    position <<= 1\n    if ((flags & position) != 0)\n      builder.encryptedMessage(new appendix.AppendixEncryptedMessage().parse(buffer))\n    position <<= 1\n    if ((flags & position) != 0)\n      builder.publicKeyAnnouncement(new appendix.AppendixPublicKeyAnnouncement().parse(buffer))\n    position <<= 1\n    if ((flags & position) != 0)\n      builder.encryptToSelfMessage(new appendix.AppendixEncryptToSelfMessage().parse(buffer))\n    position <<= 1\n    if ((flags & position) != 0)\n      builder.privateNameAnnouncement(new appendix.AppendixPrivateNameAnnouncement().parse(buffer))\n    position <<= 1\n    if ((flags & position) != 0)\n      builder.privateNameAssignment(new appendix.AppendixPrivateNameAssignment().parse(buffer))\n    position <<= 1\n    if ((flags & position) != 0)\n      builder.publicNameAnnouncement(new appendix.AppendixPublicNameAnnouncement().parse(buffer))\n    position <<= 1\n    if ((flags & position) != 0)\n      builder.publicNameAssignment(new appendix.AppendixPublicNameAssignment().parse(buffer))\n    if (isTestnet) buffer.readLong()\n\n    return new TransactionImpl(builder, null)\n  }\n}\n\nfunction emptyArrayToNull(array: number[]) {\n  if (array == null) return null\n  for (let i = 0; i < array.length; i++) {\n    if (array[i] != 0) return array\n  }\n  return null\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2017 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\nimport { Builder, TransactionImpl } from \"./builder\"\nimport * as utils from \"./utils\"\nimport * as appendix from \"./appendix\"\nimport * as converters from \"./converters\"\nimport * as crypto from \"./crypto\"\nimport { HeatSDK } from \"./heat-sdk\"\n\nexport interface IBroadcastOutput {\n  /**\n   * The full hash of the signed transaction ,\n   */\n  fullHash: string\n  /**\n   * The transaction ID\n   */\n  transaction: string\n}\n\nexport class Transaction {\n  private publicMessage_: string\n  private privateMessage_: string\n  private privateMessageToSelf_: string\n  private messageIsBinary_: boolean\n  private deadline_: number\n  private transaction_: TransactionImpl\n\n  constructor(\n    private heatsdk: HeatSDK,\n    private recipientOrRecipientPublicKey: string,\n    private builder: Builder\n  ) {}\n\n  public sign(secretPhrase: string): Promise<Transaction> {\n    return this.build(secretPhrase).then(() => {\n      this.transaction_ = this.builder.build(secretPhrase)\n      return this\n    })\n  }\n\n  public broadcast<T>(): Promise<T> {\n    if (!utils.isDefined(this.transaction_)) throw new Error(\"Must call sign() first\")\n    return this.heatsdk.api.post(\"/tx/broadcast\", {\n      transactionBytes: this.transaction_.getBytesAsHex()\n    })\n  }\n\n  /**\n   * Return signed transaction\n   */\n  public getTransaction() {\n    if (!utils.isDefined(this.transaction_)) throw new Error(\"Must call sign() first\")\n    return this.transaction_\n  }\n\n  private build(secretPhrase: string): Promise<void> {\n    return new Promise((resolve, reject) => {\n      this.builder\n        .deadline(utils.isDefined(this.deadline_) ? this.deadline_ : 1440)\n        .timestamp(utils.epochTime())\n        .ecBlockHeight(1)\n        .ecBlockId(\"0\")\n\n      let recipientPublicKeyHex\n      if (utils.isDefined(this.privateMessageToSelf_))\n        recipientPublicKeyHex = crypto.secretPhraseToPublicKey(secretPhrase)\n\n      if (!recipientPublicKeyHex)\n        recipientPublicKeyHex = utils.isPublicKey(this.recipientOrRecipientPublicKey)\n          ? this.recipientOrRecipientPublicKey\n          : null\n\n      if (recipientPublicKeyHex) {\n        this.builder\n          .publicKeyAnnouncement(\n            new appendix.AppendixPublicKeyAnnouncement().init(\n              converters.hexStringToByteArray(recipientPublicKeyHex)\n            )\n          )\n          .recipientId(crypto.getAccountIdFromPublicKey(recipientPublicKeyHex))\n      } else {\n        this.builder.recipientId(this.recipientOrRecipientPublicKey)\n      }\n\n      if (utils.isDefined(this.publicMessage_)) {\n        let a = new appendix.AppendixMessage().init(\n          this.messageIsBinary_\n            ? converters.hexStringToByteArray(this.publicMessage_)\n            : converters.stringToByteArray(this.publicMessage_),\n          !this.messageIsBinary_\n        )\n        this.builder.message(a)\n      } else {\n        let isPrivate = utils.isDefined(this.privateMessage_)\n        let isPrivateToSelf = utils.isDefined(this.privateMessageToSelf_)\n        if (isPrivate || isPrivateToSelf) {\n          if (!recipientPublicKeyHex) throw new Error(\"Recipient public key not provided\")\n          crypto\n            .encryptMessage(\n              isPrivate ? this.privateMessage_ : this.privateMessageToSelf_,\n              recipientPublicKeyHex,\n              secretPhrase\n            )\n            .then(encryptedMessage => {\n              let a = (isPrivate\n                ? new appendix.AppendixEncryptedMessage()\n                : new appendix.AppendixEncryptToSelfMessage()\n              ).init(encryptedMessage, !this.messageIsBinary_)\n              this.builder.encryptToSelfMessage(a)\n              resolve() // resolve in encryptMessage callback\n            })\n            .catch(reject)\n          return // exit here to not touch the final resolve\n        }\n      }\n      resolve()\n    })\n  }\n\n  private hasMessage() {\n    return (\n      utils.isDefined(this.publicMessage_) ||\n      utils.isDefined(this.privateMessage_) ||\n      utils.isDefined(this.privateMessageToSelf_)\n    )\n  }\n\n  public publicMessage(message: string, isBinary?: boolean) {\n    if (this.hasMessage()) throw new Error(\"Transaction already has a message\")\n    this.messageIsBinary_ = !!isBinary\n    this.publicMessage_ = message\n    return this\n  }\n\n  public privateMessage(message: string, isBinary?: boolean) {\n    if (this.hasMessage()) throw new Error(\"Transaction already has a message\")\n    this.messageIsBinary_ = !!isBinary\n    this.privateMessage_ = message\n    return this\n  }\n\n  public privateMessageToSelf(message: string, isBinary?: boolean) {\n    if (this.hasMessage()) throw new Error(\"Transaction already has a message\")\n    this.messageIsBinary_ = !!isBinary\n    this.privateMessageToSelf_ = message\n    return this\n  }\n\n  public deadline(deadline: number) {\n    this.deadline_ = deadline\n    return this\n  }\n}\n","\"use strict\";\n\nvar BOMChar = '\\uFEFF';\n\nexports.PrependBOM = PrependBOMWrapper\nfunction PrependBOMWrapper(encoder, options) {\n    this.encoder = encoder;\n    this.addBOM = true;\n}\n\nPrependBOMWrapper.prototype.write = function(str) {\n    if (this.addBOM) {\n        str = BOMChar + str;\n        this.addBOM = false;\n    }\n\n    return this.encoder.write(str);\n}\n\nPrependBOMWrapper.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n//------------------------------------------------------------------------------\n\nexports.StripBOM = StripBOMWrapper;\nfunction StripBOMWrapper(decoder, options) {\n    this.decoder = decoder;\n    this.pass = false;\n    this.options = options || {};\n}\n\nStripBOMWrapper.prototype.write = function(buf) {\n    var res = this.decoder.write(buf);\n    if (this.pass || !res)\n        return res;\n\n    if (res[0] === BOMChar) {\n        res = res.slice(1);\n        if (typeof this.options.stripBOM === 'function')\n            this.options.stripBOM();\n    }\n\n    this.pass = true;\n    return res;\n}\n\nStripBOMWrapper.prototype.end = function() {\n    return this.decoder.end();\n}\n\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return -1;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// UTF-8 replacement characters ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd'.repeat(p);\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd'.repeat(p + 1);\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd'.repeat(p + 2);\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character for each buffered byte of a (partial)\n// character needs to be added to the output.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd'.repeat(this.lastTotal - this.lastNeed);\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","\"use strict\";\nvar Buffer = require(\"buffer\").Buffer;\n\n// Export Node.js internal encodings.\n\nmodule.exports = {\n    // Encodings\n    utf8:   { type: \"_internal\", bomAware: true},\n    cesu8:  { type: \"_internal\", bomAware: true},\n    unicode11utf8: \"utf8\",\n\n    ucs2:   { type: \"_internal\", bomAware: true},\n    utf16le: \"ucs2\",\n\n    binary: { type: \"_internal\" },\n    base64: { type: \"_internal\" },\n    hex:    { type: \"_internal\" },\n\n    // Codec.\n    _internal: InternalCodec,\n};\n\n//------------------------------------------------------------------------------\n\nfunction InternalCodec(codecOptions, iconv) {\n    this.enc = codecOptions.encodingName;\n    this.bomAware = codecOptions.bomAware;\n\n    if (this.enc === \"base64\")\n        this.encoder = InternalEncoderBase64;\n    else if (this.enc === \"cesu8\") {\n        this.enc = \"utf8\"; // Use utf8 for decoding.\n        this.encoder = InternalEncoderCesu8;\n\n        // Add decoder for versions of Node not supporting CESU-8\n        if (new Buffer('eda0bdedb2a9', 'hex').toString() !== '💩') {\n            this.decoder = InternalDecoderCesu8;\n            this.defaultCharUnicode = iconv.defaultCharUnicode;\n        }\n    }\n}\n\nInternalCodec.prototype.encoder = InternalEncoder;\nInternalCodec.prototype.decoder = InternalDecoder;\n\n//------------------------------------------------------------------------------\n\n// We use node.js internal decoder. Its signature is the same as ours.\nvar StringDecoder = require('string_decoder').StringDecoder;\n\nif (!StringDecoder.prototype.end) // Node v0.8 doesn't have this method.\n    StringDecoder.prototype.end = function() {};\n\n\nfunction InternalDecoder(options, codec) {\n    StringDecoder.call(this, codec.enc);\n}\n\nInternalDecoder.prototype = StringDecoder.prototype;\n\n\n//------------------------------------------------------------------------------\n// Encoder is mostly trivial\n\nfunction InternalEncoder(options, codec) {\n    this.enc = codec.enc;\n}\n\nInternalEncoder.prototype.write = function(str) {\n    return new Buffer(str, this.enc);\n}\n\nInternalEncoder.prototype.end = function() {\n}\n\n\n//------------------------------------------------------------------------------\n// Except base64 encoder, which must keep its state.\n\nfunction InternalEncoderBase64(options, codec) {\n    this.prevStr = '';\n}\n\nInternalEncoderBase64.prototype.write = function(str) {\n    str = this.prevStr + str;\n    var completeQuads = str.length - (str.length % 4);\n    this.prevStr = str.slice(completeQuads);\n    str = str.slice(0, completeQuads);\n\n    return new Buffer(str, \"base64\");\n}\n\nInternalEncoderBase64.prototype.end = function() {\n    return new Buffer(this.prevStr, \"base64\");\n}\n\n\n//------------------------------------------------------------------------------\n// CESU-8 encoder is also special.\n\nfunction InternalEncoderCesu8(options, codec) {\n}\n\nInternalEncoderCesu8.prototype.write = function(str) {\n    var buf = new Buffer(str.length * 3), bufIdx = 0;\n    for (var i = 0; i < str.length; i++) {\n        var charCode = str.charCodeAt(i);\n        // Naive implementation, but it works because CESU-8 is especially easy\n        // to convert from UTF-16 (which all JS strings are encoded in).\n        if (charCode < 0x80)\n            buf[bufIdx++] = charCode;\n        else if (charCode < 0x800) {\n            buf[bufIdx++] = 0xC0 + (charCode >>> 6);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n        else { // charCode will always be < 0x10000 in javascript.\n            buf[bufIdx++] = 0xE0 + (charCode >>> 12);\n            buf[bufIdx++] = 0x80 + ((charCode >>> 6) & 0x3f);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n    }\n    return buf.slice(0, bufIdx);\n}\n\nInternalEncoderCesu8.prototype.end = function() {\n}\n\n//------------------------------------------------------------------------------\n// CESU-8 decoder is not implemented in Node v4.0+\n\nfunction InternalDecoderCesu8(options, codec) {\n    this.acc = 0;\n    this.contBytes = 0;\n    this.accBytes = 0;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n}\n\nInternalDecoderCesu8.prototype.write = function(buf) {\n    var acc = this.acc, contBytes = this.contBytes, accBytes = this.accBytes, \n        res = '';\n    for (var i = 0; i < buf.length; i++) {\n        var curByte = buf[i];\n        if ((curByte & 0xC0) !== 0x80) { // Leading byte\n            if (contBytes > 0) { // Previous code is invalid\n                res += this.defaultCharUnicode;\n                contBytes = 0;\n            }\n\n            if (curByte < 0x80) { // Single-byte code\n                res += String.fromCharCode(curByte);\n            } else if (curByte < 0xE0) { // Two-byte code\n                acc = curByte & 0x1F;\n                contBytes = 1; accBytes = 1;\n            } else if (curByte < 0xF0) { // Three-byte code\n                acc = curByte & 0x0F;\n                contBytes = 2; accBytes = 1;\n            } else { // Four or more are not supported for CESU-8.\n                res += this.defaultCharUnicode;\n            }\n        } else { // Continuation byte\n            if (contBytes > 0) { // We're waiting for it.\n                acc = (acc << 6) | (curByte & 0x3f);\n                contBytes--; accBytes++;\n                if (contBytes === 0) {\n                    // Check for overlong encoding, but support Modified UTF-8 (encoding NULL as C0 80)\n                    if (accBytes === 2 && acc < 0x80 && acc > 0)\n                        res += this.defaultCharUnicode;\n                    else if (accBytes === 3 && acc < 0x800)\n                        res += this.defaultCharUnicode;\n                    else\n                        // Actually add character.\n                        res += String.fromCharCode(acc);\n                }\n            } else { // Unexpected continuation byte\n                res += this.defaultCharUnicode;\n            }\n        }\n    }\n    this.acc = acc; this.contBytes = contBytes; this.accBytes = accBytes;\n    return res;\n}\n\nInternalDecoderCesu8.prototype.end = function() {\n    var res = 0;\n    if (this.contBytes > 0)\n        res += this.defaultCharUnicode;\n    return res;\n}\n","\"use strict\";\nvar Buffer = require(\"buffer\").Buffer;\n\n// Note: UTF16-LE (or UCS2) codec is Node.js native. See encodings/internal.js\n\n// == UTF16-BE codec. ==========================================================\n\nexports.utf16be = Utf16BECodec;\nfunction Utf16BECodec() {\n}\n\nUtf16BECodec.prototype.encoder = Utf16BEEncoder;\nUtf16BECodec.prototype.decoder = Utf16BEDecoder;\nUtf16BECodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf16BEEncoder() {\n}\n\nUtf16BEEncoder.prototype.write = function(str) {\n    var buf = new Buffer(str, 'ucs2');\n    for (var i = 0; i < buf.length; i += 2) {\n        var tmp = buf[i]; buf[i] = buf[i+1]; buf[i+1] = tmp;\n    }\n    return buf;\n}\n\nUtf16BEEncoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf16BEDecoder() {\n    this.overflowByte = -1;\n}\n\nUtf16BEDecoder.prototype.write = function(buf) {\n    if (buf.length == 0)\n        return '';\n\n    var buf2 = new Buffer(buf.length + 1),\n        i = 0, j = 0;\n\n    if (this.overflowByte !== -1) {\n        buf2[0] = buf[0];\n        buf2[1] = this.overflowByte;\n        i = 1; j = 2;\n    }\n\n    for (; i < buf.length-1; i += 2, j+= 2) {\n        buf2[j] = buf[i+1];\n        buf2[j+1] = buf[i];\n    }\n\n    this.overflowByte = (i == buf.length-1) ? buf[buf.length-1] : -1;\n\n    return buf2.slice(0, j).toString('ucs2');\n}\n\nUtf16BEDecoder.prototype.end = function() {\n}\n\n\n// == UTF-16 codec =============================================================\n// Decoder chooses automatically from UTF-16LE and UTF-16BE using BOM and space-based heuristic.\n// Defaults to UTF-16LE, as it's prevalent and default in Node.\n// http://en.wikipedia.org/wiki/UTF-16 and http://encoding.spec.whatwg.org/#utf-16le\n// Decoder default can be changed: iconv.decode(buf, 'utf16', {defaultEncoding: 'utf-16be'});\n\n// Encoder uses UTF-16LE and prepends BOM (which can be overridden with addBOM: false).\n\nexports.utf16 = Utf16Codec;\nfunction Utf16Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n}\n\nUtf16Codec.prototype.encoder = Utf16Encoder;\nUtf16Codec.prototype.decoder = Utf16Decoder;\n\n\n// -- Encoding (pass-through)\n\nfunction Utf16Encoder(options, codec) {\n    options = options || {};\n    if (options.addBOM === undefined)\n        options.addBOM = true;\n    this.encoder = codec.iconv.getEncoder('utf-16le', options);\n}\n\nUtf16Encoder.prototype.write = function(str) {\n    return this.encoder.write(str);\n}\n\nUtf16Encoder.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n// -- Decoding\n\nfunction Utf16Decoder(options, codec) {\n    this.decoder = null;\n    this.initialBytes = [];\n    this.initialBytesLen = 0;\n\n    this.options = options || {};\n    this.iconv = codec.iconv;\n}\n\nUtf16Decoder.prototype.write = function(buf) {\n    if (!this.decoder) {\n        // Codec is not chosen yet. Accumulate initial bytes.\n        this.initialBytes.push(buf);\n        this.initialBytesLen += buf.length;\n        \n        if (this.initialBytesLen < 16) // We need more bytes to use space heuristic (see below)\n            return '';\n\n        // We have enough bytes -> detect endianness.\n        var buf = Buffer.concat(this.initialBytes),\n            encoding = detectEncoding(buf, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n        this.initialBytes.length = this.initialBytesLen = 0;\n    }\n\n    return this.decoder.write(buf);\n}\n\nUtf16Decoder.prototype.end = function() {\n    if (!this.decoder) {\n        var buf = Buffer.concat(this.initialBytes),\n            encoding = detectEncoding(buf, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var res = this.decoder.write(buf),\n            trail = this.decoder.end();\n\n        return trail ? (res + trail) : res;\n    }\n    return this.decoder.end();\n}\n\nfunction detectEncoding(buf, defaultEncoding) {\n    var enc = defaultEncoding || 'utf-16le';\n\n    if (buf.length >= 2) {\n        // Check BOM.\n        if (buf[0] == 0xFE && buf[1] == 0xFF) // UTF-16BE BOM\n            enc = 'utf-16be';\n        else if (buf[0] == 0xFF && buf[1] == 0xFE) // UTF-16LE BOM\n            enc = 'utf-16le';\n        else {\n            // No BOM found. Try to deduce encoding from initial content.\n            // Most of the time, the content has ASCII chars (U+00**), but the opposite (U+**00) is uncommon.\n            // So, we count ASCII as if it was LE or BE, and decide from that.\n            var asciiCharsLE = 0, asciiCharsBE = 0, // Counts of chars in both positions\n                _len = Math.min(buf.length - (buf.length % 2), 64); // Len is always even.\n\n            for (var i = 0; i < _len; i += 2) {\n                if (buf[i] === 0 && buf[i+1] !== 0) asciiCharsBE++;\n                if (buf[i] !== 0 && buf[i+1] === 0) asciiCharsLE++;\n            }\n\n            if (asciiCharsBE > asciiCharsLE)\n                enc = 'utf-16be';\n            else if (asciiCharsBE < asciiCharsLE)\n                enc = 'utf-16le';\n        }\n    }\n\n    return enc;\n}\n\n\n","\"use strict\";\nvar Buffer = require(\"buffer\").Buffer;\n\n// UTF-7 codec, according to https://tools.ietf.org/html/rfc2152\n// See also below a UTF-7-IMAP codec, according to http://tools.ietf.org/html/rfc3501#section-5.1.3\n\nexports.utf7 = Utf7Codec;\nexports.unicode11utf7 = 'utf7'; // Alias UNICODE-1-1-UTF-7\nfunction Utf7Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7Codec.prototype.encoder = Utf7Encoder;\nUtf7Codec.prototype.decoder = Utf7Decoder;\nUtf7Codec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nvar nonDirectChars = /[^A-Za-z0-9'\\(\\),-\\.\\/:\\? \\n\\r\\t]+/g;\n\nfunction Utf7Encoder(options, codec) {\n    this.iconv = codec.iconv;\n}\n\nUtf7Encoder.prototype.write = function(str) {\n    // Naive implementation.\n    // Non-direct chars are encoded as \"+<base64>-\"; single \"+\" char is encoded as \"+-\".\n    return new Buffer(str.replace(nonDirectChars, function(chunk) {\n        return \"+\" + (chunk === '+' ? '' : \n            this.iconv.encode(chunk, 'utf16-be').toString('base64').replace(/=+$/, '')) \n            + \"-\";\n    }.bind(this)));\n}\n\nUtf7Encoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf7Decoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64Regex = /[A-Za-z0-9\\/+]/;\nvar base64Chars = [];\nfor (var i = 0; i < 256; i++)\n    base64Chars[i] = base64Regex.test(String.fromCharCode(i));\n\nvar plusChar = '+'.charCodeAt(0), \n    minusChar = '-'.charCodeAt(0),\n    andChar = '&'.charCodeAt(0);\n\nUtf7Decoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '+'\n            if (buf[i] == plusChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64Chars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) {// \"+-\" -> \"+\"\n                    res += \"+\";\n                } else {\n                    var b64str = base64Accum + buf.slice(lastI, i).toString();\n                    res += this.iconv.decode(new Buffer(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus is absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + buf.slice(lastI).toString();\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(new Buffer(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7Decoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(new Buffer(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n// UTF-7-IMAP codec.\n// RFC3501 Sec. 5.1.3 Modified UTF-7 (http://tools.ietf.org/html/rfc3501#section-5.1.3)\n// Differences:\n//  * Base64 part is started by \"&\" instead of \"+\"\n//  * Direct characters are 0x20-0x7E, except \"&\" (0x26)\n//  * In Base64, \",\" is used instead of \"/\"\n//  * Base64 must not be used to represent direct characters.\n//  * No implicit shift back from Base64 (should always end with '-')\n//  * String must end in non-shifted position.\n//  * \"-&\" while in base64 is not allowed.\n\n\nexports.utf7imap = Utf7IMAPCodec;\nfunction Utf7IMAPCodec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7IMAPCodec.prototype.encoder = Utf7IMAPEncoder;\nUtf7IMAPCodec.prototype.decoder = Utf7IMAPDecoder;\nUtf7IMAPCodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf7IMAPEncoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = new Buffer(6);\n    this.base64AccumIdx = 0;\n}\n\nUtf7IMAPEncoder.prototype.write = function(str) {\n    var inBase64 = this.inBase64,\n        base64Accum = this.base64Accum,\n        base64AccumIdx = this.base64AccumIdx,\n        buf = new Buffer(str.length*5 + 10), bufIdx = 0;\n\n    for (var i = 0; i < str.length; i++) {\n        var uChar = str.charCodeAt(i);\n        if (0x20 <= uChar && uChar <= 0x7E) { // Direct character or '&'.\n            if (inBase64) {\n                if (base64AccumIdx > 0) {\n                    bufIdx += buf.write(base64Accum.slice(0, base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n                    base64AccumIdx = 0;\n                }\n\n                buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n                inBase64 = false;\n            }\n\n            if (!inBase64) {\n                buf[bufIdx++] = uChar; // Write direct character\n\n                if (uChar === andChar)  // Ampersand -> '&-'\n                    buf[bufIdx++] = minusChar;\n            }\n\n        } else { // Non-direct character\n            if (!inBase64) {\n                buf[bufIdx++] = andChar; // Write '&', then go to base64 mode.\n                inBase64 = true;\n            }\n            if (inBase64) {\n                base64Accum[base64AccumIdx++] = uChar >> 8;\n                base64Accum[base64AccumIdx++] = uChar & 0xFF;\n\n                if (base64AccumIdx == base64Accum.length) {\n                    bufIdx += buf.write(base64Accum.toString('base64').replace(/\\//g, ','), bufIdx);\n                    base64AccumIdx = 0;\n                }\n            }\n        }\n    }\n\n    this.inBase64 = inBase64;\n    this.base64AccumIdx = base64AccumIdx;\n\n    return buf.slice(0, bufIdx);\n}\n\nUtf7IMAPEncoder.prototype.end = function() {\n    var buf = new Buffer(10), bufIdx = 0;\n    if (this.inBase64) {\n        if (this.base64AccumIdx > 0) {\n            bufIdx += buf.write(this.base64Accum.slice(0, this.base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n            this.base64AccumIdx = 0;\n        }\n\n        buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n        this.inBase64 = false;\n    }\n\n    return buf.slice(0, bufIdx);\n}\n\n\n// -- Decoding\n\nfunction Utf7IMAPDecoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64IMAPChars = base64Chars.slice();\nbase64IMAPChars[','.charCodeAt(0)] = true;\n\nUtf7IMAPDecoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n    // It is forgiving, closer to standard UTF-7 (for example, '-' is optional at the end).\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '&'\n            if (buf[i] == andChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64IMAPChars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) { // \"&-\" -> \"&\"\n                    res += \"&\";\n                } else {\n                    var b64str = base64Accum + buf.slice(lastI, i).toString().replace(/,/g, '/');\n                    res += this.iconv.decode(new Buffer(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus may be absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + buf.slice(lastI).toString().replace(/,/g, '/');\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(new Buffer(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7IMAPDecoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(new Buffer(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n","\"use strict\";\nvar Buffer = require(\"buffer\").Buffer;\n\n// Single-byte codec. Needs a 'chars' string parameter that contains 256 or 128 chars that\n// correspond to encoded bytes (if 128 - then lower half is ASCII). \n\nexports._sbcs = SBCSCodec;\nfunction SBCSCodec(codecOptions, iconv) {\n    if (!codecOptions)\n        throw new Error(\"SBCS codec is called without the data.\")\n    \n    // Prepare char buffer for decoding.\n    if (!codecOptions.chars || (codecOptions.chars.length !== 128 && codecOptions.chars.length !== 256))\n        throw new Error(\"Encoding '\"+codecOptions.type+\"' has incorrect 'chars' (must be of len 128 or 256)\");\n    \n    if (codecOptions.chars.length === 128) {\n        var asciiString = \"\";\n        for (var i = 0; i < 128; i++)\n            asciiString += String.fromCharCode(i);\n        codecOptions.chars = asciiString + codecOptions.chars;\n    }\n\n    this.decodeBuf = new Buffer(codecOptions.chars, 'ucs2');\n    \n    // Encoding buffer.\n    var encodeBuf = new Buffer(65536);\n    encodeBuf.fill(iconv.defaultCharSingleByte.charCodeAt(0));\n\n    for (var i = 0; i < codecOptions.chars.length; i++)\n        encodeBuf[codecOptions.chars.charCodeAt(i)] = i;\n\n    this.encodeBuf = encodeBuf;\n}\n\nSBCSCodec.prototype.encoder = SBCSEncoder;\nSBCSCodec.prototype.decoder = SBCSDecoder;\n\n\nfunction SBCSEncoder(options, codec) {\n    this.encodeBuf = codec.encodeBuf;\n}\n\nSBCSEncoder.prototype.write = function(str) {\n    var buf = new Buffer(str.length);\n    for (var i = 0; i < str.length; i++)\n        buf[i] = this.encodeBuf[str.charCodeAt(i)];\n    \n    return buf;\n}\n\nSBCSEncoder.prototype.end = function() {\n}\n\n\nfunction SBCSDecoder(options, codec) {\n    this.decodeBuf = codec.decodeBuf;\n}\n\nSBCSDecoder.prototype.write = function(buf) {\n    // Strings are immutable in JS -> we use ucs2 buffer to speed up computations.\n    var decodeBuf = this.decodeBuf;\n    var newBuf = new Buffer(buf.length*2);\n    var idx1 = 0, idx2 = 0;\n    for (var i = 0; i < buf.length; i++) {\n        idx1 = buf[i]*2; idx2 = i*2;\n        newBuf[idx2] = decodeBuf[idx1];\n        newBuf[idx2+1] = decodeBuf[idx1+1];\n    }\n    return newBuf.toString('ucs2');\n}\n\nSBCSDecoder.prototype.end = function() {\n}\n","\"use strict\";\n\n// Manually added data to be used by sbcs codec in addition to generated one.\n\nmodule.exports = {\n    // Not supported by iconv, not sure why.\n    \"10029\": \"maccenteuro\",\n    \"maccenteuro\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ\"\n    },\n\n    \"808\": \"cp808\",\n    \"ibm808\": \"cp808\",\n    \"cp808\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№€■ \"\n    },\n\n    // Aliases of generated encodings.\n    \"ascii8bit\": \"ascii\",\n    \"usascii\": \"ascii\",\n    \"ansix34\": \"ascii\",\n    \"ansix341968\": \"ascii\",\n    \"ansix341986\": \"ascii\",\n    \"csascii\": \"ascii\",\n    \"cp367\": \"ascii\",\n    \"ibm367\": \"ascii\",\n    \"isoir6\": \"ascii\",\n    \"iso646us\": \"ascii\",\n    \"iso646irv\": \"ascii\",\n    \"us\": \"ascii\",\n\n    \"latin1\": \"iso88591\",\n    \"latin2\": \"iso88592\",\n    \"latin3\": \"iso88593\",\n    \"latin4\": \"iso88594\",\n    \"latin5\": \"iso88599\",\n    \"latin6\": \"iso885910\",\n    \"latin7\": \"iso885913\",\n    \"latin8\": \"iso885914\",\n    \"latin9\": \"iso885915\",\n    \"latin10\": \"iso885916\",\n\n    \"csisolatin1\": \"iso88591\",\n    \"csisolatin2\": \"iso88592\",\n    \"csisolatin3\": \"iso88593\",\n    \"csisolatin4\": \"iso88594\",\n    \"csisolatincyrillic\": \"iso88595\",\n    \"csisolatinarabic\": \"iso88596\",\n    \"csisolatingreek\" : \"iso88597\",\n    \"csisolatinhebrew\": \"iso88598\",\n    \"csisolatin5\": \"iso88599\",\n    \"csisolatin6\": \"iso885910\",\n\n    \"l1\": \"iso88591\",\n    \"l2\": \"iso88592\",\n    \"l3\": \"iso88593\",\n    \"l4\": \"iso88594\",\n    \"l5\": \"iso88599\",\n    \"l6\": \"iso885910\",\n    \"l7\": \"iso885913\",\n    \"l8\": \"iso885914\",\n    \"l9\": \"iso885915\",\n    \"l10\": \"iso885916\",\n\n    \"isoir14\": \"iso646jp\",\n    \"isoir57\": \"iso646cn\",\n    \"isoir100\": \"iso88591\",\n    \"isoir101\": \"iso88592\",\n    \"isoir109\": \"iso88593\",\n    \"isoir110\": \"iso88594\",\n    \"isoir144\": \"iso88595\",\n    \"isoir127\": \"iso88596\",\n    \"isoir126\": \"iso88597\",\n    \"isoir138\": \"iso88598\",\n    \"isoir148\": \"iso88599\",\n    \"isoir157\": \"iso885910\",\n    \"isoir166\": \"tis620\",\n    \"isoir179\": \"iso885913\",\n    \"isoir199\": \"iso885914\",\n    \"isoir203\": \"iso885915\",\n    \"isoir226\": \"iso885916\",\n\n    \"cp819\": \"iso88591\",\n    \"ibm819\": \"iso88591\",\n\n    \"cyrillic\": \"iso88595\",\n\n    \"arabic\": \"iso88596\",\n    \"arabic8\": \"iso88596\",\n    \"ecma114\": \"iso88596\",\n    \"asmo708\": \"iso88596\",\n\n    \"greek\" : \"iso88597\",\n    \"greek8\" : \"iso88597\",\n    \"ecma118\" : \"iso88597\",\n    \"elot928\" : \"iso88597\",\n\n    \"hebrew\": \"iso88598\",\n    \"hebrew8\": \"iso88598\",\n\n    \"turkish\": \"iso88599\",\n    \"turkish8\": \"iso88599\",\n\n    \"thai\": \"iso885911\",\n    \"thai8\": \"iso885911\",\n\n    \"celtic\": \"iso885914\",\n    \"celtic8\": \"iso885914\",\n    \"isoceltic\": \"iso885914\",\n\n    \"tis6200\": \"tis620\",\n    \"tis62025291\": \"tis620\",\n    \"tis62025330\": \"tis620\",\n\n    \"10000\": \"macroman\",\n    \"10006\": \"macgreek\",\n    \"10007\": \"maccyrillic\",\n    \"10079\": \"maciceland\",\n    \"10081\": \"macturkish\",\n\n    \"cspc8codepage437\": \"cp437\",\n    \"cspc775baltic\": \"cp775\",\n    \"cspc850multilingual\": \"cp850\",\n    \"cspcp852\": \"cp852\",\n    \"cspc862latinhebrew\": \"cp862\",\n    \"cpgr\": \"cp869\",\n\n    \"msee\": \"cp1250\",\n    \"mscyrl\": \"cp1251\",\n    \"msansi\": \"cp1252\",\n    \"msgreek\": \"cp1253\",\n    \"msturk\": \"cp1254\",\n    \"mshebr\": \"cp1255\",\n    \"msarab\": \"cp1256\",\n    \"winbaltrim\": \"cp1257\",\n\n    \"cp20866\": \"koi8r\",\n    \"20866\": \"koi8r\",\n    \"ibm878\": \"koi8r\",\n    \"cskoi8r\": \"koi8r\",\n\n    \"cp21866\": \"koi8u\",\n    \"21866\": \"koi8u\",\n    \"ibm1168\": \"koi8u\",\n\n    \"strk10482002\": \"rk1048\",\n\n    \"tcvn5712\": \"tcvn\",\n    \"tcvn57121\": \"tcvn\",\n\n    \"gb198880\": \"iso646cn\",\n    \"cn\": \"iso646cn\",\n\n    \"csiso14jisc6220ro\": \"iso646jp\",\n    \"jisc62201969ro\": \"iso646jp\",\n    \"jp\": \"iso646jp\",\n\n    \"cshproman8\": \"hproman8\",\n    \"r8\": \"hproman8\",\n    \"roman8\": \"hproman8\",\n    \"xroman8\": \"hproman8\",\n    \"ibm1051\": \"hproman8\",\n\n    \"mac\": \"macintosh\",\n    \"csmacintosh\": \"macintosh\",\n};\n\n","\"use strict\";\n\n// Generated data for sbcs codec. Don't edit manually. Regenerate using generation/gen-sbcs.js script.\nmodule.exports = {\n  \"437\": \"cp437\",\n  \"737\": \"cp737\",\n  \"775\": \"cp775\",\n  \"850\": \"cp850\",\n  \"852\": \"cp852\",\n  \"855\": \"cp855\",\n  \"856\": \"cp856\",\n  \"857\": \"cp857\",\n  \"858\": \"cp858\",\n  \"860\": \"cp860\",\n  \"861\": \"cp861\",\n  \"862\": \"cp862\",\n  \"863\": \"cp863\",\n  \"864\": \"cp864\",\n  \"865\": \"cp865\",\n  \"866\": \"cp866\",\n  \"869\": \"cp869\",\n  \"874\": \"windows874\",\n  \"922\": \"cp922\",\n  \"1046\": \"cp1046\",\n  \"1124\": \"cp1124\",\n  \"1125\": \"cp1125\",\n  \"1129\": \"cp1129\",\n  \"1133\": \"cp1133\",\n  \"1161\": \"cp1161\",\n  \"1162\": \"cp1162\",\n  \"1163\": \"cp1163\",\n  \"1250\": \"windows1250\",\n  \"1251\": \"windows1251\",\n  \"1252\": \"windows1252\",\n  \"1253\": \"windows1253\",\n  \"1254\": \"windows1254\",\n  \"1255\": \"windows1255\",\n  \"1256\": \"windows1256\",\n  \"1257\": \"windows1257\",\n  \"1258\": \"windows1258\",\n  \"28591\": \"iso88591\",\n  \"28592\": \"iso88592\",\n  \"28593\": \"iso88593\",\n  \"28594\": \"iso88594\",\n  \"28595\": \"iso88595\",\n  \"28596\": \"iso88596\",\n  \"28597\": \"iso88597\",\n  \"28598\": \"iso88598\",\n  \"28599\": \"iso88599\",\n  \"28600\": \"iso885910\",\n  \"28601\": \"iso885911\",\n  \"28603\": \"iso885913\",\n  \"28604\": \"iso885914\",\n  \"28605\": \"iso885915\",\n  \"28606\": \"iso885916\",\n  \"windows874\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€����…�����������‘’“”•–—�������� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"win874\": \"windows874\",\n  \"cp874\": \"windows874\",\n  \"windows1250\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚�„…†‡�‰Š‹ŚŤŽŹ�‘’“”•–—�™š›śťžź ˇ˘Ł¤Ą¦§¨©Ş«¬­®Ż°±˛ł´µ¶·¸ąş»Ľ˝ľżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\n  },\n  \"win1250\": \"windows1250\",\n  \"cp1250\": \"windows1250\",\n  \"windows1251\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊЌЋЏђ‘’“”•–—�™љ›њќћџ ЎўЈ¤Ґ¦§Ё©Є«¬­®Ї°±Ііґµ¶·ё№є»јЅѕїАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"win1251\": \"windows1251\",\n  \"cp1251\": \"windows1251\",\n  \"windows1252\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ�Ž��‘’“”•–—˜™š›œ�žŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"win1252\": \"windows1252\",\n  \"cp1252\": \"windows1252\",\n  \"windows1253\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡�‰�‹�����‘’“”•–—�™�›���� ΅Ά£¤¥¦§¨©�«¬­®―°±²³΄µ¶·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\n  },\n  \"win1253\": \"windows1253\",\n  \"cp1253\": \"windows1253\",\n  \"windows1254\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ����‘’“”•–—˜™š›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\n  },\n  \"win1254\": \"windows1254\",\n  \"cp1254\": \"windows1254\",\n  \"windows1255\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹�����‘’“”•–—˜™�›���� ¡¢£₪¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾¿ְֱֲֳִֵֶַָֹֺֻּֽ־ֿ׀ׁׂ׃װױײ׳״�������אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\n  },\n  \"win1255\": \"windows1255\",\n  \"cp1255\": \"windows1255\",\n  \"windows1256\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€پ‚ƒ„…†‡ˆ‰ٹ‹Œچژڈگ‘’“”•–—ک™ڑ›œ‌‍ں ،¢£¤¥¦§¨©ھ«¬­®¯°±²³´µ¶·¸¹؛»¼½¾؟ہءآأؤإئابةتثجحخدذرزسشصض×طظعغـفقكàلâمنهوçèéêëىيîïًٌٍَôُِ÷ّùْûü‎‏ے\"\n  },\n  \"win1256\": \"windows1256\",\n  \"cp1256\": \"windows1256\",\n  \"windows1257\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚�„…†‡�‰�‹�¨ˇ¸�‘’“”•–—�™�›�¯˛� �¢£¤�¦§Ø©Ŗ«¬­®Æ°±²³´µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž˙\"\n  },\n  \"win1257\": \"windows1257\",\n  \"cp1257\": \"windows1257\",\n  \"windows1258\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹Œ����‘’“”•–—˜™�›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"win1258\": \"windows1258\",\n  \"cp1258\": \"windows1258\",\n  \"iso88591\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"cp28591\": \"iso88591\",\n  \"iso88592\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ą˘Ł¤ĽŚ§¨ŠŞŤŹ­ŽŻ°ą˛ł´ľśˇ¸šşťź˝žżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\n  },\n  \"cp28592\": \"iso88592\",\n  \"iso88593\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ħ˘£¤�Ĥ§¨İŞĞĴ­�Ż°ħ²³´µĥ·¸ışğĵ½�żÀÁÂ�ÄĊĈÇÈÉÊËÌÍÎÏ�ÑÒÓÔĠÖ×ĜÙÚÛÜŬŜßàáâ�äċĉçèéêëìíîï�ñòóôġö÷ĝùúûüŭŝ˙\"\n  },\n  \"cp28593\": \"iso88593\",\n  \"iso88594\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄĸŖ¤ĨĻ§¨ŠĒĢŦ­Ž¯°ą˛ŗ´ĩļˇ¸šēģŧŊžŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎĪĐŅŌĶÔÕÖ×ØŲÚÛÜŨŪßāáâãäåæįčéęëėíîīđņōķôõö÷øųúûüũū˙\"\n  },\n  \"cp28594\": \"iso88594\",\n  \"iso88595\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ЁЂЃЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђѓєѕіїјљњћќ§ўџ\"\n  },\n  \"cp28595\": \"iso88595\",\n  \"iso88596\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ���¤�������،­�������������؛���؟�ءآأؤإئابةتثجحخدذرزسشصضطظعغ�����ـفقكلمنهوىيًٌٍَُِّْ�������������\"\n  },\n  \"cp28596\": \"iso88596\",\n  \"iso88597\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ‘’£€₯¦§¨©ͺ«¬­�―°±²³΄΅Ά·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\n  },\n  \"cp28597\": \"iso88597\",\n  \"iso88598\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" �¢£¤¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾��������������������������������‗אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\n  },\n  \"cp28598\": \"iso88598\",\n  \"iso88599\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\n  },\n  \"cp28599\": \"iso88599\",\n  \"iso885910\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄĒĢĪĨĶ§ĻĐŠŦŽ­ŪŊ°ąēģīĩķ·ļđšŧž―ūŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎÏÐŅŌÓÔÕÖŨØŲÚÛÜÝÞßāáâãäåæįčéęëėíîïðņōóôõöũøųúûüýþĸ\"\n  },\n  \"cp28600\": \"iso885910\",\n  \"iso885911\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"cp28601\": \"iso885911\",\n  \"iso885913\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ”¢£¤„¦§Ø©Ŗ«¬­®Æ°±²³“µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž’\"\n  },\n  \"cp28603\": \"iso885913\",\n  \"iso885914\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ḃḃ£ĊċḊ§Ẁ©ẂḋỲ­®ŸḞḟĠġṀṁ¶ṖẁṗẃṠỳẄẅṡÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŴÑÒÓÔÕÖṪØÙÚÛÜÝŶßàáâãäåæçèéêëìíîïŵñòóôõöṫøùúûüýŷÿ\"\n  },\n  \"cp28604\": \"iso885914\",\n  \"iso885915\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£€¥Š§š©ª«¬­®¯°±²³Žµ¶·ž¹º»ŒœŸ¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"cp28605\": \"iso885915\",\n  \"iso885916\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄąŁ€„Š§š©Ș«Ź­źŻ°±ČłŽ”¶·žčș»ŒœŸżÀÁÂĂÄĆÆÇÈÉÊËÌÍÎÏĐŃÒÓÔŐÖŚŰÙÚÛÜĘȚßàáâăäćæçèéêëìíîïđńòóôőöśűùúûüęțÿ\"\n  },\n  \"cp28606\": \"iso885916\",\n  \"cp437\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm437\": \"cp437\",\n  \"csibm437\": \"cp437\",\n  \"cp737\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩαβγδεζηθικλμνξοπρσςτυφχψ░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀ωάέήϊίόύϋώΆΈΉΊΌΎΏ±≥≤ΪΫ÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm737\": \"cp737\",\n  \"csibm737\": \"cp737\",\n  \"cp775\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ĆüéāäģåćłēŖŗīŹÄÅÉæÆōöĢ¢ŚśÖÜø£Ø×¤ĀĪóŻżź”¦©®¬½¼Ł«»░▒▓│┤ĄČĘĖ╣║╗╝ĮŠ┐└┴┬├─┼ŲŪ╚╔╩╦╠═╬Žąčęėįšųūž┘┌█▄▌▐▀ÓßŌŃõÕµńĶķĻļņĒŅ’­±“¾¶§÷„°∙·¹³²■ \"\n  },\n  \"ibm775\": \"cp775\",\n  \"csibm775\": \"cp775\",\n  \"cp850\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈıÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm850\": \"cp850\",\n  \"csibm850\": \"cp850\",\n  \"cp852\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäůćçłëŐőîŹÄĆÉĹĺôöĽľŚśÖÜŤťŁ×čáíóúĄąŽžĘę¬źČş«»░▒▓│┤ÁÂĚŞ╣║╗╝Żż┐└┴┬├─┼Ăă╚╔╩╦╠═╬¤đĐĎËďŇÍÎě┘┌█▄ŢŮ▀ÓßÔŃńňŠšŔÚŕŰýÝţ´­˝˛ˇ˘§÷¸°¨˙űŘř■ \"\n  },\n  \"ibm852\": \"cp852\",\n  \"csibm852\": \"cp852\",\n  \"cp855\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ђЂѓЃёЁєЄѕЅіІїЇјЈљЉњЊћЋќЌўЎџЏюЮъЪаАбБцЦдДеЕфФгГ«»░▒▓│┤хХиИ╣║╗╝йЙ┐└┴┬├─┼кК╚╔╩╦╠═╬¤лЛмМнНоОп┘┌█▄Пя▀ЯрРсСтТуУжЖвВьЬ№­ыЫзЗшШэЭщЩчЧ§■ \"\n  },\n  \"ibm855\": \"cp855\",\n  \"csibm855\": \"cp855\",\n  \"cp856\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת�£�×����������®¬½¼�«»░▒▓│┤���©╣║╗╝¢¥┐└┴┬├─┼��╚╔╩╦╠═╬¤���������┘┌█▄¦�▀������µ�������¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm856\": \"cp856\",\n  \"csibm856\": \"cp856\",\n  \"cp857\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîıÄÅÉæÆôöòûùİÖÜø£ØŞşáíóúñÑĞğ¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ºªÊËÈ�ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµ�×ÚÛÙìÿ¯´­±�¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm857\": \"cp857\",\n  \"csibm857\": \"cp857\",\n  \"cp858\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈ€ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm858\": \"cp858\",\n  \"csibm858\": \"cp858\",\n  \"cp860\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâãàÁçêÊèÍÔìÃÂÉÀÈôõòÚùÌÕÜ¢£Ù₧ÓáíóúñÑªº¿Ò¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm860\": \"cp860\",\n  \"csibm860\": \"cp860\",\n  \"cp861\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèÐðÞÄÅÉæÆôöþûÝýÖÜø£Ø₧ƒáíóúÁÍÓÚ¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm861\": \"cp861\",\n  \"csibm861\": \"cp861\",\n  \"cp862\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm862\": \"cp862\",\n  \"csibm862\": \"cp862\",\n  \"cp863\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâÂà¶çêëèïî‗À§ÉÈÊôËÏûù¤ÔÜ¢£ÙÛƒ¦´óú¨¸³¯Î⌐¬½¼¾«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm863\": \"cp863\",\n  \"csibm863\": \"cp863\",\n  \"cp864\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$٪&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~°·∙√▒─│┼┤┬├┴┐┌└┘β∞φ±½¼≈«»ﻷﻸ��ﻻﻼ� ­ﺂ£¤ﺄ��ﺎﺏﺕﺙ،ﺝﺡﺥ٠١٢٣٤٥٦٧٨٩ﻑ؛ﺱﺵﺹ؟¢ﺀﺁﺃﺅﻊﺋﺍﺑﺓﺗﺛﺟﺣﺧﺩﺫﺭﺯﺳﺷﺻﺿﻁﻅﻋﻏ¦¬÷×ﻉـﻓﻗﻛﻟﻣﻧﻫﻭﻯﻳﺽﻌﻎﻍﻡﹽّﻥﻩﻬﻰﻲﻐﻕﻵﻶﻝﻙﻱ■�\"\n  },\n  \"ibm864\": \"cp864\",\n  \"csibm864\": \"cp864\",\n  \"cp865\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø₧ƒáíóúñÑªº¿⌐¬½¼¡«¤░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm865\": \"cp865\",\n  \"csibm865\": \"cp865\",\n  \"cp866\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№¤■ \"\n  },\n  \"ibm866\": \"cp866\",\n  \"csibm866\": \"cp866\",\n  \"cp869\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"������Ά�·¬¦‘’Έ―ΉΊΪΌ��ΎΫ©Ώ²³ά£έήίϊΐόύΑΒΓΔΕΖΗ½ΘΙ«»░▒▓│┤ΚΛΜΝ╣║╗╝ΞΟ┐└┴┬├─┼ΠΡ╚╔╩╦╠═╬ΣΤΥΦΧΨΩαβγ┘┌█▄δε▀ζηθικλμνξοπρσςτ΄­±υφχ§ψ΅°¨ωϋΰώ■ \"\n  },\n  \"ibm869\": \"cp869\",\n  \"csibm869\": \"cp869\",\n  \"cp922\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®‾°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŠÑÒÓÔÕÖ×ØÙÚÛÜÝŽßàáâãäåæçèéêëìíîïšñòóôõö÷øùúûüýžÿ\"\n  },\n  \"ibm922\": \"cp922\",\n  \"csibm922\": \"cp922\",\n  \"cp1046\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ﺈ×÷ﹱ■│─┐┌└┘ﹹﹻﹽﹿﹷﺊﻰﻳﻲﻎﻏﻐﻶﻸﻺﻼ ¤ﺋﺑﺗﺛﺟﺣ،­ﺧﺳ٠١٢٣٤٥٦٧٨٩ﺷ؛ﺻﺿﻊ؟ﻋءآأؤإئابةتثجحخدذرزسشصضطﻇعغﻌﺂﺄﺎﻓـفقكلمنهوىيًٌٍَُِّْﻗﻛﻟﻵﻷﻹﻻﻣﻧﻬﻩ�\"\n  },\n  \"ibm1046\": \"cp1046\",\n  \"csibm1046\": \"cp1046\",\n  \"cp1124\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ЁЂҐЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђґєѕіїјљњћќ§ўџ\"\n  },\n  \"ibm1124\": \"cp1124\",\n  \"csibm1124\": \"cp1124\",\n  \"cp1125\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёҐґЄєІіЇї·√№¤■ \"\n  },\n  \"ibm1125\": \"cp1125\",\n  \"csibm1125\": \"cp1125\",\n  \"cp1129\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"ibm1129\": \"cp1129\",\n  \"csibm1129\": \"cp1129\",\n  \"cp1133\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ກຂຄງຈສຊຍດຕຖທນບປຜຝພຟມຢຣລວຫອຮ���ຯະາຳິີຶືຸູຼັົຽ���ເແໂໃໄ່້໊໋໌ໍໆ�ໜໝ₭����������������໐໑໒໓໔໕໖໗໘໙��¢¬¦�\"\n  },\n  \"ibm1133\": \"cp1133\",\n  \"csibm1133\": \"cp1133\",\n  \"cp1161\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"��������������������������������่กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู้๊๋€฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛¢¬¦ \"\n  },\n  \"ibm1161\": \"cp1161\",\n  \"csibm1161\": \"cp1161\",\n  \"cp1162\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€…‘’“”•–— กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"ibm1162\": \"cp1162\",\n  \"csibm1162\": \"cp1162\",\n  \"cp1163\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£€¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"ibm1163\": \"cp1163\",\n  \"csibm1163\": \"cp1163\",\n  \"maccroatian\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊�©⁄¤‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ\"\n  },\n  \"maccyrillic\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°¢£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµ∂ЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\n  },\n  \"macgreek\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦­ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ�\"\n  },\n  \"maciceland\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macroman\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macromania\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂŞ∞±≤≥¥µ∂∑∏π∫ªºΩăş¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›Ţţ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macthai\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"«»…“”�•‘’� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู﻿​–—฿เแโใไๅๆ็่้๊๋์ํ™๏๐๑๒๓๔๕๖๗๘๙®©����\"\n  },\n  \"macturkish\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙ�ˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macukraine\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\n  },\n  \"koi8r\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ё╓╔╕╖╗╘╙╚╛╜╝╞╟╠╡Ё╢╣╤╥╦╧╨╩╪╫╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8u\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґ╝╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪Ґ╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8ru\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґў╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪ҐЎ©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8t\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"қғ‚Ғ„…†‡�‰ҳ‹ҲҷҶ�Қ‘’“”•–—�™�›�����ӯӮё¤ӣ¦§���«¬­®�°±²Ё�Ӣ¶·�№�»���©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"armscii8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" �և։)(»«—.՝,-֊…՜՛՞ԱաԲբԳգԴդԵեԶզԷէԸըԹթԺժԻիԼլԽխԾծԿկՀհՁձՂղՃճՄմՅյՆնՇշՈոՉչՊպՋջՌռՍսՎվՏտՐրՑցՒւՓփՔքՕօՖֆ՚�\"\n  },\n  \"rk1048\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊҚҺЏђ‘’“”•–—�™љ›њқһџ ҰұӘ¤Ө¦§Ё©Ғ«¬­®Ү°±Ііөµ¶·ё№ғ»әҢңүАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"tcvn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000ÚỤ\\u0003ỪỬỮ\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010ỨỰỲỶỸÝỴ\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ÀẢÃÁẠẶẬÈẺẼÉẸỆÌỈĨÍỊÒỎÕÓỌỘỜỞỠỚỢÙỦŨ ĂÂÊÔƠƯĐăâêôơưđẶ̀̀̉̃́àảãáạẲằẳẵắẴẮẦẨẪẤỀặầẩẫấậèỂẻẽéẹềểễếệìỉỄẾỒĩíịòỔỏõóọồổỗốộờởỡớợùỖủũúụừửữứựỳỷỹýỵỐ\"\n  },\n  \"georgianacademy\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზთიკლმნოპჟრსტუფქღყშჩცძწჭხჯჰჱჲჳჴჵჶçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"georgianps\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზჱთიკლმნჲოპჟრსტჳუფქღყშჩცძწჭხჴჯჰჵæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"pt154\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ҖҒӮғ„…ҶҮҲүҠӢҢҚҺҸҗ‘’“”•–—ҳҷҡӣңқһҹ ЎўЈӨҘҰ§Ё©Ә«¬ӯ®Ҝ°ұІіҙө¶·ё№ә»јҪҫҝАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"viscii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001Ẳ\\u0003\\u0004ẴẪ\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013Ỷ\\u0015\\u0016\\u0017\\u0018Ỹ\\u001a\\u001b\\u001c\\u001dỴ\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ẠẮẰẶẤẦẨẬẼẸẾỀỂỄỆỐỒỔỖỘỢỚỜỞỊỎỌỈỦŨỤỲÕắằặấầẩậẽẹếềểễệốồổỗỠƠộờởịỰỨỪỬơớƯÀÁÂÃẢĂẳẵÈÉÊẺÌÍĨỳĐứÒÓÔạỷừửÙÚỹỵÝỡưàáâãảăữẫèéêẻìíĩỉđựòóôõỏọụùúũủýợỮ\"\n  },\n  \"iso646cn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#¥%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"iso646jp\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[¥]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"hproman8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ÀÂÈÊËÎÏ´ˋˆ¨˜ÙÛ₤¯Ýý°ÇçÑñ¡¿¤£¥§ƒ¢âêôûáéóúàèòùäëöüÅîØÆåíøæÄìÖÜÉïßÔÁÃãÐðÍÌÓÒÕõŠšÚŸÿÞþ·µ¶¾—¼½ªº«■»±�\"\n  },\n  \"macintosh\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"ascii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"tis620\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"���������������������������������กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  }\n}","\"use strict\";\nvar Buffer = require(\"buffer\").Buffer;\n\n// Multibyte codec. In this scheme, a character is represented by 1 or more bytes.\n// Our codec supports UTF-16 surrogates, extensions for GB18030 and unicode sequences.\n// To save memory and loading time, we read table files only when requested.\n\nexports._dbcs = DBCSCodec;\n\nvar UNASSIGNED = -1,\n    GB18030_CODE = -2,\n    SEQ_START  = -10,\n    NODE_START = -1000,\n    UNASSIGNED_NODE = new Array(0x100),\n    DEF_CHAR = -1;\n\nfor (var i = 0; i < 0x100; i++)\n    UNASSIGNED_NODE[i] = UNASSIGNED;\n\n\n// Class DBCSCodec reads and initializes mapping tables.\nfunction DBCSCodec(codecOptions, iconv) {\n    this.encodingName = codecOptions.encodingName;\n    if (!codecOptions)\n        throw new Error(\"DBCS codec is called without the data.\")\n    if (!codecOptions.table)\n        throw new Error(\"Encoding '\" + this.encodingName + \"' has no data.\");\n\n    // Load tables.\n    var mappingTable = codecOptions.table();\n\n\n    // Decode tables: MBCS -> Unicode.\n\n    // decodeTables is a trie, encoded as an array of arrays of integers. Internal arrays are trie nodes and all have len = 256.\n    // Trie root is decodeTables[0].\n    // Values: >=  0 -> unicode character code. can be > 0xFFFF\n    //         == UNASSIGNED -> unknown/unassigned sequence.\n    //         == GB18030_CODE -> this is the end of a GB18030 4-byte sequence.\n    //         <= NODE_START -> index of the next node in our trie to process next byte.\n    //         <= SEQ_START  -> index of the start of a character code sequence, in decodeTableSeq.\n    this.decodeTables = [];\n    this.decodeTables[0] = UNASSIGNED_NODE.slice(0); // Create root node.\n\n    // Sometimes a MBCS char corresponds to a sequence of unicode chars. We store them as arrays of integers here. \n    this.decodeTableSeq = [];\n\n    // Actual mapping tables consist of chunks. Use them to fill up decode tables.\n    for (var i = 0; i < mappingTable.length; i++)\n        this._addDecodeChunk(mappingTable[i]);\n\n    this.defaultCharUnicode = iconv.defaultCharUnicode;\n\n    \n    // Encode tables: Unicode -> DBCS.\n\n    // `encodeTable` is array mapping from unicode char to encoded char. All its values are integers for performance.\n    // Because it can be sparse, it is represented as array of buckets by 256 chars each. Bucket can be null.\n    // Values: >=  0 -> it is a normal char. Write the value (if <=256 then 1 byte, if <=65536 then 2 bytes, etc.).\n    //         == UNASSIGNED -> no conversion found. Output a default char.\n    //         <= SEQ_START  -> it's an index in encodeTableSeq, see below. The character starts a sequence.\n    this.encodeTable = [];\n    \n    // `encodeTableSeq` is used when a sequence of unicode characters is encoded as a single code. We use a tree of\n    // objects where keys correspond to characters in sequence and leafs are the encoded dbcs values. A special DEF_CHAR key\n    // means end of sequence (needed when one sequence is a strict subsequence of another).\n    // Objects are kept separately from encodeTable to increase performance.\n    this.encodeTableSeq = [];\n\n    // Some chars can be decoded, but need not be encoded.\n    var skipEncodeChars = {};\n    if (codecOptions.encodeSkipVals)\n        for (var i = 0; i < codecOptions.encodeSkipVals.length; i++) {\n            var val = codecOptions.encodeSkipVals[i];\n            if (typeof val === 'number')\n                skipEncodeChars[val] = true;\n            else\n                for (var j = val.from; j <= val.to; j++)\n                    skipEncodeChars[j] = true;\n        }\n        \n    // Use decode trie to recursively fill out encode tables.\n    this._fillEncodeTable(0, 0, skipEncodeChars);\n\n    // Add more encoding pairs when needed.\n    if (codecOptions.encodeAdd) {\n        for (var uChar in codecOptions.encodeAdd)\n            if (Object.prototype.hasOwnProperty.call(codecOptions.encodeAdd, uChar))\n                this._setEncodeChar(uChar.charCodeAt(0), codecOptions.encodeAdd[uChar]);\n    }\n\n    this.defCharSB  = this.encodeTable[0][iconv.defaultCharSingleByte.charCodeAt(0)];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = this.encodeTable[0]['?'];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = \"?\".charCodeAt(0);\n\n\n    // Load & create GB18030 tables when needed.\n    if (typeof codecOptions.gb18030 === 'function') {\n        this.gb18030 = codecOptions.gb18030(); // Load GB18030 ranges.\n\n        // Add GB18030 decode tables.\n        var thirdByteNodeIdx = this.decodeTables.length;\n        var thirdByteNode = this.decodeTables[thirdByteNodeIdx] = UNASSIGNED_NODE.slice(0);\n\n        var fourthByteNodeIdx = this.decodeTables.length;\n        var fourthByteNode = this.decodeTables[fourthByteNodeIdx] = UNASSIGNED_NODE.slice(0);\n\n        for (var i = 0x81; i <= 0xFE; i++) {\n            var secondByteNodeIdx = NODE_START - this.decodeTables[0][i];\n            var secondByteNode = this.decodeTables[secondByteNodeIdx];\n            for (var j = 0x30; j <= 0x39; j++)\n                secondByteNode[j] = NODE_START - thirdByteNodeIdx;\n        }\n        for (var i = 0x81; i <= 0xFE; i++)\n            thirdByteNode[i] = NODE_START - fourthByteNodeIdx;\n        for (var i = 0x30; i <= 0x39; i++)\n            fourthByteNode[i] = GB18030_CODE\n    }        \n}\n\nDBCSCodec.prototype.encoder = DBCSEncoder;\nDBCSCodec.prototype.decoder = DBCSDecoder;\n\n// Decoder helpers\nDBCSCodec.prototype._getDecodeTrieNode = function(addr) {\n    var bytes = [];\n    for (; addr > 0; addr >>= 8)\n        bytes.push(addr & 0xFF);\n    if (bytes.length == 0)\n        bytes.push(0);\n\n    var node = this.decodeTables[0];\n    for (var i = bytes.length-1; i > 0; i--) { // Traverse nodes deeper into the trie.\n        var val = node[bytes[i]];\n\n        if (val == UNASSIGNED) { // Create new node.\n            node[bytes[i]] = NODE_START - this.decodeTables.length;\n            this.decodeTables.push(node = UNASSIGNED_NODE.slice(0));\n        }\n        else if (val <= NODE_START) { // Existing node.\n            node = this.decodeTables[NODE_START - val];\n        }\n        else\n            throw new Error(\"Overwrite byte in \" + this.encodingName + \", addr: \" + addr.toString(16));\n    }\n    return node;\n}\n\n\nDBCSCodec.prototype._addDecodeChunk = function(chunk) {\n    // First element of chunk is the hex mbcs code where we start.\n    var curAddr = parseInt(chunk[0], 16);\n\n    // Choose the decoding node where we'll write our chars.\n    var writeTable = this._getDecodeTrieNode(curAddr);\n    curAddr = curAddr & 0xFF;\n\n    // Write all other elements of the chunk to the table.\n    for (var k = 1; k < chunk.length; k++) {\n        var part = chunk[k];\n        if (typeof part === \"string\") { // String, write as-is.\n            for (var l = 0; l < part.length;) {\n                var code = part.charCodeAt(l++);\n                if (0xD800 <= code && code < 0xDC00) { // Decode surrogate\n                    var codeTrail = part.charCodeAt(l++);\n                    if (0xDC00 <= codeTrail && codeTrail < 0xE000)\n                        writeTable[curAddr++] = 0x10000 + (code - 0xD800) * 0x400 + (codeTrail - 0xDC00);\n                    else\n                        throw new Error(\"Incorrect surrogate pair in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n                }\n                else if (0x0FF0 < code && code <= 0x0FFF) { // Character sequence (our own encoding used)\n                    var len = 0xFFF - code + 2;\n                    var seq = [];\n                    for (var m = 0; m < len; m++)\n                        seq.push(part.charCodeAt(l++)); // Simple variation: don't support surrogates or subsequences in seq.\n\n                    writeTable[curAddr++] = SEQ_START - this.decodeTableSeq.length;\n                    this.decodeTableSeq.push(seq);\n                }\n                else\n                    writeTable[curAddr++] = code; // Basic char\n            }\n        } \n        else if (typeof part === \"number\") { // Integer, meaning increasing sequence starting with prev character.\n            var charCode = writeTable[curAddr - 1] + 1;\n            for (var l = 0; l < part; l++)\n                writeTable[curAddr++] = charCode++;\n        }\n        else\n            throw new Error(\"Incorrect type '\" + typeof part + \"' given in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n    }\n    if (curAddr > 0xFF)\n        throw new Error(\"Incorrect chunk in \"  + this.encodingName + \" at addr \" + chunk[0] + \": too long\" + curAddr);\n}\n\n// Encoder helpers\nDBCSCodec.prototype._getEncodeBucket = function(uCode) {\n    var high = uCode >> 8; // This could be > 0xFF because of astral characters.\n    if (this.encodeTable[high] === undefined)\n        this.encodeTable[high] = UNASSIGNED_NODE.slice(0); // Create bucket on demand.\n    return this.encodeTable[high];\n}\n\nDBCSCodec.prototype._setEncodeChar = function(uCode, dbcsCode) {\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n    if (bucket[low] <= SEQ_START)\n        this.encodeTableSeq[SEQ_START-bucket[low]][DEF_CHAR] = dbcsCode; // There's already a sequence, set a single-char subsequence of it.\n    else if (bucket[low] == UNASSIGNED)\n        bucket[low] = dbcsCode;\n}\n\nDBCSCodec.prototype._setEncodeSequence = function(seq, dbcsCode) {\n    \n    // Get the root of character tree according to first character of the sequence.\n    var uCode = seq[0];\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n\n    var node;\n    if (bucket[low] <= SEQ_START) {\n        // There's already a sequence with  - use it.\n        node = this.encodeTableSeq[SEQ_START-bucket[low]];\n    }\n    else {\n        // There was no sequence object - allocate a new one.\n        node = {};\n        if (bucket[low] !== UNASSIGNED) node[DEF_CHAR] = bucket[low]; // If a char was set before - make it a single-char subsequence.\n        bucket[low] = SEQ_START - this.encodeTableSeq.length;\n        this.encodeTableSeq.push(node);\n    }\n\n    // Traverse the character tree, allocating new nodes as needed.\n    for (var j = 1; j < seq.length-1; j++) {\n        var oldVal = node[uCode];\n        if (typeof oldVal === 'object')\n            node = oldVal;\n        else {\n            node = node[uCode] = {}\n            if (oldVal !== undefined)\n                node[DEF_CHAR] = oldVal\n        }\n    }\n\n    // Set the leaf to given dbcsCode.\n    uCode = seq[seq.length-1];\n    node[uCode] = dbcsCode;\n}\n\nDBCSCodec.prototype._fillEncodeTable = function(nodeIdx, prefix, skipEncodeChars) {\n    var node = this.decodeTables[nodeIdx];\n    for (var i = 0; i < 0x100; i++) {\n        var uCode = node[i];\n        var mbCode = prefix + i;\n        if (skipEncodeChars[mbCode])\n            continue;\n\n        if (uCode >= 0)\n            this._setEncodeChar(uCode, mbCode);\n        else if (uCode <= NODE_START)\n            this._fillEncodeTable(NODE_START - uCode, mbCode << 8, skipEncodeChars);\n        else if (uCode <= SEQ_START)\n            this._setEncodeSequence(this.decodeTableSeq[SEQ_START - uCode], mbCode);\n    }\n}\n\n\n\n// == Encoder ==================================================================\n\nfunction DBCSEncoder(options, codec) {\n    // Encoder state\n    this.leadSurrogate = -1;\n    this.seqObj = undefined;\n    \n    // Static data\n    this.encodeTable = codec.encodeTable;\n    this.encodeTableSeq = codec.encodeTableSeq;\n    this.defaultCharSingleByte = codec.defCharSB;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSEncoder.prototype.write = function(str) {\n    var newBuf = new Buffer(str.length * (this.gb18030 ? 4 : 3)), \n        leadSurrogate = this.leadSurrogate,\n        seqObj = this.seqObj, nextChar = -1,\n        i = 0, j = 0;\n\n    while (true) {\n        // 0. Get next character.\n        if (nextChar === -1) {\n            if (i == str.length) break;\n            var uCode = str.charCodeAt(i++);\n        }\n        else {\n            var uCode = nextChar;\n            nextChar = -1;    \n        }\n\n        // 1. Handle surrogates.\n        if (0xD800 <= uCode && uCode < 0xE000) { // Char is one of surrogates.\n            if (uCode < 0xDC00) { // We've got lead surrogate.\n                if (leadSurrogate === -1) {\n                    leadSurrogate = uCode;\n                    continue;\n                } else {\n                    leadSurrogate = uCode;\n                    // Double lead surrogate found.\n                    uCode = UNASSIGNED;\n                }\n            } else { // We've got trail surrogate.\n                if (leadSurrogate !== -1) {\n                    uCode = 0x10000 + (leadSurrogate - 0xD800) * 0x400 + (uCode - 0xDC00);\n                    leadSurrogate = -1;\n                } else {\n                    // Incomplete surrogate pair - only trail surrogate found.\n                    uCode = UNASSIGNED;\n                }\n                \n            }\n        }\n        else if (leadSurrogate !== -1) {\n            // Incomplete surrogate pair - only lead surrogate found.\n            nextChar = uCode; uCode = UNASSIGNED; // Write an error, then current char.\n            leadSurrogate = -1;\n        }\n\n        // 2. Convert uCode character.\n        var dbcsCode = UNASSIGNED;\n        if (seqObj !== undefined && uCode != UNASSIGNED) { // We are in the middle of the sequence\n            var resCode = seqObj[uCode];\n            if (typeof resCode === 'object') { // Sequence continues.\n                seqObj = resCode;\n                continue;\n\n            } else if (typeof resCode == 'number') { // Sequence finished. Write it.\n                dbcsCode = resCode;\n\n            } else if (resCode == undefined) { // Current character is not part of the sequence.\n\n                // Try default character for this sequence\n                resCode = seqObj[DEF_CHAR];\n                if (resCode !== undefined) {\n                    dbcsCode = resCode; // Found. Write it.\n                    nextChar = uCode; // Current character will be written too in the next iteration.\n\n                } else {\n                    // TODO: What if we have no default? (resCode == undefined)\n                    // Then, we should write first char of the sequence as-is and try the rest recursively.\n                    // Didn't do it for now because no encoding has this situation yet.\n                    // Currently, just skip the sequence and write current char.\n                }\n            }\n            seqObj = undefined;\n        }\n        else if (uCode >= 0) {  // Regular character\n            var subtable = this.encodeTable[uCode >> 8];\n            if (subtable !== undefined)\n                dbcsCode = subtable[uCode & 0xFF];\n            \n            if (dbcsCode <= SEQ_START) { // Sequence start\n                seqObj = this.encodeTableSeq[SEQ_START-dbcsCode];\n                continue;\n            }\n\n            if (dbcsCode == UNASSIGNED && this.gb18030) {\n                // Use GB18030 algorithm to find character(s) to write.\n                var idx = findIdx(this.gb18030.uChars, uCode);\n                if (idx != -1) {\n                    var dbcsCode = this.gb18030.gbChars[idx] + (uCode - this.gb18030.uChars[idx]);\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 12600); dbcsCode = dbcsCode % 12600;\n                    newBuf[j++] = 0x30 + Math.floor(dbcsCode / 1260); dbcsCode = dbcsCode % 1260;\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 10); dbcsCode = dbcsCode % 10;\n                    newBuf[j++] = 0x30 + dbcsCode;\n                    continue;\n                }\n            }\n        }\n\n        // 3. Write dbcsCode character.\n        if (dbcsCode === UNASSIGNED)\n            dbcsCode = this.defaultCharSingleByte;\n        \n        if (dbcsCode < 0x100) {\n            newBuf[j++] = dbcsCode;\n        }\n        else if (dbcsCode < 0x10000) {\n            newBuf[j++] = dbcsCode >> 8;   // high byte\n            newBuf[j++] = dbcsCode & 0xFF; // low byte\n        }\n        else {\n            newBuf[j++] = dbcsCode >> 16;\n            newBuf[j++] = (dbcsCode >> 8) & 0xFF;\n            newBuf[j++] = dbcsCode & 0xFF;\n        }\n    }\n\n    this.seqObj = seqObj;\n    this.leadSurrogate = leadSurrogate;\n    return newBuf.slice(0, j);\n}\n\nDBCSEncoder.prototype.end = function() {\n    if (this.leadSurrogate === -1 && this.seqObj === undefined)\n        return; // All clean. Most often case.\n\n    var newBuf = new Buffer(10), j = 0;\n\n    if (this.seqObj) { // We're in the sequence.\n        var dbcsCode = this.seqObj[DEF_CHAR];\n        if (dbcsCode !== undefined) { // Write beginning of the sequence.\n            if (dbcsCode < 0x100) {\n                newBuf[j++] = dbcsCode;\n            }\n            else {\n                newBuf[j++] = dbcsCode >> 8;   // high byte\n                newBuf[j++] = dbcsCode & 0xFF; // low byte\n            }\n        } else {\n            // See todo above.\n        }\n        this.seqObj = undefined;\n    }\n\n    if (this.leadSurrogate !== -1) {\n        // Incomplete surrogate pair - only lead surrogate found.\n        newBuf[j++] = this.defaultCharSingleByte;\n        this.leadSurrogate = -1;\n    }\n    \n    return newBuf.slice(0, j);\n}\n\n// Export for testing\nDBCSEncoder.prototype.findIdx = findIdx;\n\n\n// == Decoder ==================================================================\n\nfunction DBCSDecoder(options, codec) {\n    // Decoder state\n    this.nodeIdx = 0;\n    this.prevBuf = new Buffer(0);\n\n    // Static data\n    this.decodeTables = codec.decodeTables;\n    this.decodeTableSeq = codec.decodeTableSeq;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSDecoder.prototype.write = function(buf) {\n    var newBuf = new Buffer(buf.length*2),\n        nodeIdx = this.nodeIdx, \n        prevBuf = this.prevBuf, prevBufOffset = this.prevBuf.length,\n        seqStart = -this.prevBuf.length, // idx of the start of current parsed sequence.\n        uCode;\n\n    if (prevBufOffset > 0) // Make prev buf overlap a little to make it easier to slice later.\n        prevBuf = Buffer.concat([prevBuf, buf.slice(0, 10)]);\n    \n    for (var i = 0, j = 0; i < buf.length; i++) {\n        var curByte = (i >= 0) ? buf[i] : prevBuf[i + prevBufOffset];\n\n        // Lookup in current trie node.\n        var uCode = this.decodeTables[nodeIdx][curByte];\n\n        if (uCode >= 0) { \n            // Normal character, just use it.\n        }\n        else if (uCode === UNASSIGNED) { // Unknown char.\n            // TODO: Callback with seq.\n            //var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);\n            i = seqStart; // Try to parse again, after skipping first byte of the sequence ('i' will be incremented by 'for' cycle).\n            uCode = this.defaultCharUnicode.charCodeAt(0);\n        }\n        else if (uCode === GB18030_CODE) {\n            var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);\n            var ptr = (curSeq[0]-0x81)*12600 + (curSeq[1]-0x30)*1260 + (curSeq[2]-0x81)*10 + (curSeq[3]-0x30);\n            var idx = findIdx(this.gb18030.gbChars, ptr);\n            uCode = this.gb18030.uChars[idx] + ptr - this.gb18030.gbChars[idx];\n        }\n        else if (uCode <= NODE_START) { // Go to next trie node.\n            nodeIdx = NODE_START - uCode;\n            continue;\n        }\n        else if (uCode <= SEQ_START) { // Output a sequence of chars.\n            var seq = this.decodeTableSeq[SEQ_START - uCode];\n            for (var k = 0; k < seq.length - 1; k++) {\n                uCode = seq[k];\n                newBuf[j++] = uCode & 0xFF;\n                newBuf[j++] = uCode >> 8;\n            }\n            uCode = seq[seq.length-1];\n        }\n        else\n            throw new Error(\"iconv-lite internal error: invalid decoding table value \" + uCode + \" at \" + nodeIdx + \"/\" + curByte);\n\n        // Write the character to buffer, handling higher planes using surrogate pair.\n        if (uCode > 0xFFFF) { \n            uCode -= 0x10000;\n            var uCodeLead = 0xD800 + Math.floor(uCode / 0x400);\n            newBuf[j++] = uCodeLead & 0xFF;\n            newBuf[j++] = uCodeLead >> 8;\n\n            uCode = 0xDC00 + uCode % 0x400;\n        }\n        newBuf[j++] = uCode & 0xFF;\n        newBuf[j++] = uCode >> 8;\n\n        // Reset trie node.\n        nodeIdx = 0; seqStart = i+1;\n    }\n\n    this.nodeIdx = nodeIdx;\n    this.prevBuf = (seqStart >= 0) ? buf.slice(seqStart) : prevBuf.slice(seqStart + prevBufOffset);\n    return newBuf.slice(0, j).toString('ucs2');\n}\n\nDBCSDecoder.prototype.end = function() {\n    var ret = '';\n\n    // Try to parse all remaining chars.\n    while (this.prevBuf.length > 0) {\n        // Skip 1 character in the buffer.\n        ret += this.defaultCharUnicode;\n        var buf = this.prevBuf.slice(1);\n\n        // Parse remaining as usual.\n        this.prevBuf = new Buffer(0);\n        this.nodeIdx = 0;\n        if (buf.length > 0)\n            ret += this.write(buf);\n    }\n\n    this.nodeIdx = 0;\n    return ret;\n}\n\n// Binary search for GB18030. Returns largest i such that table[i] <= val.\nfunction findIdx(table, val) {\n    if (table[0] > val)\n        return -1;\n\n    var l = 0, r = table.length;\n    while (l < r-1) { // always table[l] <= val < table[r]\n        var mid = l + Math.floor((r-l+1)/2);\n        if (table[mid] <= val)\n            l = mid;\n        else\n            r = mid;\n    }\n    return l;\n}\n\n","\"use strict\";\n\n// Description of supported double byte encodings and aliases.\n// Tables are not require()-d until they are needed to speed up library load.\n// require()-s are direct to support Browserify.\n\nmodule.exports = {\n    \n    // == Japanese/ShiftJIS ====================================================\n    // All japanese encodings are based on JIS X set of standards:\n    // JIS X 0201 - Single-byte encoding of ASCII + ¥ + Kana chars at 0xA1-0xDF.\n    // JIS X 0208 - Main set of 6879 characters, placed in 94x94 plane, to be encoded by 2 bytes. \n    //              Has several variations in 1978, 1983, 1990 and 1997.\n    // JIS X 0212 - Supplementary plane of 6067 chars in 94x94 plane. 1990. Effectively dead.\n    // JIS X 0213 - Extension and modern replacement of 0208 and 0212. Total chars: 11233.\n    //              2 planes, first is superset of 0208, second - revised 0212.\n    //              Introduced in 2000, revised 2004. Some characters are in Unicode Plane 2 (0x2xxxx)\n\n    // Byte encodings are:\n    //  * Shift_JIS: Compatible with 0201, uses not defined chars in top half as lead bytes for double-byte\n    //               encoding of 0208. Lead byte ranges: 0x81-0x9F, 0xE0-0xEF; Trail byte ranges: 0x40-0x7E, 0x80-0x9E, 0x9F-0xFC.\n    //               Windows CP932 is a superset of Shift_JIS. Some companies added more chars, notably KDDI.\n    //  * EUC-JP:    Up to 3 bytes per character. Used mostly on *nixes.\n    //               0x00-0x7F       - lower part of 0201\n    //               0x8E, 0xA1-0xDF - upper part of 0201\n    //               (0xA1-0xFE)x2   - 0208 plane (94x94).\n    //               0x8F, (0xA1-0xFE)x2 - 0212 plane (94x94).\n    //  * JIS X 208: 7-bit, direct encoding of 0208. Byte ranges: 0x21-0x7E (94 values). Uncommon.\n    //               Used as-is in ISO2022 family.\n    //  * ISO2022-JP: Stateful encoding, with escape sequences to switch between ASCII, \n    //                0201-1976 Roman, 0208-1978, 0208-1983.\n    //  * ISO2022-JP-1: Adds esc seq for 0212-1990.\n    //  * ISO2022-JP-2: Adds esc seq for GB2313-1980, KSX1001-1992, ISO8859-1, ISO8859-7.\n    //  * ISO2022-JP-3: Adds esc seq for 0201-1976 Kana set, 0213-2000 Planes 1, 2.\n    //  * ISO2022-JP-2004: Adds 0213-2004 Plane 1.\n    //\n    // After JIS X 0213 appeared, Shift_JIS-2004, EUC-JISX0213 and ISO2022-JP-2004 followed, with just changing the planes.\n    //\n    // Overall, it seems that it's a mess :( http://www8.plala.or.jp/tkubota1/unicode-symbols-map2.html\n\n    'shiftjis': {\n        type: '_dbcs',\n        table: function() { return require('./tables/shiftjis.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n        encodeSkipVals: [{from: 0xED40, to: 0xF940}],\n    },\n    'csshiftjis': 'shiftjis',\n    'mskanji': 'shiftjis',\n    'sjis': 'shiftjis',\n    'windows31j': 'shiftjis',\n    'ms31j': 'shiftjis',\n    'xsjis': 'shiftjis',\n    'windows932': 'shiftjis',\n    'ms932': 'shiftjis',\n    '932': 'shiftjis',\n    'cp932': 'shiftjis',\n\n    'eucjp': {\n        type: '_dbcs',\n        table: function() { return require('./tables/eucjp.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n    },\n\n    // TODO: KDDI extension to Shift_JIS\n    // TODO: IBM CCSID 942 = CP932, but F0-F9 custom chars and other char changes.\n    // TODO: IBM CCSID 943 = Shift_JIS = CP932 with original Shift_JIS lower 128 chars.\n\n\n    // == Chinese/GBK ==========================================================\n    // http://en.wikipedia.org/wiki/GBK\n    // We mostly implement W3C recommendation: https://www.w3.org/TR/encoding/#gbk-encoder\n\n    // Oldest GB2312 (1981, ~7600 chars) is a subset of CP936\n    'gb2312': 'cp936',\n    'gb231280': 'cp936',\n    'gb23121980': 'cp936',\n    'csgb2312': 'cp936',\n    'csiso58gb231280': 'cp936',\n    'euccn': 'cp936',\n\n    // Microsoft's CP936 is a subset and approximation of GBK.\n    'windows936': 'cp936',\n    'ms936': 'cp936',\n    '936': 'cp936',\n    'cp936': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json') },\n    },\n\n    // GBK (~22000 chars) is an extension of CP936 that added user-mapped chars and some other.\n    'gbk': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n    },\n    'xgbk': 'gbk',\n    'isoir58': 'gbk',\n\n    // GB18030 is an algorithmic extension of GBK.\n    // Main source: https://www.w3.org/TR/encoding/#gbk-encoder\n    // http://icu-project.org/docs/papers/gb18030.html\n    // http://source.icu-project.org/repos/icu/data/trunk/charset/data/xml/gb-18030-2000.xml\n    // http://www.khngai.com/chinese/charmap/tblgbk.php?page=0\n    'gb18030': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n        gb18030: function() { return require('./tables/gb18030-ranges.json') },\n        encodeSkipVals: [0x80],\n        encodeAdd: {'€': 0xA2E3},\n    },\n\n    'chinese': 'gb18030',\n\n\n    // == Korean ===============================================================\n    // EUC-KR, KS_C_5601 and KS X 1001 are exactly the same.\n    'windows949': 'cp949',\n    'ms949': 'cp949',\n    '949': 'cp949',\n    'cp949': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp949.json') },\n    },\n\n    'cseuckr': 'cp949',\n    'csksc56011987': 'cp949',\n    'euckr': 'cp949',\n    'isoir149': 'cp949',\n    'korean': 'cp949',\n    'ksc56011987': 'cp949',\n    'ksc56011989': 'cp949',\n    'ksc5601': 'cp949',\n\n\n    // == Big5/Taiwan/Hong Kong ================================================\n    // There are lots of tables for Big5 and cp950. Please see the following links for history:\n    // http://moztw.org/docs/big5/  http://www.haible.de/bruno/charsets/conversion-tables/Big5.html\n    // Variations, in roughly number of defined chars:\n    //  * Windows CP 950: Microsoft variant of Big5. Canonical: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP950.TXT\n    //  * Windows CP 951: Microsoft variant of Big5-HKSCS-2001. Seems to be never public. http://me.abelcheung.org/articles/research/what-is-cp951/\n    //  * Big5-2003 (Taiwan standard) almost superset of cp950.\n    //  * Unicode-at-on (UAO) / Mozilla 1.8. Falling out of use on the Web. Not supported by other browsers.\n    //  * Big5-HKSCS (-2001, -2004, -2008). Hong Kong standard. \n    //    many unicode code points moved from PUA to Supplementary plane (U+2XXXX) over the years.\n    //    Plus, it has 4 combining sequences.\n    //    Seems that Mozilla refused to support it for 10 yrs. https://bugzilla.mozilla.org/show_bug.cgi?id=162431 https://bugzilla.mozilla.org/show_bug.cgi?id=310299\n    //    because big5-hkscs is the only encoding to include astral characters in non-algorithmic way.\n    //    Implementations are not consistent within browsers; sometimes labeled as just big5.\n    //    MS Internet Explorer switches from big5 to big5-hkscs when a patch applied.\n    //    Great discussion & recap of what's going on https://bugzilla.mozilla.org/show_bug.cgi?id=912470#c31\n    //    In the encoder, it might make sense to support encoding old PUA mappings to Big5 bytes seq-s.\n    //    Official spec: http://www.ogcio.gov.hk/en/business/tech_promotion/ccli/terms/doc/2003cmp_2008.txt\n    //                   http://www.ogcio.gov.hk/tc/business/tech_promotion/ccli/terms/doc/hkscs-2008-big5-iso.txt\n    // \n    // Current understanding of how to deal with Big5(-HKSCS) is in the Encoding Standard, http://encoding.spec.whatwg.org/#big5-encoder\n    // Unicode mapping (http://www.unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/OTHER/BIG5.TXT) is said to be wrong.\n\n    'windows950': 'cp950',\n    'ms950': 'cp950',\n    '950': 'cp950',\n    'cp950': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json') },\n    },\n\n    // Big5 has many variations and is an extension of cp950. We use Encoding Standard's as a consensus.\n    'big5': 'big5hkscs',\n    'big5hkscs': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json').concat(require('./tables/big5-added.json')) },\n        encodeSkipVals: [0xa2cc],\n    },\n\n    'cnbig5': 'big5hkscs',\n    'csbig5': 'big5hkscs',\n    'xxbig5': 'big5hkscs',\n};\n","\"use strict\";\n\n// Update this array if you add/rename/remove files in this directory.\n// We support Browserify by skipping automatic module discovery and requiring modules directly.\nvar modules = [\n    require(\"./internal\"),\n    require(\"./utf16\"),\n    require(\"./utf7\"),\n    require(\"./sbcs-codec\"),\n    require(\"./sbcs-data\"),\n    require(\"./sbcs-data-generated\"),\n    require(\"./dbcs-codec\"),\n    require(\"./dbcs-data\"),\n];\n\n// Put all encoding/alias/codec definitions to single object and export it. \nfor (var i = 0; i < modules.length; i++) {\n    var module = modules[i];\n    for (var enc in module)\n        if (Object.prototype.hasOwnProperty.call(module, enc))\n            exports[enc] = module[enc];\n}\n","\"use strict\";\n\nvar Buffer = require(\"buffer\").Buffer,\n    Transform = require(\"stream\").Transform;\n\n\n// == Exports ==================================================================\nmodule.exports = function(iconv) {\n    \n    // Additional Public API.\n    iconv.encodeStream = function encodeStream(encoding, options) {\n        return new IconvLiteEncoderStream(iconv.getEncoder(encoding, options), options);\n    }\n\n    iconv.decodeStream = function decodeStream(encoding, options) {\n        return new IconvLiteDecoderStream(iconv.getDecoder(encoding, options), options);\n    }\n\n    iconv.supportsStreams = true;\n\n\n    // Not published yet.\n    iconv.IconvLiteEncoderStream = IconvLiteEncoderStream;\n    iconv.IconvLiteDecoderStream = IconvLiteDecoderStream;\n    iconv._collect = IconvLiteDecoderStream.prototype.collect;\n};\n\n\n// == Encoder stream =======================================================\nfunction IconvLiteEncoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.decodeStrings = false; // We accept only strings, so we don't need to decode them.\n    Transform.call(this, options);\n}\n\nIconvLiteEncoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: { value: IconvLiteEncoderStream }\n});\n\nIconvLiteEncoderStream.prototype._transform = function(chunk, encoding, done) {\n    if (typeof chunk != 'string')\n        return done(new Error(\"Iconv encoding stream needs strings as its input.\"));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype.collect = function(cb) {\n    var chunks = [];\n    this.on('error', cb);\n    this.on('data', function(chunk) { chunks.push(chunk); });\n    this.on('end', function() {\n        cb(null, Buffer.concat(chunks));\n    });\n    return this;\n}\n\n\n// == Decoder stream =======================================================\nfunction IconvLiteDecoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.encoding = this.encoding = 'utf8'; // We output strings.\n    Transform.call(this, options);\n}\n\nIconvLiteDecoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: { value: IconvLiteDecoderStream }\n});\n\nIconvLiteDecoderStream.prototype._transform = function(chunk, encoding, done) {\n    if (!Buffer.isBuffer(chunk))\n        return done(new Error(\"Iconv decoding stream needs buffers as its input.\"));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res, this.encoding);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res, this.encoding);                \n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype.collect = function(cb) {\n    var res = '';\n    this.on('error', cb);\n    this.on('data', function(chunk) { res += chunk; });\n    this.on('end', function() {\n        cb(null, res);\n    });\n    return this;\n}\n\n","\"use strict\";\nvar Buffer = require(\"buffer\").Buffer;\n\n// == Extend Node primitives to use iconv-lite =================================\n\nmodule.exports = function (iconv) {\n    var original = undefined; // Place to keep original methods.\n\n    // Node authors rewrote Buffer internals to make it compatible with\n    // Uint8Array and we cannot patch key functions since then.\n    iconv.supportsNodeEncodingsExtension = !(new Buffer(0) instanceof Uint8Array);\n\n    iconv.extendNodeEncodings = function extendNodeEncodings() {\n        if (original) return;\n        original = {};\n\n        if (!iconv.supportsNodeEncodingsExtension) {\n            console.error(\"ACTION NEEDED: require('iconv-lite').extendNodeEncodings() is not supported in your version of Node\");\n            console.error(\"See more info at https://github.com/ashtuchkin/iconv-lite/wiki/Node-v4-compatibility\");\n            return;\n        }\n\n        var nodeNativeEncodings = {\n            'hex': true, 'utf8': true, 'utf-8': true, 'ascii': true, 'binary': true, \n            'base64': true, 'ucs2': true, 'ucs-2': true, 'utf16le': true, 'utf-16le': true,\n        };\n\n        Buffer.isNativeEncoding = function(enc) {\n            return enc && nodeNativeEncodings[enc.toLowerCase()];\n        }\n\n        // -- SlowBuffer -----------------------------------------------------------\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        original.SlowBufferToString = SlowBuffer.prototype.toString;\n        SlowBuffer.prototype.toString = function(encoding, start, end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferToString.call(this, encoding, start, end);\n\n            // Otherwise, use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start, end), encoding);\n        }\n\n        original.SlowBufferWrite = SlowBuffer.prototype.write;\n        SlowBuffer.prototype.write = function(string, offset, length, encoding) {\n            // Support both (string, offset, length, encoding)\n            // and the legacy (string, encoding, offset, length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferWrite.call(this, string, offset, length, encoding);\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise, use our encoding method.\n            var buf = iconv.encode(string, encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this, offset, 0, length);\n            return length;\n        }\n\n        // -- Buffer ---------------------------------------------------------------\n\n        original.BufferIsEncoding = Buffer.isEncoding;\n        Buffer.isEncoding = function(encoding) {\n            return Buffer.isNativeEncoding(encoding) || iconv.encodingExists(encoding);\n        }\n\n        original.BufferByteLength = Buffer.byteLength;\n        Buffer.byteLength = SlowBuffer.byteLength = function(str, encoding) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferByteLength.call(this, str, encoding);\n\n            // Slow, I know, but we don't have a better way yet.\n            return iconv.encode(str, encoding).length;\n        }\n\n        original.BufferToString = Buffer.prototype.toString;\n        Buffer.prototype.toString = function(encoding, start, end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferToString.call(this, encoding, start, end);\n\n            // Otherwise, use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start, end), encoding);\n        }\n\n        original.BufferWrite = Buffer.prototype.write;\n        Buffer.prototype.write = function(string, offset, length, encoding) {\n            var _offset = offset, _length = length, _encoding = encoding;\n            // Support both (string, offset, length, encoding)\n            // and the legacy (string, encoding, offset, length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferWrite.call(this, string, _offset, _length, _encoding);\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise, use our encoding method.\n            var buf = iconv.encode(string, encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this, offset, 0, length);\n            return length;\n\n            // TODO: Set _charsWritten.\n        }\n\n\n        // -- Readable -------------------------------------------------------------\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            original.ReadableSetEncoding = Readable.prototype.setEncoding;\n            Readable.prototype.setEncoding = function setEncoding(enc, options) {\n                // Use our own decoder, it has the same interface.\n                // We cannot use original function as it doesn't handle BOM-s.\n                this._readableState.decoder = iconv.getDecoder(enc, options);\n                this._readableState.encoding = enc;\n            }\n\n            Readable.prototype.collect = iconv._collect;\n        }\n    }\n\n    // Remove iconv-lite Node primitive extensions.\n    iconv.undoExtendNodeEncodings = function undoExtendNodeEncodings() {\n        if (!iconv.supportsNodeEncodingsExtension)\n            return;\n        if (!original)\n            throw new Error(\"require('iconv-lite').undoExtendNodeEncodings(): Nothing to undo; extendNodeEncodings() is not called.\")\n\n        delete Buffer.isNativeEncoding;\n\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        SlowBuffer.prototype.toString = original.SlowBufferToString;\n        SlowBuffer.prototype.write = original.SlowBufferWrite;\n\n        Buffer.isEncoding = original.BufferIsEncoding;\n        Buffer.byteLength = original.BufferByteLength;\n        Buffer.prototype.toString = original.BufferToString;\n        Buffer.prototype.write = original.BufferWrite;\n\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            Readable.prototype.setEncoding = original.ReadableSetEncoding;\n            delete Readable.prototype.collect;\n        }\n\n        original = undefined;\n    }\n}\n","\"use strict\";\n\n// Some environments don't have global Buffer (e.g. React Native).\n// Solution would be installing npm modules \"buffer\" and \"stream\" explicitly.\nvar Buffer = require(\"buffer\").Buffer;\n\nvar bomHandling = require(\"./bom-handling\"),\n    iconv = module.exports;\n\n// All codecs and aliases are kept here, keyed by encoding name/alias.\n// They are lazy loaded in `iconv.getCodec` from `encodings/index.js`.\niconv.encodings = null;\n\n// Characters emitted in case of error.\niconv.defaultCharUnicode = '�';\niconv.defaultCharSingleByte = '?';\n\n// Public API.\niconv.encode = function encode(str, encoding, options) {\n    str = \"\" + (str || \"\"); // Ensure string.\n\n    var encoder = iconv.getEncoder(encoding, options);\n\n    var res = encoder.write(str);\n    var trail = encoder.end();\n    \n    return (trail && trail.length > 0) ? Buffer.concat([res, trail]) : res;\n}\n\niconv.decode = function decode(buf, encoding, options) {\n    if (typeof buf === 'string') {\n        if (!iconv.skipDecodeWarning) {\n            console.error('Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding');\n            iconv.skipDecodeWarning = true;\n        }\n\n        buf = new Buffer(\"\" + (buf || \"\"), \"binary\"); // Ensure buffer.\n    }\n\n    var decoder = iconv.getDecoder(encoding, options);\n\n    var res = decoder.write(buf);\n    var trail = decoder.end();\n\n    return trail ? (res + trail) : res;\n}\n\niconv.encodingExists = function encodingExists(enc) {\n    try {\n        iconv.getCodec(enc);\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n\n// Legacy aliases to convert functions\niconv.toEncoding = iconv.encode;\niconv.fromEncoding = iconv.decode;\n\n// Search for a codec in iconv.encodings. Cache codec data in iconv._codecDataCache.\niconv._codecDataCache = {};\niconv.getCodec = function getCodec(encoding) {\n    if (!iconv.encodings)\n        iconv.encodings = require(\"../encodings\"); // Lazy load all encoding definitions.\n    \n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    var enc = (''+encoding).toLowerCase().replace(/[^0-9a-z]|:\\d{4}$/g, \"\");\n\n    // Traverse iconv.encodings to find actual codec.\n    var codecOptions = {};\n    while (true) {\n        var codec = iconv._codecDataCache[enc];\n        if (codec)\n            return codec;\n\n        var codecDef = iconv.encodings[enc];\n\n        switch (typeof codecDef) {\n            case \"string\": // Direct alias to other encoding.\n                enc = codecDef;\n                break;\n\n            case \"object\": // Alias with options. Can be layered.\n                for (var key in codecDef)\n                    codecOptions[key] = codecDef[key];\n\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n                \n                enc = codecDef.type;\n                break;\n\n            case \"function\": // Codec itself.\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n\n                // The codec function must load all tables and return object with .encoder and .decoder methods.\n                // It'll be called only once (for each different options object).\n                codec = new codecDef(codecOptions, iconv);\n\n                iconv._codecDataCache[codecOptions.encodingName] = codec; // Save it to be reused later.\n                return codec;\n\n            default:\n                throw new Error(\"Encoding not recognized: '\" + encoding + \"' (searched as: '\"+enc+\"')\");\n        }\n    }\n}\n\niconv.getEncoder = function getEncoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        encoder = new codec.encoder(options, codec);\n\n    if (codec.bomAware && options && options.addBOM)\n        encoder = new bomHandling.PrependBOM(encoder, options);\n\n    return encoder;\n}\n\niconv.getDecoder = function getDecoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        decoder = new codec.decoder(options, codec);\n\n    if (codec.bomAware && !(options && options.stripBOM === false))\n        decoder = new bomHandling.StripBOM(decoder, options);\n\n    return decoder;\n}\n\n\n// Load extensions in Node. All of them are omitted in Browserify build via 'browser' field in package.json.\nvar nodeVer = typeof process !== 'undefined' && process.versions && process.versions.node;\nif (nodeVer) {\n\n    // Load streaming support in Node v0.10+\n    var nodeVerArr = nodeVer.split(\".\").map(Number);\n    if (nodeVerArr[0] > 0 || nodeVerArr[1] >= 10) {\n        require(\"./streams\")(iconv);\n    }\n\n    // Load Node primitive extensions.\n    require(\"./extend-node\")(iconv);\n}\n\nif (\"Ā\" != \"\\u0100\") {\n    console.error(\"iconv-lite warning: javascript files use encoding different from utf-8. See https://github.com/ashtuchkin/iconv-lite/wiki/Javascript-source-file-encodings for more info.\");\n}\n","'use strict';\n\nvar iconv_package;\nvar Iconv;\n\ntry {\n    // this is to fool browserify so it doesn't try (in vain) to install iconv.\n    iconv_package = 'iconv';\n    Iconv = require(iconv_package).Iconv;\n} catch (E) {\n    // node-iconv not present\n}\n\nmodule.exports = Iconv;\n","'use strict';\n\nvar iconvLite = require('iconv-lite');\n// Load Iconv from an external file to be able to disable Iconv for webpack\n// Add /\\/iconv-loader$/ to webpack.IgnorePlugin to ignore it\nvar Iconv = require('./iconv-loader');\n\n// Expose to the world\nmodule.exports.convert = convert;\n\n/**\n * Convert encoding of an UTF-8 string or a buffer\n *\n * @param {String|Buffer} str String to be converted\n * @param {String} to Encoding to be converted to\n * @param {String} [from='UTF-8'] Encoding to be converted from\n * @param {Boolean} useLite If set to ture, force to use iconvLite\n * @return {Buffer} Encoded string\n */\nfunction convert(str, to, from, useLite) {\n    from = checkEncoding(from || 'UTF-8');\n    to = checkEncoding(to || 'UTF-8');\n    str = str || '';\n\n    var result;\n\n    if (from !== 'UTF-8' && typeof str === 'string') {\n        str = new Buffer(str, 'binary');\n    }\n\n    if (from === to) {\n        if (typeof str === 'string') {\n            result = new Buffer(str);\n        } else {\n            result = str;\n        }\n    } else if (Iconv && !useLite) {\n        try {\n            result = convertIconv(str, to, from);\n        } catch (E) {\n            console.error(E);\n            try {\n                result = convertIconvLite(str, to, from);\n            } catch (E) {\n                console.error(E);\n                result = str;\n            }\n        }\n    } else {\n        try {\n            result = convertIconvLite(str, to, from);\n        } catch (E) {\n            console.error(E);\n            result = str;\n        }\n    }\n\n\n    if (typeof result === 'string') {\n        result = new Buffer(result, 'utf-8');\n    }\n\n    return result;\n}\n\n/**\n * Convert encoding of a string with node-iconv (if available)\n *\n * @param {String|Buffer} str String to be converted\n * @param {String} to Encoding to be converted to\n * @param {String} [from='UTF-8'] Encoding to be converted from\n * @return {Buffer} Encoded string\n */\nfunction convertIconv(str, to, from) {\n    var response, iconv;\n    iconv = new Iconv(from, to + '//TRANSLIT//IGNORE');\n    response = iconv.convert(str);\n    return response.slice(0, response.length);\n}\n\n/**\n * Convert encoding of astring with iconv-lite\n *\n * @param {String|Buffer} str String to be converted\n * @param {String} to Encoding to be converted to\n * @param {String} [from='UTF-8'] Encoding to be converted from\n * @return {Buffer} Encoded string\n */\nfunction convertIconvLite(str, to, from) {\n    if (to === 'UTF-8') {\n        return iconvLite.decode(str, from);\n    } else if (from === 'UTF-8') {\n        return iconvLite.encode(str, to);\n    } else {\n        return iconvLite.encode(iconvLite.decode(str, from), to);\n    }\n}\n\n/**\n * Converts charset name if needed\n *\n * @param {String} name Character set\n * @return {String} Character set name\n */\nfunction checkEncoding(name) {\n    return (name || '').toString().trim().\n    replace(/^latin[\\-_]?(\\d+)$/i, 'ISO-8859-$1').\n    replace(/^win(?:dows)?[\\-_]?(\\d+)$/i, 'WINDOWS-$1').\n    replace(/^utf[\\-_]?(\\d+)$/i, 'UTF-$1').\n    replace(/^ks_c_5601\\-1987$/i, 'CP949').\n    replace(/^us[\\-_]?ascii$/i, 'ASCII').\n    toUpperCase();\n}\n","'use strict';\n\nvar isStream = module.exports = function (stream) {\n\treturn stream !== null && typeof stream === 'object' && typeof stream.pipe === 'function';\n};\n\nisStream.writable = function (stream) {\n\treturn isStream(stream) && stream.writable !== false && typeof stream._write === 'function' && typeof stream._writableState === 'object';\n};\n\nisStream.readable = function (stream) {\n\treturn isStream(stream) && stream.readable !== false && typeof stream._read === 'function' && typeof stream._readableState === 'object';\n};\n\nisStream.duplex = function (stream) {\n\treturn isStream.writable(stream) && isStream.readable(stream);\n};\n\nisStream.transform = function (stream) {\n\treturn isStream.duplex(stream) && typeof stream._transform === 'function' && typeof stream._transformState === 'object';\n};\n","\n/**\n * fetch-error.js\n *\n * FetchError interface for operational errors\n */\n\nmodule.exports = FetchError;\n\n/**\n * Create FetchError instance\n *\n * @param   String      message      Error message for human\n * @param   String      type         Error type for machine\n * @param   String      systemError  For Node.js system error\n * @return  FetchError\n */\nfunction FetchError(message, type, systemError) {\n\n\tthis.name = this.constructor.name;\n\tthis.message = message;\n\tthis.type = type;\n\n\t// when err.type is `system`, err.code contains system error code\n\tif (systemError) {\n\t\tthis.code = this.errno = systemError.code;\n\t}\n\n\t// hide custom error implementation details from end-users\n\tError.captureStackTrace(this, this.constructor);\n}\n\nrequire('util').inherits(FetchError, Error);\n","\n/**\n * body.js\n *\n * Body interface provides common methods for Request and Response\n */\n\nvar convert = require('encoding').convert;\nvar bodyStream = require('is-stream');\nvar PassThrough = require('stream').PassThrough;\nvar FetchError = require('./fetch-error');\n\nmodule.exports = Body;\n\n/**\n * Body class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Body(body, opts) {\n\n\topts = opts || {};\n\n\tthis.body = body;\n\tthis.bodyUsed = false;\n\tthis.size = opts.size || 0;\n\tthis.timeout = opts.timeout || 0;\n\tthis._raw = [];\n\tthis._abort = false;\n\n}\n\n/**\n * Decode response as json\n *\n * @return  Promise\n */\nBody.prototype.json = function() {\n\n\tvar self = this;\n\n\treturn this._decode().then(function(buffer) {\n\t\ttry {\n\t\t\treturn JSON.parse(buffer.toString());\n\t\t} catch (err) {\n\t\t\treturn Body.Promise.reject(new FetchError('invalid json response body at ' + self.url + ' reason: ' + err.message, 'invalid-json'));\n\t\t}\n\t});\n\n};\n\n/**\n * Decode response as text\n *\n * @return  Promise\n */\nBody.prototype.text = function() {\n\n\treturn this._decode().then(function(buffer) {\n\t\treturn buffer.toString();\n\t});\n\n};\n\n/**\n * Decode response as buffer (non-spec api)\n *\n * @return  Promise\n */\nBody.prototype.buffer = function() {\n\n\treturn this._decode();\n\n};\n\n/**\n * Decode buffers into utf-8 string\n *\n * @return  Promise\n */\nBody.prototype._decode = function() {\n\n\tvar self = this;\n\n\tif (this.bodyUsed) {\n\t\treturn Body.Promise.reject(new Error('body used already for: ' + this.url));\n\t}\n\n\tthis.bodyUsed = true;\n\tthis._bytes = 0;\n\tthis._abort = false;\n\tthis._raw = [];\n\n\treturn new Body.Promise(function(resolve, reject) {\n\t\tvar resTimeout;\n\n\t\t// body is string\n\t\tif (typeof self.body === 'string') {\n\t\t\tself._bytes = self.body.length;\n\t\t\tself._raw = [new Buffer(self.body)];\n\t\t\treturn resolve(self._convert());\n\t\t}\n\n\t\t// body is buffer\n\t\tif (self.body instanceof Buffer) {\n\t\t\tself._bytes = self.body.length;\n\t\t\tself._raw = [self.body];\n\t\t\treturn resolve(self._convert());\n\t\t}\n\n\t\t// allow timeout on slow response body\n\t\tif (self.timeout) {\n\t\t\tresTimeout = setTimeout(function() {\n\t\t\t\tself._abort = true;\n\t\t\t\treject(new FetchError('response timeout at ' + self.url + ' over limit: ' + self.timeout, 'body-timeout'));\n\t\t\t}, self.timeout);\n\t\t}\n\n\t\t// handle stream error, such as incorrect content-encoding\n\t\tself.body.on('error', function(err) {\n\t\t\treject(new FetchError('invalid response body at: ' + self.url + ' reason: ' + err.message, 'system', err));\n\t\t});\n\n\t\t// body is stream\n\t\tself.body.on('data', function(chunk) {\n\t\t\tif (self._abort || chunk === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (self.size && self._bytes + chunk.length > self.size) {\n\t\t\t\tself._abort = true;\n\t\t\t\treject(new FetchError('content size at ' + self.url + ' over limit: ' + self.size, 'max-size'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tself._bytes += chunk.length;\n\t\t\tself._raw.push(chunk);\n\t\t});\n\n\t\tself.body.on('end', function() {\n\t\t\tif (self._abort) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(resTimeout);\n\t\t\tresolve(self._convert());\n\t\t});\n\t});\n\n};\n\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   String  encoding  Target encoding\n * @return  String\n */\nBody.prototype._convert = function(encoding) {\n\n\tencoding = encoding || 'utf-8';\n\n\tvar ct = this.headers.get('content-type');\n\tvar charset = 'utf-8';\n\tvar res, str;\n\n\t// header\n\tif (ct) {\n\t\t// skip encoding detection altogether if not html/xml/plain text\n\t\tif (!/text\\/html|text\\/plain|\\+xml|\\/xml/i.test(ct)) {\n\t\t\treturn Buffer.concat(this._raw);\n\t\t}\n\n\t\tres = /charset=([^;]*)/i.exec(ct);\n\t}\n\n\t// no charset in content type, peek at response body for at most 1024 bytes\n\tif (!res && this._raw.length > 0) {\n\t\tfor (var i = 0; i < this._raw.length; i++) {\n\t\t\tstr += this._raw[i].toString()\n\t\t\tif (str.length > 1024) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tstr = str.substr(0, 1024);\n\t}\n\n\t// html5\n\tif (!res && str) {\n\t\tres = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// html4\n\tif (!res && str) {\n\t\tres = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\n\t\tif (res) {\n\t\t\tres = /charset=(.*)/i.exec(res.pop());\n\t\t}\n\t}\n\n\t// xml\n\tif (!res && str) {\n\t\tres = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// found charset\n\tif (res) {\n\t\tcharset = res.pop();\n\n\t\t// prevent decode issues when sites use incorrect encoding\n\t\t// ref: https://hsivonen.fi/encoding-menu/\n\t\tif (charset === 'gb2312' || charset === 'gbk') {\n\t\t\tcharset = 'gb18030';\n\t\t}\n\t}\n\n\t// turn raw buffers into a single utf-8 buffer\n\treturn convert(\n\t\tBuffer.concat(this._raw)\n\t\t, encoding\n\t\t, charset\n\t);\n\n};\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\nBody.prototype._clone = function(instance) {\n\tvar p1, p2;\n\tvar body = instance.body;\n\n\t// don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif (bodyStream(body) && typeof body.getBoundary !== 'function') {\n\t\t// tee instance body\n\t\tp1 = new PassThrough();\n\t\tp2 = new PassThrough();\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// set instance body to teed body and return the other teed body\n\t\tinstance.body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n}\n\n// expose Promise\nBody.Promise = global.Promise;\n","\n/**\n * headers.js\n *\n * Headers class offers convenient helpers\n */\n\nmodule.exports = Headers;\n\n/**\n * Headers class\n *\n * @param   Object  headers  Response headers\n * @return  Void\n */\nfunction Headers(headers) {\n\n\tvar self = this;\n\tthis._headers = {};\n\n\t// Headers\n\tif (headers instanceof Headers) {\n\t\theaders = headers.raw();\n\t}\n\n\t// plain object\n\tfor (var prop in headers) {\n\t\tif (!headers.hasOwnProperty(prop)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (typeof headers[prop] === 'string') {\n\t\t\tthis.set(prop, headers[prop]);\n\n\t\t} else if (typeof headers[prop] === 'number' && !isNaN(headers[prop])) {\n\t\t\tthis.set(prop, headers[prop].toString());\n\n\t\t} else if (Array.isArray(headers[prop])) {\n\t\t\theaders[prop].forEach(function(item) {\n\t\t\t\tself.append(prop, item.toString());\n\t\t\t});\n\t\t}\n\t}\n\n}\n\n/**\n * Return first header value given name\n *\n * @param   String  name  Header name\n * @return  Mixed\n */\nHeaders.prototype.get = function(name) {\n\tvar list = this._headers[name.toLowerCase()];\n\treturn list ? list[0] : null;\n};\n\n/**\n * Return all header values given name\n *\n * @param   String  name  Header name\n * @return  Array\n */\nHeaders.prototype.getAll = function(name) {\n\tif (!this.has(name)) {\n\t\treturn [];\n\t}\n\n\treturn this._headers[name.toLowerCase()];\n};\n\n/**\n * Iterate over all headers\n *\n * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)\n * @param   Boolean   thisArg   `this` context for callback function\n * @return  Void\n */\nHeaders.prototype.forEach = function(callback, thisArg) {\n\tObject.getOwnPropertyNames(this._headers).forEach(function(name) {\n\t\tthis._headers[name].forEach(function(value) {\n\t\t\tcallback.call(thisArg, value, name, this)\n\t\t}, this)\n\t}, this)\n}\n\n/**\n * Overwrite header values given name\n *\n * @param   String  name   Header name\n * @param   String  value  Header value\n * @return  Void\n */\nHeaders.prototype.set = function(name, value) {\n\tthis._headers[name.toLowerCase()] = [value];\n};\n\n/**\n * Append a value onto existing header\n *\n * @param   String  name   Header name\n * @param   String  value  Header value\n * @return  Void\n */\nHeaders.prototype.append = function(name, value) {\n\tif (!this.has(name)) {\n\t\tthis.set(name, value);\n\t\treturn;\n\t}\n\n\tthis._headers[name.toLowerCase()].push(value);\n};\n\n/**\n * Check for header name existence\n *\n * @param   String   name  Header name\n * @return  Boolean\n */\nHeaders.prototype.has = function(name) {\n\treturn this._headers.hasOwnProperty(name.toLowerCase());\n};\n\n/**\n * Delete all header values given name\n *\n * @param   String  name  Header name\n * @return  Void\n */\nHeaders.prototype['delete'] = function(name) {\n\tdelete this._headers[name.toLowerCase()];\n};\n\n/**\n * Return raw headers (non-spec api)\n *\n * @return  Object\n */\nHeaders.prototype.raw = function() {\n\treturn this._headers;\n};\n","\n/**\n * response.js\n *\n * Response class provides content decoding\n */\n\nvar http = require('http');\nvar Headers = require('./headers');\nvar Body = require('./body');\n\nmodule.exports = Response;\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Response(body, opts) {\n\n\topts = opts || {};\n\n\tthis.url = opts.url;\n\tthis.status = opts.status || 200;\n\tthis.statusText = opts.statusText || http.STATUS_CODES[this.status];\n\tthis.headers = new Headers(opts.headers);\n\tthis.ok = this.status >= 200 && this.status < 300;\n\n\tBody.call(this, body, opts);\n\n}\n\nResponse.prototype = Object.create(Body.prototype);\n\n/**\n * Clone this response\n *\n * @return  Response\n */\nResponse.prototype.clone = function() {\n\treturn new Response(this._clone(this), {\n\t\turl: this.url\n\t\t, status: this.status\n\t\t, statusText: this.statusText\n\t\t, headers: this.headers\n\t\t, ok: this.ok\n\t});\n};\n","\n/**\n * request.js\n *\n * Request class contains server only options\n */\n\nvar parse_url = require('url').parse;\nvar Headers = require('./headers');\nvar Body = require('./body');\n\nmodule.exports = Request;\n\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nfunction Request(input, init) {\n\tvar url, url_parsed;\n\n\t// normalize input\n\tif (!(input instanceof Request)) {\n\t\turl = input;\n\t\turl_parsed = parse_url(url);\n\t\tinput = {};\n\t} else {\n\t\turl = input.url;\n\t\turl_parsed = parse_url(url);\n\t}\n\n\t// normalize init\n\tinit = init || {};\n\n\t// fetch spec options\n\tthis.method = init.method || input.method || 'GET';\n\tthis.redirect = init.redirect || input.redirect || 'follow';\n\tthis.headers = new Headers(init.headers || input.headers || {});\n\tthis.url = url;\n\n\t// server only options\n\tthis.follow = init.follow !== undefined ?\n\t\tinit.follow : input.follow !== undefined ?\n\t\tinput.follow : 20;\n\tthis.compress = init.compress !== undefined ?\n\t\tinit.compress : input.compress !== undefined ?\n\t\tinput.compress : true;\n\tthis.counter = init.counter || input.counter || 0;\n\tthis.agent = init.agent || input.agent;\n\n\tBody.call(this, init.body || this._clone(input), {\n\t\ttimeout: init.timeout || input.timeout || 0,\n\t\tsize: init.size || input.size || 0\n\t});\n\n\t// server request options\n\tthis.protocol = url_parsed.protocol;\n\tthis.hostname = url_parsed.hostname;\n\tthis.port = url_parsed.port;\n\tthis.path = url_parsed.path;\n\tthis.auth = url_parsed.auth;\n}\n\nRequest.prototype = Object.create(Body.prototype);\n\n/**\n * Clone this request\n *\n * @return  Request\n */\nRequest.prototype.clone = function() {\n\treturn new Request(this);\n};\n","\n/**\n * index.js\n *\n * a request API compatible with window.fetch\n */\n\nvar parse_url = require('url').parse;\nvar resolve_url = require('url').resolve;\nvar http = require('http');\nvar https = require('https');\nvar zlib = require('zlib');\nvar stream = require('stream');\n\nvar Body = require('./lib/body');\nvar Response = require('./lib/response');\nvar Headers = require('./lib/headers');\nvar Request = require('./lib/request');\nvar FetchError = require('./lib/fetch-error');\n\n// commonjs\nmodule.exports = Fetch;\n// es6 default export compatibility\nmodule.exports.default = module.exports;\n\n/**\n * Fetch class\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\nfunction Fetch(url, opts) {\n\n\t// allow call as function\n\tif (!(this instanceof Fetch))\n\t\treturn new Fetch(url, opts);\n\n\t// allow custom promise\n\tif (!Fetch.Promise) {\n\t\tthrow new Error('native promise missing, set Fetch.Promise to your favorite alternative');\n\t}\n\n\tBody.Promise = Fetch.Promise;\n\n\tvar self = this;\n\n\t// wrap http.request into fetch\n\treturn new Fetch.Promise(function(resolve, reject) {\n\t\t// build request object\n\t\tvar options = new Request(url, opts);\n\n\t\tif (!options.protocol || !options.hostname) {\n\t\t\tthrow new Error('only absolute urls are supported');\n\t\t}\n\n\t\tif (options.protocol !== 'http:' && options.protocol !== 'https:') {\n\t\t\tthrow new Error('only http(s) protocols are supported');\n\t\t}\n\n\t\tvar send;\n\t\tif (options.protocol === 'https:') {\n\t\t\tsend = https.request;\n\t\t} else {\n\t\t\tsend = http.request;\n\t\t}\n\n\t\t// normalize headers\n\t\tvar headers = new Headers(options.headers);\n\n\t\tif (options.compress) {\n\t\t\theaders.set('accept-encoding', 'gzip,deflate');\n\t\t}\n\n\t\tif (!headers.has('user-agent')) {\n\t\t\theaders.set('user-agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n\t\t}\n\n\t\tif (!headers.has('connection') && !options.agent) {\n\t\t\theaders.set('connection', 'close');\n\t\t}\n\n\t\tif (!headers.has('accept')) {\n\t\t\theaders.set('accept', '*/*');\n\t\t}\n\n\t\t// detect form data input from form-data module, this hack avoid the need to pass multipart header manually\n\t\tif (!headers.has('content-type') && options.body && typeof options.body.getBoundary === 'function') {\n\t\t\theaders.set('content-type', 'multipart/form-data; boundary=' + options.body.getBoundary());\n\t\t}\n\n\t\t// bring node-fetch closer to browser behavior by setting content-length automatically\n\t\tif (!headers.has('content-length') && /post|put|patch|delete/i.test(options.method)) {\n\t\t\tif (typeof options.body === 'string') {\n\t\t\t\theaders.set('content-length', Buffer.byteLength(options.body));\n\t\t\t// detect form data input from form-data module, this hack avoid the need to add content-length header manually\n\t\t\t} else if (options.body && typeof options.body.getLengthSync === 'function') {\n\t\t\t\t// for form-data 1.x\n\t\t\t\tif (options.body._lengthRetrievers && options.body._lengthRetrievers.length == 0) {\n\t\t\t\t\theaders.set('content-length', options.body.getLengthSync().toString());\n\t\t\t\t// for form-data 2.x\n\t\t\t\t} else if (options.body.hasKnownLength && options.body.hasKnownLength()) {\n\t\t\t\t\theaders.set('content-length', options.body.getLengthSync().toString());\n\t\t\t\t}\n\t\t\t// this is only necessary for older nodejs releases (before iojs merge)\n\t\t\t} else if (options.body === undefined || options.body === null) {\n\t\t\t\theaders.set('content-length', '0');\n\t\t\t}\n\t\t}\n\n\t\toptions.headers = headers.raw();\n\n\t\t// http.request only support string as host header, this hack make custom host header possible\n\t\tif (options.headers.host) {\n\t\t\toptions.headers.host = options.headers.host[0];\n\t\t}\n\n\t\t// send request\n\t\tvar req = send(options);\n\t\tvar reqTimeout;\n\n\t\tif (options.timeout) {\n\t\t\treq.once('socket', function(socket) {\n\t\t\t\treqTimeout = setTimeout(function() {\n\t\t\t\t\treq.abort();\n\t\t\t\t\treject(new FetchError('network timeout at: ' + options.url, 'request-timeout'));\n\t\t\t\t}, options.timeout);\n\t\t\t});\n\t\t}\n\n\t\treq.on('error', function(err) {\n\t\t\tclearTimeout(reqTimeout);\n\t\t\treject(new FetchError('request to ' + options.url + ' failed, reason: ' + err.message, 'system', err));\n\t\t});\n\n\t\treq.on('response', function(res) {\n\t\t\tclearTimeout(reqTimeout);\n\n\t\t\t// handle redirect\n\t\t\tif (self.isRedirect(res.statusCode) && options.redirect !== 'manual') {\n\t\t\t\tif (options.redirect === 'error') {\n\t\t\t\t\treject(new FetchError('redirect mode is set to error: ' + options.url, 'no-redirect'));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (options.counter >= options.follow) {\n\t\t\t\t\treject(new FetchError('maximum redirect reached at: ' + options.url, 'max-redirect'));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!res.headers.location) {\n\t\t\t\t\treject(new FetchError('redirect location header missing at: ' + options.url, 'invalid-redirect'));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// per fetch spec, for POST request with 301/302 response, or any request with 303 response, use GET when following redirect\n\t\t\t\tif (res.statusCode === 303\n\t\t\t\t\t|| ((res.statusCode === 301 || res.statusCode === 302) && options.method === 'POST'))\n\t\t\t\t{\n\t\t\t\t\toptions.method = 'GET';\n\t\t\t\t\tdelete options.body;\n\t\t\t\t\tdelete options.headers['content-length'];\n\t\t\t\t}\n\n\t\t\t\toptions.counter++;\n\n\t\t\t\tresolve(Fetch(resolve_url(options.url, res.headers.location), options));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// normalize location header for manual redirect mode\n\t\t\tvar headers = new Headers(res.headers);\n\t\t\tif (options.redirect === 'manual' && headers.has('location')) {\n\t\t\t\theaders.set('location', resolve_url(options.url, headers.get('location')));\n\t\t\t}\n\n\t\t\t// prepare response\n\t\t\tvar body = res.pipe(new stream.PassThrough());\n\t\t\tvar response_options = {\n\t\t\t\turl: options.url\n\t\t\t\t, status: res.statusCode\n\t\t\t\t, statusText: res.statusMessage\n\t\t\t\t, headers: headers\n\t\t\t\t, size: options.size\n\t\t\t\t, timeout: options.timeout\n\t\t\t};\n\n\t\t\t// response object\n\t\t\tvar output;\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no content-encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!options.compress || options.method === 'HEAD' || !headers.has('content-encoding') || res.statusCode === 204 || res.statusCode === 304) {\n\t\t\t\toutput = new Response(body, response_options);\n\t\t\t\tresolve(output);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, check for gzip or deflate\n\t\t\tvar name = headers.get('content-encoding');\n\n\t\t\t// for gzip\n\t\t\tif (name == 'gzip' || name == 'x-gzip') {\n\t\t\t\tbody = body.pipe(zlib.createGunzip());\n\t\t\t\toutput = new Response(body, response_options);\n\t\t\t\tresolve(output);\n\t\t\t\treturn;\n\n\t\t\t// for deflate\n\t\t\t} else if (name == 'deflate' || name == 'x-deflate') {\n\t\t\t\t// handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tvar raw = res.pipe(new stream.PassThrough());\n\t\t\t\traw.once('data', function(chunk) {\n\t\t\t\t\t// see http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflate());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflateRaw());\n\t\t\t\t\t}\n\t\t\t\t\toutput = new Response(body, response_options);\n\t\t\t\t\tresolve(output);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, use response as-is\n\t\t\toutput = new Response(body, response_options);\n\t\t\tresolve(output);\n\t\t\treturn;\n\t\t});\n\n\t\t// accept string, buffer or readable stream as body\n\t\t// per spec we will call tostring on non-stream objects\n\t\tif (typeof options.body === 'string') {\n\t\t\treq.write(options.body);\n\t\t\treq.end();\n\t\t} else if (options.body instanceof Buffer) {\n\t\t\treq.write(options.body);\n\t\t\treq.end();\n\t\t} else if (typeof options.body === 'object' && options.body.pipe) {\n\t\t\toptions.body.pipe(req);\n\t\t} else if (typeof options.body === 'object') {\n\t\t\treq.write(options.body.toString());\n\t\t\treq.end();\n\t\t} else {\n\t\t\treq.end();\n\t\t}\n\t});\n\n};\n\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\nFetch.prototype.isRedirect = function(code) {\n\treturn code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n}\n\n// expose Promise\nFetch.Promise = global.Promise;\nFetch.Response = Response;\nFetch.Headers = Headers;\nFetch.Request = Request;\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2017 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\nimport fetch from \"node-fetch\"\n\nexport interface HeatApiConfig {\n  baseURL: string\n}\n\nexport class HeatApi {\n  private baseURL: string\n\n  constructor(defaults: HeatApiConfig) {\n    this.baseURL = defaults.baseURL\n  }\n\n  public get<T>(path: string): Promise<T> {\n    return new Promise((resolve, reject) => {\n      fetch(this.baseURL + path)\n        .then(response => response.json())\n        .then(data => {\n          if (data[\"errorDescription\"])\n            reject(\n              new HeatApiError(\n                data[\"errorDescription\"],\n                data[\"errorCode\"],\n                path,\n                {}\n              )\n            )\n          else resolve(data)\n        })\n        .catch(reason => reject(reason))\n    })\n  }\n\n  public post<T, Y>(path: string, params: Y): Promise<T> {\n    let bodyParams: { [key: string]: string } = <any>params\n    return new Promise((resolve, reject) => {\n      fetch(this.baseURL + path, {\n        method: \"post\",\n        body: this.searchParams(bodyParams),\n        headers: {\n          Accept:\n            \"application/json, application/xml, text/plain, text/html, *.*\",\n          \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\"\n        }\n      })\n        .then(response => response.json())\n        .then(data => {\n          if (data[\"errorDescription\"])\n            reject(\n              new HeatApiError(\n                data[\"errorDescription\"],\n                data[\"errorCode\"],\n                path,\n                params\n              )\n            )\n          else resolve(data)\n        })\n        .catch(reason => reject(reason))\n    })\n  }\n\n  /* Encodes an one level deep object as URLSearchParams for use in \n     application/x-www-form-urlencoded POST body. */\n  private searchParams(params: { [key: string]: string }): string {\n    let result: string[] = []\n    for (var key in params)\n      if (params.hasOwnProperty(key))\n        result.push(`${key}=${encodeURIComponent(params[key])}`)\n    return result.join(\"&\")\n  }\n}\n\nexport class HeatApiError {\n  constructor(\n    public errorDescription: string,\n    public errorCode: number,\n    public path: string,\n    public params?: { [key: string]: any }\n  ) {}\n}\n","export default class Subscription<T> {\n  public isReconnect = false\n  public onMessageCallback: (message: T) => void\n  public onDisconnectCallback: () => void\n  public onReconnectCallback: () => void\n  private unsubscribeFn: () => void\n\n  setUnsubscribeFn(unsubscribeFn: () => void) {\n    this.unsubscribeFn = unsubscribeFn\n  }\n\n  onMessage(callback: (message: T) => void) {\n    this.onMessageCallback = callback\n    return this\n  }\n\n  onDisconnect(callback: () => void) {\n    this.onDisconnectCallback = callback\n    return this\n  }\n\n  onReconnect(callback: () => void) {\n    this.onReconnectCallback = callback\n    return this\n  }\n\n  close() {\n    if (!this.unsubscribeFn) throw new Error(\"Subscription already closed\")\n    this.unsubscribeFn()\n    this.unsubscribeFn = null\n  }\n}\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * An auto incrementing id which we can use to create \"unique\" Ultron instances\n * so we can track the event emitters that are added through the Ultron\n * interface.\n *\n * @type {Number}\n * @private\n */\nvar id = 0;\n\n/**\n * Ultron is high-intelligence robot. It gathers intelligence so it can start improving\n * upon his rudimentary design. It will learn from your EventEmitting patterns\n * and exterminate them.\n *\n * @constructor\n * @param {EventEmitter} ee EventEmitter instance we need to wrap.\n * @api public\n */\nfunction Ultron(ee) {\n  if (!(this instanceof Ultron)) return new Ultron(ee);\n\n  this.id = id++;\n  this.ee = ee;\n}\n\n/**\n * Register a new EventListener for the given event.\n *\n * @param {String} event Name of the event.\n * @param {Functon} fn Callback function.\n * @param {Mixed} context The context of the function.\n * @returns {Ultron}\n * @api public\n */\nUltron.prototype.on = function on(event, fn, context) {\n  fn.__ultron = this.id;\n  this.ee.on(event, fn, context);\n\n  return this;\n};\n/**\n * Add an EventListener that's only called once.\n *\n * @param {String} event Name of the event.\n * @param {Function} fn Callback function.\n * @param {Mixed} context The context of the function.\n * @returns {Ultron}\n * @api public\n */\nUltron.prototype.once = function once(event, fn, context) {\n  fn.__ultron = this.id;\n  this.ee.once(event, fn, context);\n\n  return this;\n};\n\n/**\n * Remove the listeners we assigned for the given event.\n *\n * @returns {Ultron}\n * @api public\n */\nUltron.prototype.remove = function remove() {\n  var args = arguments\n    , ee = this.ee\n    , event;\n\n  //\n  // When no event names are provided we assume that we need to clear all the\n  // events that were assigned through us.\n  //\n  if (args.length === 1 && 'string' === typeof args[0]) {\n    args = args[0].split(/[, ]+/);\n  } else if (!args.length) {\n    if (ee.eventNames) {\n      args = ee.eventNames();\n    } else if (ee._events) {\n      args = [];\n\n      for (event in ee._events) {\n        if (has.call(ee._events, event)) args.push(event);\n      }\n\n      if (Object.getOwnPropertySymbols) {\n        args = args.concat(Object.getOwnPropertySymbols(ee._events));\n      }\n    }\n  }\n\n  for (var i = 0; i < args.length; i++) {\n    var listeners = ee.listeners(args[i]);\n\n    for (var j = 0; j < listeners.length; j++) {\n      event = listeners[j];\n\n      //\n      // Once listeners have a `listener` property that stores the real listener\n      // in the EventEmitter that ships with Node.js.\n      //\n      if (event.listener) {\n        if (event.listener.__ultron !== this.id) continue;\n      } else if (event.__ultron !== this.id) {\n        continue;\n      }\n\n      ee.removeListener(args[i], event);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Destroy the Ultron instance, remove all listeners and release all references.\n *\n * @returns {Boolean}\n * @api public\n */\nUltron.prototype.destroy = function destroy() {\n  if (!this.ee) return false;\n\n  this.remove();\n  this.ee = null;\n\n  return true;\n};\n\n//\n// Expose the module.\n//\nmodule.exports = Ultron;\n","'use strict';\n\nfunction Queue(options) {\n  if (!(this instanceof Queue)) {\n    return new Queue(options);\n  }\n\n  options = options || {};\n  this.concurrency = options.concurrency || Infinity;\n  this.pending = 0;\n  this.jobs = [];\n  this.cbs = [];\n  this._done = done.bind(this);\n}\n\nvar arrayAddMethods = [\n  'push',\n  'unshift',\n  'splice'\n];\n\narrayAddMethods.forEach(function(method) {\n  Queue.prototype[method] = function() {\n    var methodResult = Array.prototype[method].apply(this.jobs, arguments);\n    this._run();\n    return methodResult;\n  };\n});\n\nObject.defineProperty(Queue.prototype, 'length', {\n  get: function() {\n    return this.pending + this.jobs.length;\n  }\n});\n\nQueue.prototype._run = function() {\n  if (this.pending === this.concurrency) {\n    return;\n  }\n  if (this.jobs.length) {\n    var job = this.jobs.shift();\n    this.pending++;\n    job(this._done);\n    this._run();\n  }\n\n  if (this.pending === 0) {\n    while (this.cbs.length !== 0) {\n      var cb = this.cbs.pop();\n      process.nextTick(cb);\n    }\n  }\n};\n\nQueue.prototype.onDone = function(cb) {\n  if (typeof cb === 'function') {\n    this.cbs.push(cb);\n    this._run();\n  }\n};\n\nfunction done() {\n  this.pending--;\n  this._run();\n}\n\nmodule.exports = Queue;\n","/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\n'use strict';\n\nconst safeBuffer = require('safe-buffer');\n\nconst Buffer = safeBuffer.Buffer;\n\n/**\n * Merges an array of buffers into a new buffer.\n *\n * @param {Buffer[]} list The array of buffers to concat\n * @param {Number} totalLength The total length of buffers in the list\n * @return {Buffer} The resulting buffer\n * @public\n */\nconst concat = (list, totalLength) => {\n  const target = Buffer.allocUnsafe(totalLength);\n  var offset = 0;\n\n  for (var i = 0; i < list.length; i++) {\n    const buf = list[i];\n    buf.copy(target, offset);\n    offset += buf.length;\n  }\n\n  return target;\n};\n\ntry {\n  const bufferUtil = require('bufferutil');\n\n  module.exports = Object.assign({ concat }, bufferUtil.BufferUtil || bufferUtil);\n} catch (e) /* istanbul ignore next */ {\n  /**\n   * Masks a buffer using the given mask.\n   *\n   * @param {Buffer} source The buffer to mask\n   * @param {Buffer} mask The mask to use\n   * @param {Buffer} output The buffer where to store the result\n   * @param {Number} offset The offset at which to start writing\n   * @param {Number} length The number of bytes to mask.\n   * @public\n   */\n  const mask = (source, mask, output, offset, length) => {\n    for (var i = 0; i < length; i++) {\n      output[offset + i] = source[i] ^ mask[i & 3];\n    }\n  };\n\n  /**\n   * Unmasks a buffer using the given mask.\n   *\n   * @param {Buffer} buffer The buffer to unmask\n   * @param {Buffer} mask The mask to use\n   * @public\n   */\n  const unmask = (buffer, mask) => {\n    // Required until https://github.com/nodejs/node/issues/9006 is resolved.\n    const length = buffer.length;\n    for (var i = 0; i < length; i++) {\n      buffer[i] ^= mask[i & 3];\n    }\n  };\n\n  module.exports = { concat, mask, unmask };\n}\n","'use strict';\n\nconst safeBuffer = require('safe-buffer');\nconst Limiter = require('async-limiter');\nconst zlib = require('zlib');\n\nconst bufferUtil = require('./BufferUtil');\n\nconst Buffer = safeBuffer.Buffer;\n\nconst TRAILER = Buffer.from([0x00, 0x00, 0xff, 0xff]);\nconst EMPTY_BLOCK = Buffer.from([0x00]);\n\nconst kWriteInProgress = Symbol('write-in-progress');\nconst kPendingClose = Symbol('pending-close');\nconst kTotalLength = Symbol('total-length');\nconst kCallback = Symbol('callback');\nconst kBuffers = Symbol('buffers');\nconst kError = Symbol('error');\nconst kOwner = Symbol('owner');\n\n//\n// We limit zlib concurrency, which prevents severe memory fragmentation\n// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913\n// and https://github.com/websockets/ws/issues/1202\n//\n// Intentionally global; it's the global thread pool that's an issue.\n//\nlet zlibLimiter;\n\n/**\n * permessage-deflate implementation.\n */\nclass PerMessageDeflate {\n  /**\n   * Creates a PerMessageDeflate instance.\n   *\n   * @param {Object} options Configuration options\n   * @param {Boolean} options.serverNoContextTakeover Request/accept disabling\n   *     of server context takeover\n   * @param {Boolean} options.clientNoContextTakeover Advertise/acknowledge\n   *     disabling of client context takeover\n   * @param {(Boolean|Number)} options.serverMaxWindowBits Request/confirm the\n   *     use of a custom server window size\n   * @param {(Boolean|Number)} options.clientMaxWindowBits Advertise support\n   *     for, or request, a custom client window size\n   * @param {Number} options.level The value of zlib's `level` param\n   * @param {Number} options.memLevel The value of zlib's `memLevel` param\n   * @param {Number} options.threshold Size (in bytes) below which messages\n   *     should not be compressed\n   * @param {Number} options.concurrencyLimit The number of concurrent calls to\n   *     zlib\n   * @param {Boolean} isServer Create the instance in either server or client\n   *     mode\n   * @param {Number} maxPayload The maximum allowed message length\n   */\n  constructor (options, isServer, maxPayload) {\n    this._maxPayload = maxPayload | 0;\n    this._options = options || {};\n    this._threshold = this._options.threshold !== undefined\n      ? this._options.threshold\n      : 1024;\n    this._isServer = !!isServer;\n    this._deflate = null;\n    this._inflate = null;\n\n    this.params = null;\n\n    if (!zlibLimiter) {\n      const concurrency = this._options.concurrencyLimit !== undefined\n        ? this._options.concurrencyLimit\n        : 10;\n      zlibLimiter = new Limiter({ concurrency });\n    }\n  }\n\n  /**\n   * @type {String}\n   */\n  static get extensionName () {\n    return 'permessage-deflate';\n  }\n\n  /**\n   * Create extension parameters offer.\n   *\n   * @return {Object} Extension parameters\n   * @public\n   */\n  offer () {\n    const params = {};\n\n    if (this._options.serverNoContextTakeover) {\n      params.server_no_context_takeover = true;\n    }\n    if (this._options.clientNoContextTakeover) {\n      params.client_no_context_takeover = true;\n    }\n    if (this._options.serverMaxWindowBits) {\n      params.server_max_window_bits = this._options.serverMaxWindowBits;\n    }\n    if (this._options.clientMaxWindowBits) {\n      params.client_max_window_bits = this._options.clientMaxWindowBits;\n    } else if (this._options.clientMaxWindowBits == null) {\n      params.client_max_window_bits = true;\n    }\n\n    return params;\n  }\n\n  /**\n   * Accept extension offer.\n   *\n   * @param {Array} paramsList Extension parameters\n   * @return {Object} Accepted configuration\n   * @public\n   */\n  accept (paramsList) {\n    paramsList = this.normalizeParams(paramsList);\n\n    var params;\n    if (this._isServer) {\n      params = this.acceptAsServer(paramsList);\n    } else {\n      params = this.acceptAsClient(paramsList);\n    }\n\n    this.params = params;\n    return params;\n  }\n\n  /**\n   * Releases all resources used by the extension.\n   *\n   * @public\n   */\n  cleanup () {\n    if (this._inflate) {\n      if (this._inflate[kWriteInProgress]) {\n        this._inflate[kPendingClose] = true;\n      } else {\n        this._inflate.close();\n        this._inflate = null;\n      }\n    }\n    if (this._deflate) {\n      if (this._deflate[kWriteInProgress]) {\n        this._deflate[kPendingClose] = true;\n      } else {\n        this._deflate.close();\n        this._deflate = null;\n      }\n    }\n  }\n\n  /**\n   * Accept extension offer from client.\n   *\n   * @param {Array} paramsList Extension parameters\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsServer (paramsList) {\n    const accepted = {};\n    const result = paramsList.some((params) => {\n      if (\n        (this._options.serverNoContextTakeover === false &&\n          params.server_no_context_takeover) ||\n        (this._options.serverMaxWindowBits === false &&\n          params.server_max_window_bits) ||\n        (typeof this._options.serverMaxWindowBits === 'number' &&\n          typeof params.server_max_window_bits === 'number' &&\n          this._options.serverMaxWindowBits > params.server_max_window_bits) ||\n        (typeof this._options.clientMaxWindowBits === 'number' &&\n          !params.client_max_window_bits)\n      ) {\n        return;\n      }\n\n      if (\n        this._options.serverNoContextTakeover ||\n        params.server_no_context_takeover\n      ) {\n        accepted.server_no_context_takeover = true;\n      }\n      if (\n        this._options.clientNoContextTakeover ||\n        (this._options.clientNoContextTakeover !== false &&\n          params.client_no_context_takeover)\n      ) {\n        accepted.client_no_context_takeover = true;\n      }\n      if (typeof this._options.serverMaxWindowBits === 'number') {\n        accepted.server_max_window_bits = this._options.serverMaxWindowBits;\n      } else if (typeof params.server_max_window_bits === 'number') {\n        accepted.server_max_window_bits = params.server_max_window_bits;\n      }\n      if (typeof this._options.clientMaxWindowBits === 'number') {\n        accepted.client_max_window_bits = this._options.clientMaxWindowBits;\n      } else if (\n        this._options.clientMaxWindowBits !== false &&\n        typeof params.client_max_window_bits === 'number'\n      ) {\n        accepted.client_max_window_bits = params.client_max_window_bits;\n      }\n      return true;\n    });\n\n    if (!result) throw new Error(\"Doesn't support the offered configuration\");\n\n    return accepted;\n  }\n\n  /**\n   * Accept extension response from server.\n   *\n   * @param {Array} paramsList Extension parameters\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsClient (paramsList) {\n    const params = paramsList[0];\n\n    if (\n      this._options.clientNoContextTakeover === false &&\n      params.client_no_context_takeover\n    ) {\n      throw new Error('Invalid value for \"client_no_context_takeover\"');\n    }\n\n    if (\n      (typeof this._options.clientMaxWindowBits === 'number' &&\n        (!params.client_max_window_bits ||\n          params.client_max_window_bits > this._options.clientMaxWindowBits)) ||\n      (this._options.clientMaxWindowBits === false &&\n        params.client_max_window_bits)\n    ) {\n      throw new Error('Invalid value for \"client_max_window_bits\"');\n    }\n\n    return params;\n  }\n\n  /**\n   * Normalize extensions parameters.\n   *\n   * @param {Array} paramsList Extension parameters\n   * @return {Array} Normalized extensions parameters\n   * @private\n   */\n  normalizeParams (paramsList) {\n    return paramsList.map((params) => {\n      Object.keys(params).forEach((key) => {\n        var value = params[key];\n        if (value.length > 1) {\n          throw new Error(`Multiple extension parameters for ${key}`);\n        }\n\n        value = value[0];\n\n        switch (key) {\n          case 'server_no_context_takeover':\n          case 'client_no_context_takeover':\n            if (value !== true) {\n              throw new Error(`invalid extension parameter value for ${key} (${value})`);\n            }\n            params[key] = true;\n            break;\n          case 'server_max_window_bits':\n          case 'client_max_window_bits':\n            if (typeof value === 'string') {\n              value = parseInt(value, 10);\n              if (\n                Number.isNaN(value) ||\n                value < zlib.Z_MIN_WINDOWBITS ||\n                value > zlib.Z_MAX_WINDOWBITS\n              ) {\n                throw new Error(`invalid extension parameter value for ${key} (${value})`);\n              }\n            }\n            if (!this._isServer && value === true) {\n              throw new Error(`Missing extension parameter value for ${key}`);\n            }\n            params[key] = value;\n            break;\n          default:\n            throw new Error(`Not defined extension parameter (${key})`);\n        }\n      });\n      return params;\n    });\n  }\n\n  /**\n   * Decompress data. Concurrency limited by async-limiter.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  decompress (data, fin, callback) {\n    zlibLimiter.push((done) => {\n      this._decompress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Compress data. Concurrency limited by async-limiter.\n   *\n   * @param {Buffer} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  compress (data, fin, callback) {\n    zlibLimiter.push((done) => {\n      this._compress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Decompress data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _decompress (data, fin, callback) {\n    const endpoint = this._isServer ? 'client' : 'server';\n\n    if (!this._inflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits = typeof this.params[key] !== 'number'\n        ? zlib.Z_DEFAULT_WINDOWBITS\n        : this.params[key];\n\n      this._inflate = zlib.createInflateRaw({ windowBits });\n      this._inflate[kTotalLength] = 0;\n      this._inflate[kBuffers] = [];\n      this._inflate[kOwner] = this;\n      this._inflate.on('error', inflateOnError);\n      this._inflate.on('data', inflateOnData);\n    }\n\n    this._inflate[kCallback] = callback;\n    this._inflate[kWriteInProgress] = true;\n\n    this._inflate.write(data);\n    if (fin) this._inflate.write(TRAILER);\n\n    this._inflate.flush(() => {\n      const err = this._inflate[kError];\n\n      if (err) {\n        this._inflate.close();\n        this._inflate = null;\n        callback(err);\n        return;\n      }\n\n      const data = bufferUtil.concat(\n        this._inflate[kBuffers],\n        this._inflate[kTotalLength]\n      );\n\n      if (\n        (fin && this.params[`${endpoint}_no_context_takeover`]) ||\n        this._inflate[kPendingClose]\n      ) {\n        this._inflate.close();\n        this._inflate = null;\n      } else {\n        this._inflate[kWriteInProgress] = false;\n        this._inflate[kTotalLength] = 0;\n        this._inflate[kBuffers] = [];\n      }\n\n      callback(null, data);\n    });\n  }\n\n  /**\n   * Compress data.\n   *\n   * @param {Buffer} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _compress (data, fin, callback) {\n    if (!data || data.length === 0) {\n      process.nextTick(callback, null, EMPTY_BLOCK);\n      return;\n    }\n\n    const endpoint = this._isServer ? 'server' : 'client';\n\n    if (!this._deflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits = typeof this.params[key] !== 'number'\n        ? zlib.Z_DEFAULT_WINDOWBITS\n        : this.params[key];\n\n      this._deflate = zlib.createDeflateRaw({\n        memLevel: this._options.memLevel,\n        level: this._options.level,\n        flush: zlib.Z_SYNC_FLUSH,\n        windowBits\n      });\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      //\n      // `zlib.DeflateRaw` emits an `'error'` event only when an attempt to use\n      // it is made after it has already been closed. This cannot happen here,\n      // so we only add a listener for the `'data'` event.\n      //\n      this._deflate.on('data', deflateOnData);\n    }\n\n    this._deflate[kWriteInProgress] = true;\n\n    this._deflate.write(data);\n    this._deflate.flush(zlib.Z_SYNC_FLUSH, () => {\n      var data = bufferUtil.concat(\n        this._deflate[kBuffers],\n        this._deflate[kTotalLength]\n      );\n\n      if (fin) data = data.slice(0, data.length - 4);\n\n      if (\n        (fin && this.params[`${endpoint}_no_context_takeover`]) ||\n        this._deflate[kPendingClose]\n      ) {\n        this._deflate.close();\n        this._deflate = null;\n      } else {\n        this._deflate[kWriteInProgress] = false;\n        this._deflate[kTotalLength] = 0;\n        this._deflate[kBuffers] = [];\n      }\n\n      callback(null, data);\n    });\n  }\n}\n\nmodule.exports = PerMessageDeflate;\n\n/**\n * The listener of the `zlib.DeflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction deflateOnData (chunk) {\n  this[kBuffers].push(chunk);\n  this[kTotalLength] += chunk.length;\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction inflateOnData (chunk) {\n  this[kTotalLength] += chunk.length;\n\n  if (\n    this[kOwner]._maxPayload < 1 ||\n    this[kTotalLength] <= this[kOwner]._maxPayload\n  ) {\n    this[kBuffers].push(chunk);\n    return;\n  }\n\n  this[kError] = new Error('max payload size exceeded');\n  this[kError].closeCode = 1009;\n  this.removeListener('data', inflateOnData);\n  this.reset();\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'error'` event.\n *\n * @param {Error} err The emitted error\n * @private\n */\nfunction inflateOnError (err) {\n  //\n  // There is no need to call `Zlib#close()` as the handle is automatically\n  // closed when an error is emitted.\n  //\n  this[kOwner]._inflate = null;\n  this[kCallback](err);\n}\n","'use strict';\n\n/**\n * Class representing an event.\n *\n * @private\n */\nclass Event {\n  /**\n   * Create a new `Event`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} target A reference to the target to which the event was dispatched\n   */\n  constructor (type, target) {\n    this.target = target;\n    this.type = type;\n  }\n}\n\n/**\n * Class representing a message event.\n *\n * @extends Event\n * @private\n */\nclass MessageEvent extends Event {\n  /**\n   * Create a new `MessageEvent`.\n   *\n   * @param {(String|Buffer|ArrayBuffer|Buffer[])} data The received data\n   * @param {WebSocket} target A reference to the target to which the event was dispatched\n   */\n  constructor (data, target) {\n    super('message', target);\n\n    this.data = data;\n  }\n}\n\n/**\n * Class representing a close event.\n *\n * @extends Event\n * @private\n */\nclass CloseEvent extends Event {\n  /**\n   * Create a new `CloseEvent`.\n   *\n   * @param {Number} code The status code explaining why the connection is being closed\n   * @param {String} reason A human-readable string explaining why the connection is closing\n   * @param {WebSocket} target A reference to the target to which the event was dispatched\n   */\n  constructor (code, reason, target) {\n    super('close', target);\n\n    this.wasClean = target._closeFrameReceived && target._closeFrameSent;\n    this.reason = reason;\n    this.code = code;\n  }\n}\n\n/**\n * Class representing an open event.\n *\n * @extends Event\n * @private\n */\nclass OpenEvent extends Event {\n  /**\n   * Create a new `OpenEvent`.\n   *\n   * @param {WebSocket} target A reference to the target to which the event was dispatched\n   */\n  constructor (target) {\n    super('open', target);\n  }\n}\n\n/**\n * This provides methods for emulating the `EventTarget` interface. It's not\n * meant to be used directly.\n *\n * @mixin\n */\nconst EventTarget = {\n  /**\n   * Register an event listener.\n   *\n   * @param {String} method A string representing the event type to listen for\n   * @param {Function} listener The listener to add\n   * @public\n   */\n  addEventListener (method, listener) {\n    if (typeof listener !== 'function') return;\n\n    function onMessage (data) {\n      listener.call(this, new MessageEvent(data, this));\n    }\n\n    function onClose (code, message) {\n      listener.call(this, new CloseEvent(code, message, this));\n    }\n\n    function onError (event) {\n      event.type = 'error';\n      event.target = this;\n      listener.call(this, event);\n    }\n\n    function onOpen () {\n      listener.call(this, new OpenEvent(this));\n    }\n\n    if (method === 'message') {\n      onMessage._listener = listener;\n      this.on(method, onMessage);\n    } else if (method === 'close') {\n      onClose._listener = listener;\n      this.on(method, onClose);\n    } else if (method === 'error') {\n      onError._listener = listener;\n      this.on(method, onError);\n    } else if (method === 'open') {\n      onOpen._listener = listener;\n      this.on(method, onOpen);\n    } else {\n      this.on(method, listener);\n    }\n  },\n\n  /**\n   * Remove an event listener.\n   *\n   * @param {String} method A string representing the event type to remove\n   * @param {Function} listener The listener to remove\n   * @public\n   */\n  removeEventListener (method, listener) {\n    const listeners = this.listeners(method);\n\n    for (var i = 0; i < listeners.length; i++) {\n      if (listeners[i] === listener || listeners[i]._listener === listener) {\n        this.removeListener(method, listeners[i]);\n      }\n    }\n  }\n};\n\nmodule.exports = EventTarget;\n","'use strict';\n\n//\n// Allowed token characters:\n//\n// '!', '#', '$', '%', '&', ''', '*', '+', '-',\n// '.', 0-9, A-Z, '^', '_', '`', a-z, '|', '~'\n//\n// tokenChars[32] === 0 // ' '\n// tokenChars[33] === 1 // '!'\n// tokenChars[34] === 0 // '\"'\n// ...\n//\nconst tokenChars = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 0 - 15\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 16 - 31\n  0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, // 32 - 47\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, // 48 - 63\n  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 64 - 79\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, // 80 - 95\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 96 - 111\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 // 112 - 127\n];\n\n/**\n * Adds an offer to the map of extension offers or a parameter to the map of\n * parameters.\n *\n * @param {Object} dest The map of extension offers or parameters\n * @param {String} name The extension or parameter name\n * @param {(Object|Boolean|String)} elem The extension parameters or the\n *     parameter value\n * @private\n */\nfunction push (dest, name, elem) {\n  if (Object.prototype.hasOwnProperty.call(dest, name)) dest[name].push(elem);\n  else dest[name] = [elem];\n}\n\n/**\n * Parses the `Sec-WebSocket-Extensions` header into an object.\n *\n * @param {String} header The field value of the header\n * @return {Object} The parsed object\n * @public\n */\nfunction parse (header) {\n  const offers = {};\n\n  if (header === undefined || header === '') return offers;\n\n  var params = {};\n  var mustUnescape = false;\n  var isEscaping = false;\n  var inQuotes = false;\n  var extensionName;\n  var paramName;\n  var start = -1;\n  var end = -1;\n\n  for (var i = 0; i < header.length; i++) {\n    const code = header.charCodeAt(i);\n\n    if (extensionName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (code === 0x20/* ' ' */|| code === 0x09/* '\\t' */) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b/* ';' */ || code === 0x2c/* ',' */) {\n        if (start === -1) throw new Error(`unexpected character at index ${i}`);\n\n        if (end === -1) end = i;\n        const name = header.slice(start, end);\n        if (code === 0x2c) {\n          push(offers, name, params);\n          params = {};\n        } else {\n          extensionName = name;\n        }\n\n        start = end = -1;\n      } else {\n        throw new Error(`unexpected character at index ${i}`);\n      }\n    } else if (paramName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (code === 0x20 || code === 0x09) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) throw new Error(`unexpected character at index ${i}`);\n\n        if (end === -1) end = i;\n        push(params, header.slice(start, end), true);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = {};\n          extensionName = undefined;\n        }\n\n        start = end = -1;\n      } else if (code === 0x3d/* '=' */&& start !== -1 && end === -1) {\n        paramName = header.slice(start, i);\n        start = end = -1;\n      } else {\n        throw new Error(`unexpected character at index ${i}`);\n      }\n    } else {\n      //\n      // The value of a quoted-string after unescaping must conform to the\n      // token ABNF, so only token characters are valid.\n      // Ref: https://tools.ietf.org/html/rfc6455#section-9.1\n      //\n      if (isEscaping) {\n        if (tokenChars[code] !== 1) {\n          throw new Error(`unexpected character at index ${i}`);\n        }\n        if (start === -1) start = i;\n        else if (!mustUnescape) mustUnescape = true;\n        isEscaping = false;\n      } else if (inQuotes) {\n        if (tokenChars[code] === 1) {\n          if (start === -1) start = i;\n        } else if (code === 0x22/* '\"' */ && start !== -1) {\n          inQuotes = false;\n          end = i;\n        } else if (code === 0x5c/* '\\' */) {\n          isEscaping = true;\n        } else {\n          throw new Error(`unexpected character at index ${i}`);\n        }\n      } else if (code === 0x22 && header.charCodeAt(i - 1) === 0x3d) {\n        inQuotes = true;\n      } else if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (start !== -1 && (code === 0x20 || code === 0x09)) {\n        if (end === -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) throw new Error(`unexpected character at index ${i}`);\n\n        if (end === -1) end = i;\n        var value = header.slice(start, end);\n        if (mustUnescape) {\n          value = value.replace(/\\\\/g, '');\n          mustUnescape = false;\n        }\n        push(params, paramName, value);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = {};\n          extensionName = undefined;\n        }\n\n        paramName = undefined;\n        start = end = -1;\n      } else {\n        throw new Error(`unexpected character at index ${i}`);\n      }\n    }\n  }\n\n  if (start === -1 || inQuotes) throw new Error('unexpected end of input');\n\n  if (end === -1) end = i;\n  const token = header.slice(start, end);\n  if (extensionName === undefined) {\n    push(offers, token, {});\n  } else {\n    if (paramName === undefined) {\n      push(params, token, true);\n    } else if (mustUnescape) {\n      push(params, paramName, token.replace(/\\\\/g, ''));\n    } else {\n      push(params, paramName, token);\n    }\n    push(offers, extensionName, params);\n  }\n\n  return offers;\n}\n\n/**\n * Serializes a parsed `Sec-WebSocket-Extensions` header to a string.\n *\n * @param {Object} value The object to format\n * @return {String} A string representing the given value\n * @public\n */\nfunction format (value) {\n  return Object.keys(value).map((token) => {\n    var paramsList = value[token];\n    if (!Array.isArray(paramsList)) paramsList = [paramsList];\n    return paramsList.map((params) => {\n      return [token].concat(Object.keys(params).map((k) => {\n        var p = params[k];\n        if (!Array.isArray(p)) p = [p];\n        return p.map((v) => v === true ? k : `${k}=${v}`).join('; ');\n      })).join('; ');\n    }).join(', ');\n  }).join(', ');\n}\n\nmodule.exports = { format, parse };\n","'use strict';\n\nconst safeBuffer = require('safe-buffer');\n\nconst Buffer = safeBuffer.Buffer;\n\nexports.BINARY_TYPES = ['nodebuffer', 'arraybuffer', 'fragments'];\nexports.GUID = '258EAFA5-E914-47DA-95CA-C5AB0DC85B11';\nexports.EMPTY_BUFFER = Buffer.alloc(0);\nexports.NOOP = () => {};\n","/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\n'use strict';\n\ntry {\n  const isValidUTF8 = require('utf-8-validate');\n\n  module.exports = typeof isValidUTF8 === 'object'\n    ? isValidUTF8.Validation.isValidUTF8 // utf-8-validate@<3.0.0\n    : isValidUTF8;\n} catch (e) /* istanbul ignore next */ {\n  module.exports = () => true;\n}\n","/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\n'use strict';\n\nmodule.exports = {\n  isValidErrorCode: function (code) {\n    return (code >= 1000 && code <= 1013 && code !== 1004 && code !== 1005 && code !== 1006) ||\n      (code >= 3000 && code <= 4999);\n  },\n  1000: 'normal',\n  1001: 'going away',\n  1002: 'protocol error',\n  1003: 'unsupported data',\n  1004: 'reserved',\n  1005: 'reserved for extensions',\n  1006: 'reserved for extensions',\n  1007: 'inconsistent or invalid data',\n  1008: 'policy violation',\n  1009: 'message too big',\n  1010: 'extension handshake missing',\n  1011: 'an unexpected condition prevented the request from being fulfilled',\n  1012: 'service restart',\n  1013: 'try again later'\n};\n","/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\n'use strict';\n\nconst safeBuffer = require('safe-buffer');\n\nconst PerMessageDeflate = require('./PerMessageDeflate');\nconst isValidUTF8 = require('./Validation');\nconst bufferUtil = require('./BufferUtil');\nconst ErrorCodes = require('./ErrorCodes');\nconst constants = require('./Constants');\n\nconst Buffer = safeBuffer.Buffer;\n\nconst GET_INFO = 0;\nconst GET_PAYLOAD_LENGTH_16 = 1;\nconst GET_PAYLOAD_LENGTH_64 = 2;\nconst GET_MASK = 3;\nconst GET_DATA = 4;\nconst INFLATING = 5;\n\n/**\n * HyBi Receiver implementation.\n */\nclass Receiver {\n  /**\n   * Creates a Receiver instance.\n   *\n   * @param {Object} extensions An object containing the negotiated extensions\n   * @param {Number} maxPayload The maximum allowed message length\n   * @param {String} binaryType The type for binary data\n   */\n  constructor (extensions, maxPayload, binaryType) {\n    this._binaryType = binaryType || constants.BINARY_TYPES[0];\n    this._extensions = extensions || {};\n    this._maxPayload = maxPayload | 0;\n\n    this._bufferedBytes = 0;\n    this._buffers = [];\n\n    this._compressed = false;\n    this._payloadLength = 0;\n    this._fragmented = 0;\n    this._masked = false;\n    this._fin = false;\n    this._mask = null;\n    this._opcode = 0;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragments = [];\n\n    this._cleanupCallback = null;\n    this._hadError = false;\n    this._dead = false;\n    this._loop = false;\n\n    this.onmessage = null;\n    this.onclose = null;\n    this.onerror = null;\n    this.onping = null;\n    this.onpong = null;\n\n    this._state = GET_INFO;\n  }\n\n  /**\n   * Consumes bytes from the available buffered data.\n   *\n   * @param {Number} bytes The number of bytes to consume\n   * @return {Buffer} Consumed bytes\n   * @private\n   */\n  readBuffer (bytes) {\n    var offset = 0;\n    var dst;\n    var l;\n\n    this._bufferedBytes -= bytes;\n\n    if (bytes === this._buffers[0].length) return this._buffers.shift();\n\n    if (bytes < this._buffers[0].length) {\n      dst = this._buffers[0].slice(0, bytes);\n      this._buffers[0] = this._buffers[0].slice(bytes);\n      return dst;\n    }\n\n    dst = Buffer.allocUnsafe(bytes);\n\n    while (bytes > 0) {\n      l = this._buffers[0].length;\n\n      if (bytes >= l) {\n        this._buffers[0].copy(dst, offset);\n        offset += l;\n        this._buffers.shift();\n      } else {\n        this._buffers[0].copy(dst, offset, 0, bytes);\n        this._buffers[0] = this._buffers[0].slice(bytes);\n      }\n\n      bytes -= l;\n    }\n\n    return dst;\n  }\n\n  /**\n   * Checks if the number of buffered bytes is bigger or equal than `n` and\n   * calls `cleanup` if necessary.\n   *\n   * @param {Number} n The number of bytes to check against\n   * @return {Boolean} `true` if `bufferedBytes >= n`, else `false`\n   * @private\n   */\n  hasBufferedBytes (n) {\n    if (this._bufferedBytes >= n) return true;\n\n    this._loop = false;\n    if (this._dead) this.cleanup(this._cleanupCallback);\n    return false;\n  }\n\n  /**\n   * Adds new data to the parser.\n   *\n   * @public\n   */\n  add (data) {\n    if (this._dead) return;\n\n    this._bufferedBytes += data.length;\n    this._buffers.push(data);\n    this.startLoop();\n  }\n\n  /**\n   * Starts the parsing loop.\n   *\n   * @private\n   */\n  startLoop () {\n    this._loop = true;\n\n    while (this._loop) {\n      switch (this._state) {\n        case GET_INFO:\n          this.getInfo();\n          break;\n        case GET_PAYLOAD_LENGTH_16:\n          this.getPayloadLength16();\n          break;\n        case GET_PAYLOAD_LENGTH_64:\n          this.getPayloadLength64();\n          break;\n        case GET_MASK:\n          this.getMask();\n          break;\n        case GET_DATA:\n          this.getData();\n          break;\n        default: // `INFLATING`\n          this._loop = false;\n      }\n    }\n  }\n\n  /**\n   * Reads the first two bytes of a frame.\n   *\n   * @private\n   */\n  getInfo () {\n    if (!this.hasBufferedBytes(2)) return;\n\n    const buf = this.readBuffer(2);\n\n    if ((buf[0] & 0x30) !== 0x00) {\n      this.error(new Error('RSV2 and RSV3 must be clear'), 1002);\n      return;\n    }\n\n    const compressed = (buf[0] & 0x40) === 0x40;\n\n    if (compressed && !this._extensions[PerMessageDeflate.extensionName]) {\n      this.error(new Error('RSV1 must be clear'), 1002);\n      return;\n    }\n\n    this._fin = (buf[0] & 0x80) === 0x80;\n    this._opcode = buf[0] & 0x0f;\n    this._payloadLength = buf[1] & 0x7f;\n\n    if (this._opcode === 0x00) {\n      if (compressed) {\n        this.error(new Error('RSV1 must be clear'), 1002);\n        return;\n      }\n\n      if (!this._fragmented) {\n        this.error(new Error(`invalid opcode: ${this._opcode}`), 1002);\n        return;\n      } else {\n        this._opcode = this._fragmented;\n      }\n    } else if (this._opcode === 0x01 || this._opcode === 0x02) {\n      if (this._fragmented) {\n        this.error(new Error(`invalid opcode: ${this._opcode}`), 1002);\n        return;\n      }\n\n      this._compressed = compressed;\n    } else if (this._opcode > 0x07 && this._opcode < 0x0b) {\n      if (!this._fin) {\n        this.error(new Error('FIN must be set'), 1002);\n        return;\n      }\n\n      if (compressed) {\n        this.error(new Error('RSV1 must be clear'), 1002);\n        return;\n      }\n\n      if (this._payloadLength > 0x7d) {\n        this.error(new Error('invalid payload length'), 1002);\n        return;\n      }\n    } else {\n      this.error(new Error(`invalid opcode: ${this._opcode}`), 1002);\n      return;\n    }\n\n    if (!this._fin && !this._fragmented) this._fragmented = this._opcode;\n\n    this._masked = (buf[1] & 0x80) === 0x80;\n\n    if (this._payloadLength === 126) this._state = GET_PAYLOAD_LENGTH_16;\n    else if (this._payloadLength === 127) this._state = GET_PAYLOAD_LENGTH_64;\n    else this.haveLength();\n  }\n\n  /**\n   * Gets extended payload length (7+16).\n   *\n   * @private\n   */\n  getPayloadLength16 () {\n    if (!this.hasBufferedBytes(2)) return;\n\n    this._payloadLength = this.readBuffer(2).readUInt16BE(0, true);\n    this.haveLength();\n  }\n\n  /**\n   * Gets extended payload length (7+64).\n   *\n   * @private\n   */\n  getPayloadLength64 () {\n    if (!this.hasBufferedBytes(8)) return;\n\n    const buf = this.readBuffer(8);\n    const num = buf.readUInt32BE(0, true);\n\n    //\n    // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned\n    // if payload length is greater than this number.\n    //\n    if (num > Math.pow(2, 53 - 32) - 1) {\n      this.error(new Error('max payload size exceeded'), 1009);\n      return;\n    }\n\n    this._payloadLength = (num * Math.pow(2, 32)) + buf.readUInt32BE(4, true);\n    this.haveLength();\n  }\n\n  /**\n   * Payload length has been read.\n   *\n   * @private\n   */\n  haveLength () {\n    if (this._opcode < 0x08 && this.maxPayloadExceeded(this._payloadLength)) {\n      return;\n    }\n\n    if (this._masked) this._state = GET_MASK;\n    else this._state = GET_DATA;\n  }\n\n  /**\n   * Reads mask bytes.\n   *\n   * @private\n   */\n  getMask () {\n    if (!this.hasBufferedBytes(4)) return;\n\n    this._mask = this.readBuffer(4);\n    this._state = GET_DATA;\n  }\n\n  /**\n   * Reads data bytes.\n   *\n   * @private\n   */\n  getData () {\n    var data = constants.EMPTY_BUFFER;\n\n    if (this._payloadLength) {\n      if (!this.hasBufferedBytes(this._payloadLength)) return;\n\n      data = this.readBuffer(this._payloadLength);\n      if (this._masked) bufferUtil.unmask(data, this._mask);\n    }\n\n    if (this._opcode > 0x07) {\n      this.controlMessage(data);\n    } else if (this._compressed) {\n      this._state = INFLATING;\n      this.decompress(data);\n    } else if (this.pushFragment(data)) {\n      this.dataMessage();\n    }\n  }\n\n  /**\n   * Decompresses data.\n   *\n   * @param {Buffer} data Compressed data\n   * @private\n   */\n  decompress (data) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    perMessageDeflate.decompress(data, this._fin, (err, buf) => {\n      if (err) {\n        this.error(err, err.closeCode === 1009 ? 1009 : 1007);\n        return;\n      }\n\n      if (this.pushFragment(buf)) this.dataMessage();\n      this.startLoop();\n    });\n  }\n\n  /**\n   * Handles a data message.\n   *\n   * @private\n   */\n  dataMessage () {\n    if (this._fin) {\n      const messageLength = this._messageLength;\n      const fragments = this._fragments;\n\n      this._totalPayloadLength = 0;\n      this._messageLength = 0;\n      this._fragmented = 0;\n      this._fragments = [];\n\n      if (this._opcode === 2) {\n        var data;\n\n        if (this._binaryType === 'nodebuffer') {\n          data = toBuffer(fragments, messageLength);\n        } else if (this._binaryType === 'arraybuffer') {\n          data = toArrayBuffer(toBuffer(fragments, messageLength));\n        } else {\n          data = fragments;\n        }\n\n        this.onmessage(data);\n      } else {\n        const buf = toBuffer(fragments, messageLength);\n\n        if (!isValidUTF8(buf)) {\n          this.error(new Error('invalid utf8 sequence'), 1007);\n          return;\n        }\n\n        this.onmessage(buf.toString());\n      }\n    }\n\n    this._state = GET_INFO;\n  }\n\n  /**\n   * Handles a control message.\n   *\n   * @param {Buffer} data Data to handle\n   * @private\n   */\n  controlMessage (data) {\n    if (this._opcode === 0x08) {\n      if (data.length === 0) {\n        this.onclose(1000, '');\n        this._loop = false;\n        this.cleanup(this._cleanupCallback);\n      } else if (data.length === 1) {\n        this.error(new Error('invalid payload length'), 1002);\n      } else {\n        const code = data.readUInt16BE(0, true);\n\n        if (!ErrorCodes.isValidErrorCode(code)) {\n          this.error(new Error(`invalid status code: ${code}`), 1002);\n          return;\n        }\n\n        const buf = data.slice(2);\n\n        if (!isValidUTF8(buf)) {\n          this.error(new Error('invalid utf8 sequence'), 1007);\n          return;\n        }\n\n        this.onclose(code, buf.toString());\n        this._loop = false;\n        this.cleanup(this._cleanupCallback);\n      }\n\n      return;\n    }\n\n    if (this._opcode === 0x09) this.onping(data);\n    else this.onpong(data);\n\n    this._state = GET_INFO;\n  }\n\n  /**\n   * Handles an error.\n   *\n   * @param {Error} err The error\n   * @param {Number} code Close code\n   * @private\n   */\n  error (err, code) {\n    this.onerror(err, code);\n    this._hadError = true;\n    this._loop = false;\n    this.cleanup(this._cleanupCallback);\n  }\n\n  /**\n   * Checks payload size, disconnects socket when it exceeds `maxPayload`.\n   *\n   * @param {Number} length Payload length\n   * @private\n   */\n  maxPayloadExceeded (length) {\n    if (length === 0 || this._maxPayload < 1) return false;\n\n    const fullLength = this._totalPayloadLength + length;\n\n    if (fullLength <= this._maxPayload) {\n      this._totalPayloadLength = fullLength;\n      return false;\n    }\n\n    this.error(new Error('max payload size exceeded'), 1009);\n    return true;\n  }\n\n  /**\n   * Appends a fragment in the fragments array after checking that the sum of\n   * fragment lengths does not exceed `maxPayload`.\n   *\n   * @param {Buffer} fragment The fragment to add\n   * @return {Boolean} `true` if `maxPayload` is not exceeded, else `false`\n   * @private\n   */\n  pushFragment (fragment) {\n    if (fragment.length === 0) return true;\n\n    const totalLength = this._messageLength + fragment.length;\n\n    if (this._maxPayload < 1 || totalLength <= this._maxPayload) {\n      this._messageLength = totalLength;\n      this._fragments.push(fragment);\n      return true;\n    }\n\n    this.error(new Error('max payload size exceeded'), 1009);\n    return false;\n  }\n\n  /**\n   * Releases resources used by the receiver.\n   *\n   * @param {Function} cb Callback\n   * @public\n   */\n  cleanup (cb) {\n    this._dead = true;\n\n    if (!this._hadError && (this._loop || this._state === INFLATING)) {\n      this._cleanupCallback = cb;\n    } else {\n      this._extensions = null;\n      this._fragments = null;\n      this._buffers = null;\n      this._mask = null;\n\n      this._cleanupCallback = null;\n      this.onmessage = null;\n      this.onclose = null;\n      this.onerror = null;\n      this.onping = null;\n      this.onpong = null;\n\n      if (cb) cb();\n    }\n  }\n}\n\nmodule.exports = Receiver;\n\n/**\n * Makes a buffer from a list of fragments.\n *\n * @param {Buffer[]} fragments The list of fragments composing the message\n * @param {Number} messageLength The length of the message\n * @return {Buffer}\n * @private\n */\nfunction toBuffer (fragments, messageLength) {\n  if (fragments.length === 1) return fragments[0];\n  if (fragments.length > 1) return bufferUtil.concat(fragments, messageLength);\n  return constants.EMPTY_BUFFER;\n}\n\n/**\n * Converts a buffer to an `ArrayBuffer`.\n *\n * @param {Buffer} The buffer to convert\n * @return {ArrayBuffer} Converted buffer\n */\nfunction toArrayBuffer (buf) {\n  if (buf.byteOffset === 0 && buf.byteLength === buf.buffer.byteLength) {\n    return buf.buffer;\n  }\n\n  return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n}\n","/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\n'use strict';\n\nconst safeBuffer = require('safe-buffer');\nconst crypto = require('crypto');\n\nconst PerMessageDeflate = require('./PerMessageDeflate');\nconst bufferUtil = require('./BufferUtil');\nconst ErrorCodes = require('./ErrorCodes');\nconst constants = require('./Constants');\n\nconst Buffer = safeBuffer.Buffer;\n\n/**\n * HyBi Sender implementation.\n */\nclass Sender {\n  /**\n   * Creates a Sender instance.\n   *\n   * @param {net.Socket} socket The connection socket\n   * @param {Object} extensions An object containing the negotiated extensions\n   */\n  constructor (socket, extensions) {\n    this._extensions = extensions || {};\n    this._socket = socket;\n\n    this._firstFragment = true;\n    this._compress = false;\n\n    this._bufferedBytes = 0;\n    this._deflating = false;\n    this._queue = [];\n  }\n\n  /**\n   * Frames a piece of data according to the HyBi WebSocket protocol.\n   *\n   * @param {Buffer} data The data to frame\n   * @param {Object} options Options object\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} options.readOnly Specifies whether `data` can be modified\n   * @param {Boolean} options.fin Specifies whether or not to set the FIN bit\n   * @param {Boolean} options.mask Specifies whether or not to mask `data`\n   * @param {Boolean} options.rsv1 Specifies whether or not to set the RSV1 bit\n   * @return {Buffer[]} The framed data as a list of `Buffer` instances\n   * @public\n   */\n  static frame (data, options) {\n    const merge = data.length < 1024 || (options.mask && options.readOnly);\n    var offset = options.mask ? 6 : 2;\n    var payloadLength = data.length;\n\n    if (data.length >= 65536) {\n      offset += 8;\n      payloadLength = 127;\n    } else if (data.length > 125) {\n      offset += 2;\n      payloadLength = 126;\n    }\n\n    const target = Buffer.allocUnsafe(merge ? data.length + offset : offset);\n\n    target[0] = options.fin ? options.opcode | 0x80 : options.opcode;\n    if (options.rsv1) target[0] |= 0x40;\n\n    if (payloadLength === 126) {\n      target.writeUInt16BE(data.length, 2, true);\n    } else if (payloadLength === 127) {\n      target.writeUInt32BE(0, 2, true);\n      target.writeUInt32BE(data.length, 6, true);\n    }\n\n    if (!options.mask) {\n      target[1] = payloadLength;\n      if (merge) {\n        data.copy(target, offset);\n        return [target];\n      }\n\n      return [target, data];\n    }\n\n    const mask = crypto.randomBytes(4);\n\n    target[1] = payloadLength | 0x80;\n    target[offset - 4] = mask[0];\n    target[offset - 3] = mask[1];\n    target[offset - 2] = mask[2];\n    target[offset - 1] = mask[3];\n\n    if (merge) {\n      bufferUtil.mask(data, mask, target, offset, data.length);\n      return [target];\n    }\n\n    bufferUtil.mask(data, mask, data, 0, data.length);\n    return [target, data];\n  }\n\n  /**\n   * Sends a close message to the other peer.\n   *\n   * @param {(Number|undefined)} code The status code component of the body\n   * @param {String} data The message component of the body\n   * @param {Boolean} mask Specifies whether or not to mask the message\n   * @param {Function} cb Callback\n   * @public\n   */\n  close (code, data, mask, cb) {\n    var buf;\n\n    if (code === undefined) {\n      code = 1000;\n    } else if (typeof code !== 'number' || !ErrorCodes.isValidErrorCode(code)) {\n      throw new Error('first argument must be a valid error code number');\n    }\n\n    if (data === undefined || data === '') {\n      if (code === 1000) {\n        buf = constants.EMPTY_BUFFER;\n      } else {\n        buf = Buffer.allocUnsafe(2);\n        buf.writeUInt16BE(code, 0, true);\n      }\n    } else {\n      buf = Buffer.allocUnsafe(2 + Buffer.byteLength(data));\n      buf.writeUInt16BE(code, 0, true);\n      buf.write(data, 2);\n    }\n\n    if (this._deflating) {\n      this.enqueue([this.doClose, buf, mask, cb]);\n    } else {\n      this.doClose(buf, mask, cb);\n    }\n  }\n\n  /**\n   * Frames and sends a close message.\n   *\n   * @param {Buffer} data The message to send\n   * @param {Boolean} mask Specifies whether or not to mask `data`\n   * @param {Function} cb Callback\n   * @private\n   */\n  doClose (data, mask, cb) {\n    this.sendFrame(Sender.frame(data, {\n      fin: true,\n      rsv1: false,\n      opcode: 0x08,\n      mask,\n      readOnly: false\n    }), cb);\n  }\n\n  /**\n   * Sends a ping message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} mask Specifies whether or not to mask `data`\n   * @public\n   */\n  ping (data, mask) {\n    var readOnly = true;\n\n    if (!Buffer.isBuffer(data)) {\n      if (data instanceof ArrayBuffer) {\n        data = Buffer.from(data);\n      } else if (ArrayBuffer.isView(data)) {\n        data = viewToBuffer(data);\n      } else {\n        data = Buffer.from(data);\n        readOnly = false;\n      }\n    }\n\n    if (this._deflating) {\n      this.enqueue([this.doPing, data, mask, readOnly]);\n    } else {\n      this.doPing(data, mask, readOnly);\n    }\n  }\n\n  /**\n   * Frames and sends a ping message.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} mask Specifies whether or not to mask `data`\n   * @param {Boolean} readOnly Specifies whether `data` can be modified\n   * @private\n   */\n  doPing (data, mask, readOnly) {\n    this.sendFrame(Sender.frame(data, {\n      fin: true,\n      rsv1: false,\n      opcode: 0x09,\n      mask,\n      readOnly\n    }));\n  }\n\n  /**\n   * Sends a pong message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} mask Specifies whether or not to mask `data`\n   * @public\n   */\n  pong (data, mask) {\n    var readOnly = true;\n\n    if (!Buffer.isBuffer(data)) {\n      if (data instanceof ArrayBuffer) {\n        data = Buffer.from(data);\n      } else if (ArrayBuffer.isView(data)) {\n        data = viewToBuffer(data);\n      } else {\n        data = Buffer.from(data);\n        readOnly = false;\n      }\n    }\n\n    if (this._deflating) {\n      this.enqueue([this.doPong, data, mask, readOnly]);\n    } else {\n      this.doPong(data, mask, readOnly);\n    }\n  }\n\n  /**\n   * Frames and sends a pong message.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} mask Specifies whether or not to mask `data`\n   * @param {Boolean} readOnly Specifies whether `data` can be modified\n   * @private\n   */\n  doPong (data, mask, readOnly) {\n    this.sendFrame(Sender.frame(data, {\n      fin: true,\n      rsv1: false,\n      opcode: 0x0a,\n      mask,\n      readOnly\n    }));\n  }\n\n  /**\n   * Sends a data message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Object} options Options object\n   * @param {Boolean} options.compress Specifies whether or not to compress `data`\n   * @param {Boolean} options.binary Specifies whether `data` is binary or text\n   * @param {Boolean} options.fin Specifies whether the fragment is the last one\n   * @param {Boolean} options.mask Specifies whether or not to mask `data`\n   * @param {Function} cb Callback\n   * @public\n   */\n  send (data, options, cb) {\n    var opcode = options.binary ? 2 : 1;\n    var rsv1 = options.compress;\n    var readOnly = true;\n\n    if (!Buffer.isBuffer(data)) {\n      if (data instanceof ArrayBuffer) {\n        data = Buffer.from(data);\n      } else if (ArrayBuffer.isView(data)) {\n        data = viewToBuffer(data);\n      } else {\n        data = Buffer.from(data);\n        readOnly = false;\n      }\n    }\n\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    if (this._firstFragment) {\n      this._firstFragment = false;\n      if (rsv1 && perMessageDeflate) {\n        rsv1 = data.length >= perMessageDeflate._threshold;\n      }\n      this._compress = rsv1;\n    } else {\n      rsv1 = false;\n      opcode = 0;\n    }\n\n    if (options.fin) this._firstFragment = true;\n\n    if (perMessageDeflate) {\n      const opts = {\n        fin: options.fin,\n        rsv1,\n        opcode,\n        mask: options.mask,\n        readOnly\n      };\n\n      if (this._deflating) {\n        this.enqueue([this.dispatch, data, this._compress, opts, cb]);\n      } else {\n        this.dispatch(data, this._compress, opts, cb);\n      }\n    } else {\n      this.sendFrame(Sender.frame(data, {\n        fin: options.fin,\n        rsv1: false,\n        opcode,\n        mask: options.mask,\n        readOnly\n      }), cb);\n    }\n  }\n\n  /**\n   * Dispatches a data message.\n   *\n   * @param {Buffer} data The message to send\n   * @param {Boolean} compress Specifies whether or not to compress `data`\n   * @param {Object} options Options object\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} options.readOnly Specifies whether `data` can be modified\n   * @param {Boolean} options.fin Specifies whether or not to set the FIN bit\n   * @param {Boolean} options.mask Specifies whether or not to mask `data`\n   * @param {Boolean} options.rsv1 Specifies whether or not to set the RSV1 bit\n   * @param {Function} cb Callback\n   * @private\n   */\n  dispatch (data, compress, options, cb) {\n    if (!compress) {\n      this.sendFrame(Sender.frame(data, options), cb);\n      return;\n    }\n\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    this._deflating = true;\n    perMessageDeflate.compress(data, options.fin, (_, buf) => {\n      options.readOnly = false;\n      this.sendFrame(Sender.frame(buf, options), cb);\n      this._deflating = false;\n      this.dequeue();\n    });\n  }\n\n  /**\n   * Executes queued send operations.\n   *\n   * @private\n   */\n  dequeue () {\n    while (!this._deflating && this._queue.length) {\n      const params = this._queue.shift();\n\n      this._bufferedBytes -= params[1].length;\n      params[0].apply(this, params.slice(1));\n    }\n  }\n\n  /**\n   * Enqueues a send operation.\n   *\n   * @param {Array} params Send operation parameters.\n   * @private\n   */\n  enqueue (params) {\n    this._bufferedBytes += params[1].length;\n    this._queue.push(params);\n  }\n\n  /**\n   * Sends a frame.\n   *\n   * @param {Buffer[]} list The frame to send\n   * @param {Function} cb Callback\n   * @private\n   */\n  sendFrame (list, cb) {\n    if (list.length === 2) {\n      this._socket.write(list[0]);\n      this._socket.write(list[1], cb);\n    } else {\n      this._socket.write(list[0], cb);\n    }\n  }\n}\n\nmodule.exports = Sender;\n\n/**\n * Converts an `ArrayBuffer` view into a buffer.\n *\n * @param {(DataView|TypedArray)} view The view to convert\n * @return {Buffer} Converted view\n * @private\n */\nfunction viewToBuffer (view) {\n  const buf = Buffer.from(view.buffer);\n\n  if (view.byteLength !== view.buffer.byteLength) {\n    return buf.slice(view.byteOffset, view.byteOffset + view.byteLength);\n  }\n\n  return buf;\n}\n","/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst crypto = require('crypto');\nconst Ultron = require('ultron');\nconst https = require('https');\nconst http = require('http');\nconst url = require('url');\n\nconst PerMessageDeflate = require('./PerMessageDeflate');\nconst EventTarget = require('./EventTarget');\nconst Extensions = require('./Extensions');\nconst constants = require('./Constants');\nconst Receiver = require('./Receiver');\nconst Sender = require('./Sender');\n\nconst protocolVersions = [8, 13];\nconst closeTimeout = 30 * 1000; // Allow 30 seconds to terminate the connection cleanly.\n\n/**\n * Class representing a WebSocket.\n *\n * @extends EventEmitter\n */\nclass WebSocket extends EventEmitter {\n  /**\n   * Create a new `WebSocket`.\n   *\n   * @param {String} address The URL to which to connect\n   * @param {(String|String[])} protocols The subprotocols\n   * @param {Object} options Connection options\n   */\n  constructor (address, protocols, options) {\n    super();\n\n    if (!protocols) {\n      protocols = [];\n    } else if (typeof protocols === 'string') {\n      protocols = [protocols];\n    } else if (!Array.isArray(protocols)) {\n      options = protocols;\n      protocols = [];\n    }\n\n    this.readyState = WebSocket.CONNECTING;\n    this.bytesReceived = 0;\n    this.extensions = {};\n    this.protocol = '';\n\n    this._binaryType = constants.BINARY_TYPES[0];\n    this._finalize = this.finalize.bind(this);\n    this._closeFrameReceived = false;\n    this._closeFrameSent = false;\n    this._closeMessage = '';\n    this._closeTimer = null;\n    this._finalized = false;\n    this._closeCode = 1006;\n    this._receiver = null;\n    this._sender = null;\n    this._socket = null;\n    this._ultron = null;\n\n    if (Array.isArray(address)) {\n      initAsServerClient.call(this, address[0], address[1], options);\n    } else {\n      initAsClient.call(this, address, protocols, options);\n    }\n  }\n\n  get CONNECTING () { return WebSocket.CONNECTING; }\n  get CLOSING () { return WebSocket.CLOSING; }\n  get CLOSED () { return WebSocket.CLOSED; }\n  get OPEN () { return WebSocket.OPEN; }\n\n  /**\n   * @type {Number}\n   */\n  get bufferedAmount () {\n    var amount = 0;\n\n    if (this._socket) {\n      amount = this._socket.bufferSize + this._sender._bufferedBytes;\n    }\n    return amount;\n  }\n\n  /**\n   * This deviates from the WHATWG interface since ws doesn't support the required\n   * default \"blob\" type (instead we define a custom \"nodebuffer\" type).\n   *\n   * @type {String}\n   */\n  get binaryType () {\n    return this._binaryType;\n  }\n\n  set binaryType (type) {\n    if (constants.BINARY_TYPES.indexOf(type) < 0) return;\n\n    this._binaryType = type;\n\n    //\n    // Allow to change `binaryType` on the fly.\n    //\n    if (this._receiver) this._receiver._binaryType = type;\n  }\n\n  /**\n   * Set up the socket and the internal resources.\n   *\n   * @param {net.Socket} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @private\n   */\n  setSocket (socket, head) {\n    socket.setTimeout(0);\n    socket.setNoDelay();\n\n    this._receiver = new Receiver(this.extensions, this._maxPayload, this.binaryType);\n    this._sender = new Sender(socket, this.extensions);\n    this._ultron = new Ultron(socket);\n    this._socket = socket;\n\n    this._ultron.on('close', this._finalize);\n    this._ultron.on('error', this._finalize);\n    this._ultron.on('end', this._finalize);\n\n    if (head.length > 0) socket.unshift(head);\n\n    this._ultron.on('data', (data) => {\n      this.bytesReceived += data.length;\n      this._receiver.add(data);\n    });\n\n    this._receiver.onmessage = (data) => this.emit('message', data);\n    this._receiver.onping = (data) => {\n      this.pong(data, !this._isServer, true);\n      this.emit('ping', data);\n    };\n    this._receiver.onpong = (data) => this.emit('pong', data);\n    this._receiver.onclose = (code, reason) => {\n      this._closeFrameReceived = true;\n      this._closeMessage = reason;\n      this._closeCode = code;\n      if (!this._finalized) this.close(code, reason);\n    };\n    this._receiver.onerror = (error, code) => {\n      this._closeMessage = '';\n      this._closeCode = code;\n\n      //\n      // Ensure that the error is emitted even if `WebSocket#finalize()` has\n      // already been called.\n      //\n      this.readyState = WebSocket.CLOSING;\n      this.emit('error', error);\n      this.finalize(true);\n    };\n\n    this.readyState = WebSocket.OPEN;\n    this.emit('open');\n  }\n\n  /**\n   * Clean up and release internal resources.\n   *\n   * @param {(Boolean|Error)} error Indicates whether or not an error occurred\n   * @private\n   */\n  finalize (error) {\n    if (this._finalized) return;\n\n    this.readyState = WebSocket.CLOSING;\n    this._finalized = true;\n\n    if (typeof error === 'object') this.emit('error', error);\n    if (!this._socket) return this.emitClose();\n\n    clearTimeout(this._closeTimer);\n    this._closeTimer = null;\n\n    this._ultron.destroy();\n    this._ultron = null;\n\n    this._socket.on('error', constants.NOOP);\n\n    if (!error) this._socket.end();\n    else this._socket.destroy();\n\n    this._socket = null;\n    this._sender = null;\n\n    this._receiver.cleanup(() => this.emitClose());\n    this._receiver = null;\n  }\n\n  /**\n   * Emit the `close` event.\n   *\n   * @private\n   */\n  emitClose () {\n    this.readyState = WebSocket.CLOSED;\n\n    this.emit('close', this._closeCode, this._closeMessage);\n\n    if (this.extensions[PerMessageDeflate.extensionName]) {\n      this.extensions[PerMessageDeflate.extensionName].cleanup();\n    }\n\n    this.extensions = null;\n\n    this.removeAllListeners();\n  }\n\n  /**\n   * Pause the socket stream.\n   *\n   * @public\n   */\n  pause () {\n    if (this.readyState !== WebSocket.OPEN) throw new Error('not opened');\n\n    this._socket.pause();\n  }\n\n  /**\n   * Resume the socket stream\n   *\n   * @public\n   */\n  resume () {\n    if (this.readyState !== WebSocket.OPEN) throw new Error('not opened');\n\n    this._socket.resume();\n  }\n\n  /**\n   * Start a closing handshake.\n   *\n   *            +----------+     +-----------+   +----------+\n   *     + - - -|ws.close()|---->|close frame|-->|ws.close()|- - - -\n   *            +----------+     +-----------+   +----------+       |\n   *     |      +----------+     +-----------+         |\n   *            |ws.close()|<----|close frame|<--------+            |\n   *            +----------+     +-----------+         |\n   *  CLOSING         |              +---+             |         CLOSING\n   *                  |          +---|fin|<------------+\n   *     |            |          |   +---+                          |\n   *                  |          |   +---+      +-------------+\n   *     |            +----------+-->|fin|----->|ws.finalize()| - - +\n   *                             |   +---+      +-------------+\n   *     |     +-------------+   |\n   *      - - -|ws.finalize()|<--+\n   *           +-------------+\n   *\n   * @param {Number} code Status code explaining why the connection is closing\n   * @param {String} data A string explaining why the connection is closing\n   * @public\n   */\n  close (code, data) {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      this._req.abort();\n      this.finalize(new Error('closed before the connection is established'));\n      return;\n    }\n\n    if (this.readyState === WebSocket.CLOSING) {\n      if (this._closeFrameSent && this._closeFrameReceived) this._socket.end();\n      return;\n    }\n\n    this.readyState = WebSocket.CLOSING;\n    this._sender.close(code, data, !this._isServer, (err) => {\n      //\n      // This error is handled by the `'error'` listener on the socket. We only\n      // want to know if the close frame has been sent here.\n      //\n      if (err) return;\n\n      this._closeFrameSent = true;\n\n      if (!this._finalized) {\n        if (this._closeFrameReceived) this._socket.end();\n\n        //\n        // Ensure that the connection is cleaned up even when the closing\n        // handshake fails.\n        //\n        this._closeTimer = setTimeout(this._finalize, closeTimeout, true);\n      }\n    });\n  }\n\n  /**\n   * Send a ping message.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} mask Indicates whether or not to mask `data`\n   * @param {Boolean} failSilently Indicates whether or not to throw if `readyState` isn't `OPEN`\n   * @public\n   */\n  ping (data, mask, failSilently) {\n    if (this.readyState !== WebSocket.OPEN) {\n      if (failSilently) return;\n      throw new Error('not opened');\n    }\n\n    if (typeof data === 'number') data = data.toString();\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.ping(data || constants.EMPTY_BUFFER, mask);\n  }\n\n  /**\n   * Send a pong message.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} mask Indicates whether or not to mask `data`\n   * @param {Boolean} failSilently Indicates whether or not to throw if `readyState` isn't `OPEN`\n   * @public\n   */\n  pong (data, mask, failSilently) {\n    if (this.readyState !== WebSocket.OPEN) {\n      if (failSilently) return;\n      throw new Error('not opened');\n    }\n\n    if (typeof data === 'number') data = data.toString();\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.pong(data || constants.EMPTY_BUFFER, mask);\n  }\n\n  /**\n   * Send a data message.\n   *\n   * @param {*} data The message to send\n   * @param {Object} options Options object\n   * @param {Boolean} options.compress Specifies whether or not to compress `data`\n   * @param {Boolean} options.binary Specifies whether `data` is binary or text\n   * @param {Boolean} options.fin Specifies whether the fragment is the last one\n   * @param {Boolean} options.mask Specifies whether or not to mask `data`\n   * @param {Function} cb Callback which is executed when data is written out\n   * @public\n   */\n  send (data, options, cb) {\n    if (typeof options === 'function') {\n      cb = options;\n      options = {};\n    }\n\n    if (this.readyState !== WebSocket.OPEN) {\n      if (cb) cb(new Error('not opened'));\n      else throw new Error('not opened');\n      return;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    const opts = Object.assign({\n      binary: typeof data !== 'string',\n      mask: !this._isServer,\n      compress: true,\n      fin: true\n    }, options);\n\n    if (!this.extensions[PerMessageDeflate.extensionName]) {\n      opts.compress = false;\n    }\n\n    this._sender.send(data || constants.EMPTY_BUFFER, opts, cb);\n  }\n\n  /**\n   * Forcibly close the connection.\n   *\n   * @public\n   */\n  terminate () {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      this._req.abort();\n      this.finalize(new Error('closed before the connection is established'));\n      return;\n    }\n\n    this.finalize(true);\n  }\n}\n\nWebSocket.CONNECTING = 0;\nWebSocket.OPEN = 1;\nWebSocket.CLOSING = 2;\nWebSocket.CLOSED = 3;\n\n//\n// Add the `onopen`, `onerror`, `onclose`, and `onmessage` attributes.\n// See https://html.spec.whatwg.org/multipage/comms.html#the-websocket-interface\n//\n['open', 'error', 'close', 'message'].forEach((method) => {\n  Object.defineProperty(WebSocket.prototype, `on${method}`, {\n    /**\n     * Return the listener of the event.\n     *\n     * @return {(Function|undefined)} The event listener or `undefined`\n     * @public\n     */\n    get () {\n      const listeners = this.listeners(method);\n      for (var i = 0; i < listeners.length; i++) {\n        if (listeners[i]._listener) return listeners[i]._listener;\n      }\n    },\n    /**\n     * Add a listener for the event.\n     *\n     * @param {Function} listener The listener to add\n     * @public\n     */\n    set (listener) {\n      const listeners = this.listeners(method);\n      for (var i = 0; i < listeners.length; i++) {\n        //\n        // Remove only the listeners added via `addEventListener`.\n        //\n        if (listeners[i]._listener) this.removeListener(method, listeners[i]);\n      }\n      this.addEventListener(method, listener);\n    }\n  });\n});\n\nWebSocket.prototype.addEventListener = EventTarget.addEventListener;\nWebSocket.prototype.removeEventListener = EventTarget.removeEventListener;\n\nmodule.exports = WebSocket;\n\n/**\n * Initialize a WebSocket server client.\n *\n * @param {http.IncomingMessage} req The request object\n * @param {net.Socket} socket The network socket between the server and client\n * @param {Buffer} head The first packet of the upgraded stream\n * @param {Object} options WebSocket attributes\n * @param {Number} options.protocolVersion The WebSocket protocol version\n * @param {Object} options.extensions The negotiated extensions\n * @param {Number} options.maxPayload The maximum allowed message size\n * @param {String} options.protocol The chosen subprotocol\n * @private\n */\nfunction initAsServerClient (socket, head, options) {\n  this.protocolVersion = options.protocolVersion;\n  this._maxPayload = options.maxPayload;\n  this.extensions = options.extensions;\n  this.protocol = options.protocol;\n\n  this._isServer = true;\n\n  this.setSocket(socket, head);\n}\n\n/**\n * Initialize a WebSocket client.\n *\n * @param {String} address The URL to which to connect\n * @param {String[]} protocols The list of subprotocols\n * @param {Object} options Connection options\n * @param {String} options.protocol Value of the `Sec-WebSocket-Protocol` header\n * @param {(Boolean|Object)} options.perMessageDeflate Enable/disable permessage-deflate\n * @param {Number} options.handshakeTimeout Timeout in milliseconds for the handshake request\n * @param {String} options.localAddress Local interface to bind for network connections\n * @param {Number} options.protocolVersion Value of the `Sec-WebSocket-Version` header\n * @param {Object} options.headers An object containing request headers\n * @param {String} options.origin Value of the `Origin` or `Sec-WebSocket-Origin` header\n * @param {http.Agent} options.agent Use the specified Agent\n * @param {String} options.host Value of the `Host` header\n * @param {Number} options.family IP address family to use during hostname lookup (4 or 6).\n * @param {Function} options.checkServerIdentity A function to validate the server hostname\n * @param {Boolean} options.rejectUnauthorized Verify or not the server certificate\n * @param {String} options.passphrase The passphrase for the private key or pfx\n * @param {String} options.ciphers The ciphers to use or exclude\n * @param {String} options.ecdhCurve The curves for ECDH key agreement to use or exclude\n * @param {(String|String[]|Buffer|Buffer[])} options.cert The certificate key\n * @param {(String|String[]|Buffer|Buffer[])} options.key The private key\n * @param {(String|Buffer)} options.pfx The private key, certificate, and CA certs\n * @param {(String|String[]|Buffer|Buffer[])} options.ca Trusted certificates\n * @private\n */\nfunction initAsClient (address, protocols, options) {\n  options = Object.assign({\n    protocolVersion: protocolVersions[1],\n    protocol: protocols.join(','),\n    perMessageDeflate: true,\n    handshakeTimeout: null,\n    localAddress: null,\n    headers: null,\n    family: null,\n    origin: null,\n    agent: null,\n    host: null,\n\n    //\n    // SSL options.\n    //\n    checkServerIdentity: null,\n    rejectUnauthorized: null,\n    passphrase: null,\n    ciphers: null,\n    ecdhCurve: null,\n    cert: null,\n    key: null,\n    pfx: null,\n    ca: null\n  }, options);\n\n  if (protocolVersions.indexOf(options.protocolVersion) === -1) {\n    throw new Error(\n      `unsupported protocol version: ${options.protocolVersion} ` +\n      `(supported versions: ${protocolVersions.join(', ')})`\n    );\n  }\n\n  this.protocolVersion = options.protocolVersion;\n  this._isServer = false;\n  this.url = address;\n\n  const serverUrl = url.parse(address);\n  const isUnixSocket = serverUrl.protocol === 'ws+unix:';\n\n  if (!serverUrl.host && (!isUnixSocket || !serverUrl.path)) {\n    throw new Error('invalid url');\n  }\n\n  const isSecure = serverUrl.protocol === 'wss:' || serverUrl.protocol === 'https:';\n  const key = crypto.randomBytes(16).toString('base64');\n  const httpObj = isSecure ? https : http;\n  var perMessageDeflate;\n\n  const requestOptions = {\n    port: serverUrl.port || (isSecure ? 443 : 80),\n    host: serverUrl.hostname,\n    path: '/',\n    headers: {\n      'Sec-WebSocket-Version': options.protocolVersion,\n      'Sec-WebSocket-Key': key,\n      'Connection': 'Upgrade',\n      'Upgrade': 'websocket'\n    }\n  };\n\n  if (options.headers) Object.assign(requestOptions.headers, options.headers);\n  if (options.perMessageDeflate) {\n    perMessageDeflate = new PerMessageDeflate(\n      options.perMessageDeflate !== true ? options.perMessageDeflate : {},\n      false\n    );\n    requestOptions.headers['Sec-WebSocket-Extensions'] = Extensions.format({\n      [PerMessageDeflate.extensionName]: perMessageDeflate.offer()\n    });\n  }\n  if (options.protocol) {\n    requestOptions.headers['Sec-WebSocket-Protocol'] = options.protocol;\n  }\n  if (options.origin) {\n    if (options.protocolVersion < 13) {\n      requestOptions.headers['Sec-WebSocket-Origin'] = options.origin;\n    } else {\n      requestOptions.headers.Origin = options.origin;\n    }\n  }\n  if (options.host) requestOptions.headers.Host = options.host;\n  if (serverUrl.auth) requestOptions.auth = serverUrl.auth;\n\n  if (options.localAddress) requestOptions.localAddress = options.localAddress;\n  if (options.family) requestOptions.family = options.family;\n\n  if (isUnixSocket) {\n    const parts = serverUrl.path.split(':');\n\n    requestOptions.socketPath = parts[0];\n    requestOptions.path = parts[1];\n  } else if (serverUrl.path) {\n    //\n    // Make sure that path starts with `/`.\n    //\n    if (serverUrl.path.charAt(0) !== '/') {\n      requestOptions.path = `/${serverUrl.path}`;\n    } else {\n      requestOptions.path = serverUrl.path;\n    }\n  }\n\n  var agent = options.agent;\n\n  //\n  // A custom agent is required for these options.\n  //\n  if (\n    options.rejectUnauthorized != null ||\n    options.checkServerIdentity ||\n    options.passphrase ||\n    options.ciphers ||\n    options.ecdhCurve ||\n    options.cert ||\n    options.key ||\n    options.pfx ||\n    options.ca\n  ) {\n    if (options.passphrase) requestOptions.passphrase = options.passphrase;\n    if (options.ciphers) requestOptions.ciphers = options.ciphers;\n    if (options.ecdhCurve) requestOptions.ecdhCurve = options.ecdhCurve;\n    if (options.cert) requestOptions.cert = options.cert;\n    if (options.key) requestOptions.key = options.key;\n    if (options.pfx) requestOptions.pfx = options.pfx;\n    if (options.ca) requestOptions.ca = options.ca;\n    if (options.checkServerIdentity) {\n      requestOptions.checkServerIdentity = options.checkServerIdentity;\n    }\n    if (options.rejectUnauthorized != null) {\n      requestOptions.rejectUnauthorized = options.rejectUnauthorized;\n    }\n\n    if (!agent) agent = new httpObj.Agent(requestOptions);\n  }\n\n  if (agent) requestOptions.agent = agent;\n\n  this._req = httpObj.get(requestOptions);\n\n  if (options.handshakeTimeout) {\n    this._req.setTimeout(options.handshakeTimeout, () => {\n      this._req.abort();\n      this.finalize(new Error('opening handshake has timed out'));\n    });\n  }\n\n  this._req.on('error', (error) => {\n    if (this._req.aborted) return;\n\n    this._req = null;\n    this.finalize(error);\n  });\n\n  this._req.on('response', (res) => {\n    if (!this.emit('unexpected-response', this._req, res)) {\n      this._req.abort();\n      this.finalize(new Error(`unexpected server response (${res.statusCode})`));\n    }\n  });\n\n  this._req.on('upgrade', (res, socket, head) => {\n    this.emit('headers', res.headers, res);\n\n    //\n    // The user may have closed the connection from a listener of the `headers`\n    // event.\n    //\n    if (this.readyState !== WebSocket.CONNECTING) return;\n\n    this._req = null;\n\n    const digest = crypto.createHash('sha1')\n      .update(key + constants.GUID, 'binary')\n      .digest('base64');\n\n    if (res.headers['sec-websocket-accept'] !== digest) {\n      socket.destroy();\n      return this.finalize(new Error('invalid server key'));\n    }\n\n    const serverProt = res.headers['sec-websocket-protocol'];\n    const protList = (options.protocol || '').split(/, */);\n    var protError;\n\n    if (!options.protocol && serverProt) {\n      protError = 'server sent a subprotocol even though none requested';\n    } else if (options.protocol && !serverProt) {\n      protError = 'server sent no subprotocol even though requested';\n    } else if (serverProt && protList.indexOf(serverProt) === -1) {\n      protError = 'server responded with an invalid protocol';\n    }\n\n    if (protError) {\n      socket.destroy();\n      return this.finalize(new Error(protError));\n    }\n\n    if (serverProt) this.protocol = serverProt;\n\n    if (perMessageDeflate) {\n      try {\n        const serverExtensions = Extensions.parse(\n          res.headers['sec-websocket-extensions']\n        );\n\n        if (serverExtensions[PerMessageDeflate.extensionName]) {\n          perMessageDeflate.accept(\n            serverExtensions[PerMessageDeflate.extensionName]\n          );\n          this.extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n        }\n      } catch (err) {\n        socket.destroy();\n        this.finalize(new Error('invalid Sec-WebSocket-Extensions header'));\n        return;\n      }\n    }\n\n    this.setSocket(socket, head);\n  });\n}\n","/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\n'use strict';\n\nconst safeBuffer = require('safe-buffer');\nconst EventEmitter = require('events');\nconst crypto = require('crypto');\nconst Ultron = require('ultron');\nconst http = require('http');\nconst url = require('url');\n\nconst PerMessageDeflate = require('./PerMessageDeflate');\nconst Extensions = require('./Extensions');\nconst constants = require('./Constants');\nconst WebSocket = require('./WebSocket');\n\nconst Buffer = safeBuffer.Buffer;\n\n/**\n * Class representing a WebSocket server.\n *\n * @extends EventEmitter\n */\nclass WebSocketServer extends EventEmitter {\n  /**\n   * Create a `WebSocketServer` instance.\n   *\n   * @param {Object} options Configuration options\n   * @param {String} options.host The hostname where to bind the server\n   * @param {Number} options.port The port where to bind the server\n   * @param {http.Server} options.server A pre-created HTTP/S server to use\n   * @param {Function} options.verifyClient An hook to reject connections\n   * @param {Function} options.handleProtocols An hook to handle protocols\n   * @param {String} options.path Accept only connections matching this path\n   * @param {Boolean} options.noServer Enable no server mode\n   * @param {Boolean} options.clientTracking Specifies whether or not to track clients\n   * @param {(Boolean|Object)} options.perMessageDeflate Enable/disable permessage-deflate\n   * @param {Number} options.maxPayload The maximum allowed message size\n   * @param {Function} callback A listener for the `listening` event\n   */\n  constructor (options, callback) {\n    super();\n\n    options = Object.assign({\n      maxPayload: 100 * 1024 * 1024,\n      perMessageDeflate: false,\n      handleProtocols: null,\n      clientTracking: true,\n      verifyClient: null,\n      noServer: false,\n      backlog: null, // use default (511 as implemented in net.js)\n      server: null,\n      host: null,\n      path: null,\n      port: null\n    }, options);\n\n    if (options.port == null && !options.server && !options.noServer) {\n      throw new TypeError('missing or invalid options');\n    }\n\n    if (options.port != null) {\n      this._server = http.createServer((req, res) => {\n        const body = http.STATUS_CODES[426];\n\n        res.writeHead(426, {\n          'Content-Length': body.length,\n          'Content-Type': 'text/plain'\n        });\n        res.end(body);\n      });\n      this._server.listen(options.port, options.host, options.backlog, callback);\n    } else if (options.server) {\n      this._server = options.server;\n    }\n\n    if (this._server) {\n      this._ultron = new Ultron(this._server);\n      this._ultron.on('listening', () => this.emit('listening'));\n      this._ultron.on('error', (err) => this.emit('error', err));\n      this._ultron.on('upgrade', (req, socket, head) => {\n        this.handleUpgrade(req, socket, head, (client) => {\n          this.emit('connection', client, req);\n        });\n      });\n    }\n\n    if (options.perMessageDeflate === true) options.perMessageDeflate = {};\n    if (options.clientTracking) this.clients = new Set();\n    this.options = options;\n  }\n\n  /**\n   * Close the server.\n   *\n   * @param {Function} cb Callback\n   * @public\n   */\n  close (cb) {\n    //\n    // Terminate all associated clients.\n    //\n    if (this.clients) {\n      for (const client of this.clients) client.terminate();\n    }\n\n    const server = this._server;\n\n    if (server) {\n      this._ultron.destroy();\n      this._ultron = this._server = null;\n\n      //\n      // Close the http server if it was internally created.\n      //\n      if (this.options.port != null) return server.close(cb);\n    }\n\n    if (cb) cb();\n  }\n\n  /**\n   * See if a given request should be handled by this server instance.\n   *\n   * @param {http.IncomingMessage} req Request object to inspect\n   * @return {Boolean} `true` if the request is valid, else `false`\n   * @public\n   */\n  shouldHandle (req) {\n    if (this.options.path && url.parse(req.url).pathname !== this.options.path) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Handle a HTTP Upgrade request.\n   *\n   * @param {http.IncomingMessage} req The request object\n   * @param {net.Socket} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @public\n   */\n  handleUpgrade (req, socket, head, cb) {\n    socket.on('error', socketError);\n\n    const version = +req.headers['sec-websocket-version'];\n    const extensions = {};\n\n    if (\n      req.method !== 'GET' || req.headers.upgrade.toLowerCase() !== 'websocket' ||\n      !req.headers['sec-websocket-key'] || (version !== 8 && version !== 13) ||\n      !this.shouldHandle(req)\n    ) {\n      return abortConnection(socket, 400);\n    }\n\n    if (this.options.perMessageDeflate) {\n      const perMessageDeflate = new PerMessageDeflate(\n        this.options.perMessageDeflate,\n        true,\n        this.options.maxPayload\n      );\n\n      try {\n        const offers = Extensions.parse(\n          req.headers['sec-websocket-extensions']\n        );\n\n        if (offers[PerMessageDeflate.extensionName]) {\n          perMessageDeflate.accept(offers[PerMessageDeflate.extensionName]);\n          extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n        }\n      } catch (err) {\n        return abortConnection(socket, 400);\n      }\n    }\n\n    var protocol = (req.headers['sec-websocket-protocol'] || '').split(/, */);\n\n    //\n    // Optionally call external protocol selection handler.\n    //\n    if (this.options.handleProtocols) {\n      protocol = this.options.handleProtocols(protocol, req);\n      if (protocol === false) return abortConnection(socket, 401);\n    } else {\n      protocol = protocol[0];\n    }\n\n    //\n    // Optionally call external client verification handler.\n    //\n    if (this.options.verifyClient) {\n      const info = {\n        origin: req.headers[`${version === 8 ? 'sec-websocket-origin' : 'origin'}`],\n        secure: !!(req.connection.authorized || req.connection.encrypted),\n        req\n      };\n\n      if (this.options.verifyClient.length === 2) {\n        this.options.verifyClient(info, (verified, code, message) => {\n          if (!verified) return abortConnection(socket, code || 401, message);\n\n          this.completeUpgrade(\n            protocol,\n            extensions,\n            version,\n            req,\n            socket,\n            head,\n            cb\n          );\n        });\n        return;\n      }\n\n      if (!this.options.verifyClient(info)) return abortConnection(socket, 401);\n    }\n\n    this.completeUpgrade(protocol, extensions, version, req, socket, head, cb);\n  }\n\n  /**\n   * Upgrade the connection to WebSocket.\n   *\n   * @param {String} protocol The chosen subprotocol\n   * @param {Object} extensions The accepted extensions\n   * @param {Number} version The WebSocket protocol version\n   * @param {http.IncomingMessage} req The request object\n   * @param {net.Socket} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @private\n   */\n  completeUpgrade (protocol, extensions, version, req, socket, head, cb) {\n    //\n    // Destroy the socket if the client has already sent a FIN packet.\n    //\n    if (!socket.readable || !socket.writable) return socket.destroy();\n\n    const key = crypto.createHash('sha1')\n      .update(req.headers['sec-websocket-key'] + constants.GUID, 'binary')\n      .digest('base64');\n\n    const headers = [\n      'HTTP/1.1 101 Switching Protocols',\n      'Upgrade: websocket',\n      'Connection: Upgrade',\n      `Sec-WebSocket-Accept: ${key}`\n    ];\n\n    if (protocol) headers.push(`Sec-WebSocket-Protocol: ${protocol}`);\n    if (extensions[PerMessageDeflate.extensionName]) {\n      const params = extensions[PerMessageDeflate.extensionName].params;\n      const value = Extensions.format({\n        [PerMessageDeflate.extensionName]: [params]\n      });\n      headers.push(`Sec-WebSocket-Extensions: ${value}`);\n    }\n\n    //\n    // Allow external modification/inspection of handshake headers.\n    //\n    this.emit('headers', headers, req);\n\n    socket.write(headers.concat('\\r\\n').join('\\r\\n'));\n\n    const client = new WebSocket([socket, head], null, {\n      maxPayload: this.options.maxPayload,\n      protocolVersion: version,\n      extensions,\n      protocol\n    });\n\n    if (this.clients) {\n      this.clients.add(client);\n      client.on('close', () => this.clients.delete(client));\n    }\n\n    socket.removeListener('error', socketError);\n    cb(client);\n  }\n}\n\nmodule.exports = WebSocketServer;\n\n/**\n * Handle premature socket errors.\n *\n * @private\n */\nfunction socketError () {\n  this.destroy();\n}\n\n/**\n * Close the connection when preconditions are not fulfilled.\n *\n * @param {net.Socket} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} [message] The HTTP response body\n * @private\n */\nfunction abortConnection (socket, code, message) {\n  if (socket.writable) {\n    message = message || http.STATUS_CODES[code];\n    socket.write(\n      `HTTP/1.1 ${code} ${http.STATUS_CODES[code]}\\r\\n` +\n      'Connection: close\\r\\n' +\n      'Content-type: text/html\\r\\n' +\n      `Content-Length: ${Buffer.byteLength(message)}\\r\\n` +\n      '\\r\\n' +\n      message\n    );\n  }\n\n  socket.removeListener('error', socketError);\n  socket.destroy();\n}\n","/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\n'use strict';\n\nconst WebSocket = require('./lib/WebSocket');\n\nWebSocket.Server = require('./lib/WebSocketServer');\nWebSocket.Receiver = require('./lib/Receiver');\nWebSocket.Sender = require('./lib/Sender');\n\nmodule.exports = WebSocket;\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2017 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n\nimport { SubscriberTopic } from \"./subscriber-topic\"\nimport Subscription from \"./subscription\"\nimport * as utils from \"./utils\"\nimport WebSocket from \"ws\"\n\nexport class SubscriberBase {\n  private RETRY_SYNC_DELAY = 2.5 * 1000 // 2.5 seconds in milliseconds\n\n  private connectedSocketPromise: Promise<any> = null\n  private subscribeTopics: Array<SubscriberTopic<any>> = []\n  private unsubscribeTopics: Array<SubscriberTopic<any>> = []\n\n  constructor(private url: string) {}\n\n  protected subscribe<T>(newTopic: SubscriberTopic<any>): Subscription<T> {\n    var topic = this.findExistingOrAddNewTopic(newTopic)\n    var subscription = new Subscription<T>()\n    topic.add(subscription)\n    var unsubscribe = this.createUnsubscribeFunction(topic, subscription)\n    subscription.setUnsubscribeFn(unsubscribe)\n    this.syncTopicSubscriptions()\n    return subscription\n  }\n\n  private findExistingOrAddNewTopic(\n    topic: SubscriberTopic<any>\n  ): SubscriberTopic<any> {\n    for (var i = 0; i < this.subscribeTopics.length; i++) {\n      if (this.subscribeTopics[i].equals(topic)) {\n        return this.subscribeTopics[i]\n      }\n    }\n    this.subscribeTopics.push(topic)\n    return topic\n  }\n\n  private createUnsubscribeFunction(\n    topic: SubscriberTopic<any>,\n    subscription: Subscription<any>\n  ): () => void {\n    return () => {\n      topic.remove(subscription)\n      if (topic.isEmpty()) {\n        this.unsubscribeTopic(topic)\n      }\n    }\n  }\n\n  private unsubscribeTopic(topic: SubscriberTopic<any>) {\n    this.subscribeTopics = this.subscribeTopics.filter(t => t !== topic)\n    this.unsubscribeTopics.push(topic)\n    this.syncTopicSubscriptions()\n  }\n\n  private syncTopicSubscriptions() {\n    this.getConnectedSocket()\n      .then((websocket: WebSocket) => {\n        this.unsubscribeTopics.forEach(topic => {\n          if (topic.isSubscribed()) {\n            this.sendUnsubscribe(websocket, topic)\n          }\n        })\n        this.unsubscribeTopics = this.unsubscribeTopics.filter(\n          topic => !topic.isSubscribed()\n        )\n        this.subscribeTopics.forEach(topic => {\n          if (!topic.isSubscribed()) {\n            this.sendSubscribe(websocket, topic)\n          }\n        })\n        // if there is a topic which is not subscribed we need to sync again\n        if (this.subscribeTopics.find(topic => !topic.isSubscribed())) {\n          setTimeout(() => {\n            this.syncTopicSubscriptions()\n          }, this.RETRY_SYNC_DELAY)\n        }\n      })\n      .catch(() => {\n        // on failure call syncTopicSubscriptions again\n        setTimeout(() => {\n          this.syncTopicSubscriptions()\n        }, this.RETRY_SYNC_DELAY)\n      })\n  }\n\n  private getConnectedSocket() {\n    if (this.connectedSocketPromise) {\n      return this.connectedSocketPromise\n    }\n    this.connectedSocketPromise = new Promise((resolve, reject) => {\n      var websocket = new WebSocket(this.url, undefined)\n      var onclose = (event: any) => {\n        reject(event)\n        this.connectedSocketPromise = null\n        websocket.onclose = null\n        websocket.onopen = null\n        websocket.onerror = null\n        websocket.onmessage = null\n        this.subscribeTopics.forEach(topic => {\n          topic.setSubscribed(false)\n          this.invokeOnDisconnectListeners(topic)\n        })\n        this.syncTopicSubscriptions()\n      }\n      var onerror = onclose\n      var onopen = (event: any) => {\n        resolve(websocket)\n        this.subscribeTopics.forEach(topic => {\n          this.invokeOnReconnectListeners(topic)\n        })\n      }\n      var onmessage = (event: any) => {\n        try {\n          this.onMessageReceived(JSON.parse(event.data))\n        } catch (e) {\n          console.log(\"Websocket parse error\", e)\n        }\n      }\n      websocket.onclose = onclose\n      websocket.onopen = onopen\n      websocket.onerror = onerror\n      websocket.onmessage = onmessage\n    })\n    return this.connectedSocketPromise\n  }\n\n  private sendUnsubscribe(websocket: WebSocket, topic: SubscriberTopic<any>) {\n    if (websocket.readyState == 1) {\n      websocket.send(\n        JSON.stringify([\"unsubscribe\", [[topic.topicId, topic.params]]])\n      )\n      topic.setSubscribed(false)\n    }\n  }\n\n  private sendSubscribe(websocket: WebSocket, topic: SubscriberTopic<any>) {\n    if (websocket.readyState == 1) {\n      websocket.send(\n        JSON.stringify([\"subscribe\", [[topic.topicId, topic.params]]])\n      )\n      topic.setSubscribed(true)\n    }\n  }\n\n  private onMessageReceived(messageJson: Object) {\n    if (!Array.isArray(messageJson) || messageJson.length != 3) {\n      console.log(\"Websocket invalid message\", messageJson)\n      return\n    }\n    var topicAsStr = messageJson[0],\n      details = messageJson[1],\n      contents = messageJson[2]\n    if (!utils.isString(topicAsStr) || !utils.isObject(details)) {\n      console.log(\"Websocket invalid field\", messageJson)\n      return\n    }\n\n    this.subscribeTopics.forEach(topic => {\n      if (\n        topic.topicId == topicAsStr &&\n        this.topicMatchesDetails(topic, details)\n      ) {\n        this.invokeOnMessageListeners(topic, contents)\n      }\n    })\n  }\n\n  private topicMatchesDetails(\n    topic: SubscriberTopic<any>,\n    details: { [key: string]: any }\n  ) {\n    var filterKeys = Object.getOwnPropertyNames(topic.params)\n    for (var i = 0, key = filterKeys[i]; i < filterKeys.length; i++) {\n      if (topic.params[key] != details[key]) return false\n    }\n    return true\n  }\n\n  private invokeOnMessageListeners(\n    topic: SubscriberTopic<any>,\n    contents: Object\n  ) {\n    topic.subscriptions.forEach(subscription => {\n      try {\n        if (subscription.onMessageCallback)\n          subscription.onMessageCallback(contents)\n      } catch (e) {\n        console.error(e)\n      }\n    })\n  }\n\n  private invokeOnReconnectListeners(topic: SubscriberTopic<any>) {\n    topic.subscriptions.forEach(subscription => {\n      try {\n        if (subscription.isReconnect) {\n          if (subscription.onReconnectCallback)\n            subscription.onReconnectCallback()\n        }\n        subscription.isReconnect = true\n      } catch (e) {\n        console.error(e)\n      }\n    })\n  }\n\n  private invokeOnDisconnectListeners(topic: SubscriberTopic<any>) {\n    topic.subscriptions.forEach(subscription => {\n      try {\n        if (subscription.onDisconnectCallback)\n          subscription.onDisconnectCallback()\n      } catch (e) {\n        console.error(e)\n      }\n    })\n  }\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2017 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\nimport * as utils from \"./utils\"\nimport Subscription from \"./subscription\"\n\nexport class SubscriberTopic<T> {\n  public subscriptions: Array<Subscription<T>> = []\n  private subscribed: boolean = false\n\n  constructor(public topicId: string, public params: any) {\n    if (!utils.isString(topicId)) throw new Error(\"Topic must be a string\")\n    if (!utils.isObject(params)) throw new Error(\"Params must be an object\")\n    var names = Object.getOwnPropertyNames(params)\n    names.forEach(key => {\n      if (!utils.isString(params[key]))\n        throw new Error(`Params property ${key} is not a string`)\n    })\n  }\n\n  public setSubscribed(subscribed: boolean) {\n    this.subscribed = subscribed\n  }\n\n  public isSubscribed(): boolean {\n    return this.subscribed\n  }\n\n  public add(subscription: Subscription<T>) {\n    if (this.subscriptions.find(sub => sub === subscription))\n      throw new Error(\"Duplicate subscription\")\n    this.subscriptions.push(subscription)\n  }\n\n  public remove(subscription: Subscription<T>) {\n    this.subscriptions = this.subscriptions.filter(sub => sub !== subscription)\n  }\n\n  public isEmpty(): boolean {\n    return this.subscriptions.length == 0\n  }\n\n  public equals(other: SubscriberTopic<T>): boolean {\n    if (this.topicId != other.topicId) return false\n    return this.objectEquals(this.params, other.params)\n  }\n\n  private objectEquals(\n    a: { [key: string]: any },\n    b: { [key: string]: any }\n  ): boolean {\n    let namesA = Object.getOwnPropertyNames(a)\n    let namesB = Object.getOwnPropertyNames(b)\n    if (namesA.length != namesB.length) return false\n    for (var i = 0; i < namesA.length; i++) {\n      let key = namesA[i]\n      if (a[key] != b[key]) return false\n    }\n    return true\n  }\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2017 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\nimport { SubscriberBase } from \"./subscriber-base\"\nimport { SubscriberTopic } from \"./subscriber-topic\"\nimport Subscription from \"./subscription\"\n\nexport class HeatSubscriber extends SubscriberBase {\n  // websocket subscription topics - these match the topics in the java com.heatledger.websocket package\n  private BLOCK_PUSHED = \"1\"\n  private BLOCK_POPPED = \"2\"\n  private BALANCE_CHANGED = \"3\"\n  private ORDER = \"4\"\n  private TRADE = \"5\"\n  private MESSAGE = \"6\"\n  private UNCONFIRMED_TRANSACTION = \"7\"\n  private MICROSERVICE = \"8\"\n\n  constructor(url: string) {\n    super(url)\n  }\n\n  public blockPushed(filter: SubscriberBlockPushedFilter): Subscription<any> {\n    return this.subscribe(new SubscriberTopic(this.BLOCK_PUSHED, filter))\n  }\n\n  public blockPopped(filter: SubscriberBlockPoppedFilter): Subscription<any> {\n    return this.subscribe(new SubscriberTopic(this.BLOCK_POPPED, filter))\n  }\n\n  public balanceChanged(\n    filter: SubscriberBalanceChangedFilter\n  ): Subscription<any> {\n    return this.subscribe(new SubscriberTopic(this.BALANCE_CHANGED, filter))\n  }\n\n  public order(filter: SubscriberOrderFilter): Subscription<any> {\n    return this.subscribe(new SubscriberTopic(this.ORDER, filter))\n  }\n\n  public trade(filter: SubscriberTradeFilter): Subscription<any> {\n    return this.subscribe(new SubscriberTopic(this.TRADE, filter))\n  }\n\n  public message(filter: SubscriberMessageFilter): Subscription<any> {\n    return this.subscribe(new SubscriberTopic(this.MESSAGE, filter))\n  }\n\n  public unconfirmedTransaction(\n    filter: SubscriberUnconfirmedTransactionFilter\n  ): Subscription<any> {\n    return this.subscribe(\n      new SubscriberTopic(this.UNCONFIRMED_TRANSACTION, filter)\n    )\n  }\n\n  public microservice(filter: { [key: string]: string }): Subscription<any> {\n    return this.subscribe(new SubscriberTopic(this.MICROSERVICE, filter))\n  }\n}\n\nexport interface SubscriberBlockPushedFilter {\n  generator?: string\n}\n\nexport interface SubscriberBlockPoppedFilter {\n  generator?: string\n}\n\nexport interface SubscriberBalanceChangedFilter {\n  account?: string\n  currency?: string\n}\n\nexport interface SubscriberBalanceChangedResponse {\n  account: string\n  currency: string\n  quantity: string\n}\n\nexport interface SubscriberOrderFilter {\n  account?: string\n  currency?: string\n  asset?: string\n  unconfirmed?: string // true or false\n  type?: string // ask or bid\n}\n\nexport interface SubscriberTradeFilter {\n  seller?: string\n  buyer?: string\n  currency?: string\n  asset?: string\n}\n\nexport interface SubscriberMessageFilter {\n  sender?: string\n  recipient?: string\n}\n\nexport interface SubscriberUnconfirmedTransactionFilter {\n  sender?: string\n  recipient?: string\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2017 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\nimport * as crypto from \"./crypto\"\n\nexport class SecretGenerator {\n  public generate(): Promise<string> {\n    return this.generateSecret(this.words)\n  }\n\n  private generateSecret(wordList: string[]): Promise<string> {\n    return crypto.random32Values(128 / 32).then(random => {\n      let words = []\n      let x,\n        w1,\n        w2,\n        w3,\n        n = wordList.length\n      for (let i = 0; i < random.length; i++) {\n        x = random[i]\n        w1 = x % n\n        w2 = (((x / n) >> 0) + w1) % n\n        w3 = (((((x / n) >> 0) / n) >> 0) + w2) % n\n        words.push(wordList[w1])\n        words.push(wordList[w2])\n        words.push(wordList[w3])\n      }\n      return words.join(\" \")\n    })\n  }\n\n  private words: Array<\n    string\n  > = \"like,just,love,know,never,want,time,out,there,make,look,eye,down,only,think,heart,back,then,into,about,more,away,still,them,take,thing,even,through,long,always,world,too,friend,tell,try,hand,thought,over,here,other,need,smile,again,much,cry,been,night,ever,little,said,end,some,those,around,mind,people,girl,leave,dream,left,turn,myself,give,nothing,really,off,before,something,find,walk,wish,good,once,place,ask,stop,keep,watch,seem,everything,wait,got,yet,made,remember,start,alone,run,hope,maybe,believe,body,hate,after,close,talk,stand,own,each,hurt,help,home,god,soul,new,many,two,inside,should,true,first,fear,mean,better,play,another,gone,change,use,wonder,someone,hair,cold,open,best,any,behind,happen,water,dark,laugh,stay,forever,name,work,show,sky,break,came,deep,door,put,black,together,upon,happy,such,great,white,matter,fill,past,please,burn,cause,enough,touch,moment,soon,voice,scream,anything,stare,sound,red,everyone,hide,kiss,truth,death,beautiful,mine,blood,broken,very,pass,next,forget,tree,wrong,air,mother,understand,lip,hit,wall,memory,sleep,free,high,realize,school,might,skin,sweet,perfect,blue,kill,breath,dance,against,fly,between,grow,strong,under,listen,bring,sometimes,speak,pull,person,become,family,begin,ground,real,small,father,sure,feet,rest,young,finally,land,across,today,different,guy,line,fire,reason,reach,second,slowly,write,eat,smell,mouth,step,learn,three,floor,promise,breathe,darkness,push,earth,guess,save,song,above,along,both,color,house,almost,sorry,anymore,brother,okay,dear,game,fade,already,apart,warm,beauty,heard,notice,question,shine,began,piece,whole,shadow,secret,street,within,finger,point,morning,whisper,child,moon,green,story,glass,kid,silence,since,soft,yourself,empty,shall,angel,answer,baby,bright,dad,path,worry,hour,drop,follow,power,war,half,flow,heaven,act,chance,fact,least,tired,children,near,quite,afraid,rise,sea,taste,window,cover,nice,trust,lot,sad,cool,force,peace,return,blind,easy,ready,roll,rose,drive,held,music,beneath,hang,mom,paint,emotion,quiet,clear,cloud,few,pretty,bird,outside,paper,picture,front,rock,simple,anyone,meant,reality,road,sense,waste,bit,leaf,thank,happiness,meet,men,smoke,truly,decide,self,age,book,form,alive,carry,escape,damn,instead,able,ice,minute,throw,catch,leg,ring,course,goodbye,lead,poem,sick,corner,desire,known,problem,remind,shoulder,suppose,toward,wave,drink,jump,woman,pretend,sister,week,human,joy,crack,grey,pray,surprise,dry,knee,less,search,bleed,caught,clean,embrace,future,king,son,sorrow,chest,hug,remain,sat,worth,blow,daddy,final,parent,tight,also,create,lonely,safe,cross,dress,evil,silent,bone,fate,perhaps,anger,class,scar,snow,tiny,tonight,continue,control,dog,edge,mirror,month,suddenly,comfort,given,loud,quickly,gaze,plan,rush,stone,town,battle,ignore,spirit,stood,stupid,yours,brown,build,dust,hey,kept,pay,phone,twist,although,ball,beyond,hidden,nose,taken,fail,float,pure,somehow,wash,wrap,angry,cheek,creature,forgotten,heat,rip,single,space,special,weak,whatever,yell,anyway,blame,job,choose,country,curse,drift,echo,figure,grew,laughter,neck,suffer,worse,yeah,disappear,foot,forward,knife,mess,somewhere,stomach,storm,beg,idea,lift,offer,breeze,field,five,often,simply,stuck,win,allow,confuse,enjoy,except,flower,seek,strength,calm,grin,gun,heavy,hill,large,ocean,shoe,sigh,straight,summer,tongue,accept,crazy,everyday,exist,grass,mistake,sent,shut,surround,table,ache,brain,destroy,heal,nature,shout,sign,stain,choice,doubt,glance,glow,mountain,queen,stranger,throat,tomorrow,city,either,fish,flame,rather,shape,spin,spread,ash,distance,finish,image,imagine,important,nobody,shatter,warmth,became,feed,flesh,funny,lust,shirt,trouble,yellow,attention,bare,bite,money,protect,amaze,appear,born,choke,completely,daughter,fresh,friendship,gentle,probably,six,deserve,expect,grab,middle,nightmare,river,thousand,weight,worst,wound,barely,bottle,cream,regret,relationship,stick,test,crush,endless,fault,itself,rule,spill,art,circle,join,kick,mask,master,passion,quick,raise,smooth,unless,wander,actually,broke,chair,deal,favorite,gift,note,number,sweat,box,chill,clothes,lady,mark,park,poor,sadness,tie,animal,belong,brush,consume,dawn,forest,innocent,pen,pride,stream,thick,clay,complete,count,draw,faith,press,silver,struggle,surface,taught,teach,wet,bless,chase,climb,enter,letter,melt,metal,movie,stretch,swing,vision,wife,beside,crash,forgot,guide,haunt,joke,knock,plant,pour,prove,reveal,steal,stuff,trip,wood,wrist,bother,bottom,crawl,crowd,fix,forgive,frown,grace,loose,lucky,party,release,surely,survive,teacher,gently,grip,speed,suicide,travel,treat,vein,written,cage,chain,conversation,date,enemy,however,interest,million,page,pink,proud,sway,themselves,winter,church,cruel,cup,demon,experience,freedom,pair,pop,purpose,respect,shoot,softly,state,strange,bar,birth,curl,dirt,excuse,lord,lovely,monster,order,pack,pants,pool,scene,seven,shame,slide,ugly,among,blade,blonde,closet,creek,deny,drug,eternity,gain,grade,handle,key,linger,pale,prepare,swallow,swim,tremble,wheel,won,cast,cigarette,claim,college,direction,dirty,gather,ghost,hundred,loss,lung,orange,present,swear,swirl,twice,wild,bitter,blanket,doctor,everywhere,flash,grown,knowledge,numb,pressure,radio,repeat,ruin,spend,unknown,buy,clock,devil,early,false,fantasy,pound,precious,refuse,sheet,teeth,welcome,add,ahead,block,bury,caress,content,depth,despite,distant,marry,purple,threw,whenever,bomb,dull,easily,grasp,hospital,innocence,normal,receive,reply,rhyme,shade,someday,sword,toe,visit,asleep,bought,center,consider,flat,hero,history,ink,insane,muscle,mystery,pocket,reflection,shove,silently,smart,soldier,spot,stress,train,type,view,whether,bus,energy,explain,holy,hunger,inch,magic,mix,noise,nowhere,prayer,presence,shock,snap,spider,study,thunder,trail,admit,agree,bag,bang,bound,butterfly,cute,exactly,explode,familiar,fold,further,pierce,reflect,scent,selfish,sharp,sink,spring,stumble,universe,weep,women,wonderful,action,ancient,attempt,avoid,birthday,branch,chocolate,core,depress,drunk,especially,focus,fruit,honest,match,palm,perfectly,pillow,pity,poison,roar,shift,slightly,thump,truck,tune,twenty,unable,wipe,wrote,coat,constant,dinner,drove,egg,eternal,flight,flood,frame,freak,gasp,glad,hollow,motion,peer,plastic,root,screen,season,sting,strike,team,unlike,victim,volume,warn,weird,attack,await,awake,built,charm,crave,despair,fought,grant,grief,horse,limit,message,ripple,sanity,scatter,serve,split,string,trick,annoy,blur,boat,brave,clearly,cling,connect,fist,forth,imagination,iron,jock,judge,lesson,milk,misery,nail,naked,ourselves,poet,possible,princess,sail,size,snake,society,stroke,torture,toss,trace,wise,bloom,bullet,cell,check,cost,darling,during,footstep,fragile,hallway,hardly,horizon,invisible,journey,midnight,mud,nod,pause,relax,shiver,sudden,value,youth,abuse,admire,blink,breast,bruise,constantly,couple,creep,curve,difference,dumb,emptiness,gotta,honor,plain,planet,recall,rub,ship,slam,soar,somebody,tightly,weather,adore,approach,bond,bread,burst,candle,coffee,cousin,crime,desert,flutter,frozen,grand,heel,hello,language,level,movement,pleasure,powerful,random,rhythm,settle,silly,slap,sort,spoken,steel,threaten,tumble,upset,aside,awkward,bee,blank,board,button,card,carefully,complain,crap,deeply,discover,drag,dread,effort,entire,fairy,giant,gotten,greet,illusion,jeans,leap,liquid,march,mend,nervous,nine,replace,rope,spine,stole,terror,accident,apple,balance,boom,childhood,collect,demand,depression,eventually,faint,glare,goal,group,honey,kitchen,laid,limb,machine,mere,mold,murder,nerve,painful,poetry,prince,rabbit,shelter,shore,shower,soothe,stair,steady,sunlight,tangle,tease,treasure,uncle,begun,bliss,canvas,cheer,claw,clutch,commit,crimson,crystal,delight,doll,existence,express,fog,football,gay,goose,guard,hatred,illuminate,mass,math,mourn,rich,rough,skip,stir,student,style,support,thorn,tough,yard,yearn,yesterday,advice,appreciate,autumn,bank,beam,bowl,capture,carve,collapse,confusion,creation,dove,feather,girlfriend,glory,government,harsh,hop,inner,loser,moonlight,neighbor,neither,peach,pig,praise,screw,shield,shimmer,sneak,stab,subject,throughout,thrown,tower,twirl,wow,army,arrive,bathroom,bump,cease,cookie,couch,courage,dim,guilt,howl,hum,husband,insult,led,lunch,mock,mostly,natural,nearly,needle,nerd,peaceful,perfection,pile,price,remove,roam,sanctuary,serious,shiny,shook,sob,stolen,tap,vain,void,warrior,wrinkle,affection,apologize,blossom,bounce,bridge,cheap,crumble,decision,descend,desperately,dig,dot,flip,frighten,heartbeat,huge,lazy,lick,odd,opinion,process,puzzle,quietly,retreat,score,sentence,separate,situation,skill,soak,square,stray,taint,task,tide,underneath,veil,whistle,anywhere,bedroom,bid,bloody,burden,careful,compare,concern,curtain,decay,defeat,describe,double,dreamer,driver,dwell,evening,flare,flicker,grandma,guitar,harm,horrible,hungry,indeed,lace,melody,monkey,nation,object,obviously,rainbow,salt,scratch,shown,shy,stage,stun,third,tickle,useless,weakness,worship,worthless,afternoon,beard,boyfriend,bubble,busy,certain,chin,concrete,desk,diamond,doom,drawn,due,felicity,freeze,frost,garden,glide,harmony,hopefully,hunt,jealous,lightning,mama,mercy,peel,physical,position,pulse,punch,quit,rant,respond,salty,sane,satisfy,savior,sheep,slept,social,sport,tuck,utter,valley,wolf,aim,alas,alter,arrow,awaken,beaten,belief,brand,ceiling,cheese,clue,confidence,connection,daily,disguise,eager,erase,essence,everytime,expression,fan,flag,flirt,foul,fur,giggle,glorious,ignorance,law,lifeless,measure,mighty,muse,north,opposite,paradise,patience,patient,pencil,petal,plate,ponder,possibly,practice,slice,spell,stock,strife,strip,suffocate,suit,tender,tool,trade,velvet,verse,waist,witch,aunt,bench,bold,cap,certainly,click,companion,creator,dart,delicate,determine,dish,dragon,drama,drum,dude,everybody,feast,forehead,former,fright,fully,gas,hook,hurl,invite,juice,manage,moral,possess,raw,rebel,royal,scale,scary,several,slight,stubborn,swell,talent,tea,terrible,thread,torment,trickle,usually,vast,violence,weave,acid,agony,ashamed,awe,belly,blend,blush,character,cheat,common,company,coward,creak,danger,deadly,defense,define,depend,desperate,destination,dew,duck,dusty,embarrass,engine,example,explore,foe,freely,frustrate,generation,glove,guilty,health,hurry,idiot,impossible,inhale,jaw,kingdom,mention,mist,moan,mumble,mutter,observe,ode,pathetic,pattern,pie,prefer,puff,rape,rare,revenge,rude,scrape,spiral,squeeze,strain,sunset,suspend,sympathy,thigh,throne,total,unseen,weapon,weary\".split(\n    \",\"\n  )\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2017 Heat Ledger Ltd.\n * Copyright (c) 2015-2017, Matthieu Monsch.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n\n/* jshint node: true */\n\n// TODO: Make long comparison impervious to precision loss.\n// TODO: Optimize binary comparison methods.\n\n'use strict';\n\n/** Various utilities used across this library. */\n\nvar crypto = require('crypto');\nvar util = require('util');\n\n// Shared buffer pool for all taps.\nvar POOL = new BufferPool(4096);\n\n/**\n * Create a new empty buffer.\n *\n * @param size {Number} The buffer's size.\n */\nfunction newBuffer(size) {\n  if (typeof Buffer.alloc == 'function') {\n    return Buffer.alloc(size);\n  } else {\n    return new Buffer(size);\n  }\n}\n\n/**\n * Create a new buffer with the input contents.\n *\n * @param data {Array|String} The buffer's data.\n * @param enc {String} Encoding, used if data is a string.\n */\nfunction bufferFrom(data, enc) {\n  if (typeof Buffer.from == 'function') {\n    return Buffer.from(data, enc);\n  } else {\n    return new Buffer(data, enc);\n  }\n}\n\n/**\n * Uppercase the first letter of a string.\n *\n * @param s {String} The string.\n */\nfunction capitalize(s) { return s.charAt(0).toUpperCase() + s.slice(1); }\n\n/**\n * Compare two numbers.\n *\n * @param n1 {Number} The first one.\n * @param n2 {Number} The second one.\n */\nfunction compare(n1, n2) { return n1 === n2 ? 0 : (n1 < n2 ? -1 : 1); }\n\n/**\n * Get option or default if undefined.\n *\n * @param opts {Object} Options.\n * @param key {String} Name of the option.\n * @param def {...} Default value.\n *\n * This is useful mostly for true-ish defaults and false-ish values (where the\n * usual `||` idiom breaks down).\n */\nfunction getOption(opts, key, def) {\n  var value = opts[key];\n  return value === undefined ? def : value;\n}\n\n/**\n * Compute a string's hash.\n *\n * @param str {String} The string to hash.\n * @param algorithm {String} The algorithm used. Defaults to MD5.\n */\nfunction getHash(str, algorithm) {\n  algorithm = algorithm || 'md5';\n  var hash = crypto.createHash(algorithm);\n  hash.end(str);\n  return hash.read();\n}\n\n/**\n * Find index of value in array.\n *\n * @param arr {Array} Can also be a false-ish value.\n * @param v {Object} Value to find.\n *\n * Returns -1 if not found, -2 if found multiple times.\n */\nfunction singleIndexOf(arr, v) {\n  var pos = -1;\n  var i, l;\n  if (!arr) {\n    return -1;\n  }\n  for (i = 0, l = arr.length; i < l; i++) {\n    if (arr[i] === v) {\n      if (pos >= 0) {\n        return -2;\n      }\n      pos = i;\n    }\n  }\n  return pos;\n}\n\n/**\n * Convert array to map.\n *\n * @param arr {Array} Elements.\n * @param fn {Function} Function returning an element's key.\n */\nfunction toMap(arr, fn) {\n  var obj = {};\n  var i, elem;\n  for (i = 0; i < arr.length; i++) {\n    elem = arr[i];\n    obj[fn(elem)] = elem;\n  }\n  return obj;\n}\n\n/**\n * Convert map to array of values (polyfill for `Object.values`).\n *\n * @param obj {Object} Map.\n */\nfunction objectValues(obj) {\n  return Object.keys(obj).map(function (key) { return obj[key]; });\n}\n\n/**\n * Check whether an array has duplicates.\n *\n * @param arr {Array} The array.\n * @param fn {Function} Optional function to apply to each element.\n */\nfunction hasDuplicates(arr, fn) {\n  var obj = {};\n  var i, l, elem;\n  for (i = 0, l = arr.length; i < l; i++) {\n    elem = arr[i];\n    if (fn) {\n      elem = fn(elem);\n    }\n    if (obj[elem]) {\n      return true;\n    }\n    obj[elem] = true;\n  }\n  return false;\n}\n\n/**\n * Copy properties from one object to another.\n *\n * @param src {Object} The source object.\n * @param dst {Object} The destination object.\n * @param overwrite {Boolean} Whether to overwrite existing destination\n * properties. Defaults to false.\n */\nfunction copyOwnProperties(src, dst, overwrite) {\n  var names = Object.getOwnPropertyNames(src);\n  var i, l, name;\n  for (i = 0, l = names.length; i < l; i++) {\n    name = names[i];\n    if (!dst.hasOwnProperty(name) || overwrite) {\n      var descriptor = Object.getOwnPropertyDescriptor(src, name);\n      Object.defineProperty(dst, name, descriptor);\n    }\n  }\n  return dst;\n}\n\n/**\n * Returns offset in the string of the end of JSON object (-1 if past the end).\n *\n * To keep the implementation simple, this function isn't a JSON validator. It\n * will gladly return a result for invalid JSON (which is OK since that will be\n * promptly rejected by the JSON parser). What matters is that it is guaranteed\n * to return the correct end when presented with valid JSON.\n *\n * @param str {String} Input string containing serialized JSON..\n * @param pos {Number} Starting position.\n */\nfunction jsonEnd(str, pos) {\n  pos = pos | 0;\n\n  // Handle the case of a simple literal separately.\n  var c = str.charAt(pos++);\n  if (/[\\d-]/.test(c)) {\n    while (/[eE\\d.+-]/.test(str.charAt(pos))) {\n      pos++;\n    }\n    return pos;\n  } else if (/true|null/.test(str.slice(pos - 1, pos + 3))) {\n    return pos + 3;\n  } else if (/false/.test(str.slice(pos - 1, pos + 4))) {\n    return pos + 4;\n  }\n\n  // String, object, or array.\n  var depth = 0;\n  var literal = false;\n  do {\n    switch (c) {\n    case '{':\n    case '[':\n      if (!literal) { depth++; }\n      break;\n    case '}':\n    case ']':\n      if (!literal && !--depth) {\n        return pos;\n      }\n      break;\n    case '\"':\n      literal = !literal;\n      if (!depth && !literal) {\n        return pos;\n      }\n      break;\n    case '\\\\':\n      pos++; // Skip the next character.\n    }\n  } while ((c = str.charAt(pos++)));\n\n  return -1;\n}\n\n/** \"Abstract\" function to help with \"subclassing\". */\nfunction abstractFunction() { throw new Error('abstract'); }\n\n/** Batch-deprecate \"getters\" from an object's prototype. */\nfunction addDeprecatedGetters(obj, props) {\n  var proto = obj.prototype;\n  var i, l, prop, getter;\n  for (i = 0, l = props.length; i < l; i++) {\n    prop = props[i];\n    getter = 'get' + capitalize(prop);\n    proto[getter] = util.deprecate(\n      createGetter(prop),\n      'use `.' + prop + '` instead of `.' + getter + '()`'\n    );\n  }\n\n  function createGetter(prop) {\n    return function () {\n      var delegate = this[prop];\n      return typeof delegate == 'function' ?\n        delegate.apply(this, arguments) :\n        delegate;\n    };\n  }\n}\n\n/**\n * Simple buffer pool to avoid allocating many small buffers.\n *\n * This provides significant speedups in recent versions of node (6+).\n */\nfunction BufferPool(len) {\n  this._len = len | 0;\n  this._pos = 0;\n  this._slab = newBuffer(this._len);\n}\n\nBufferPool.prototype.alloc = function (len) {\n  var maxLen = this._len;\n  if (len > maxLen) {\n    return newBuffer(len);\n  }\n  if (this._pos + len > maxLen) {\n    this._slab = newBuffer(maxLen);\n    this._pos = 0;\n  }\n  return this._slab.slice(this._pos, this._pos += len);\n};\n\n/**\n * Generator of random things.\n *\n * Inspired by: http://stackoverflow.com/a/424445/1062617\n */\nfunction Lcg(seed) {\n  var a = 1103515245;\n  var c = 12345;\n  var m = Math.pow(2, 31);\n  var state = Math.floor(seed || Math.random() * (m - 1));\n\n  this._max = m;\n  this._nextInt = function () { return state = (a * state + c) % m; };\n}\n\nLcg.prototype.nextBoolean = function () {\n  // jshint -W018\n  return !!(this._nextInt() % 2);\n};\n\nLcg.prototype.nextInt = function (start, end) {\n  if (end === undefined) {\n    end = start;\n    start = 0;\n  }\n  end = end === undefined ? this._max : end;\n  return start + Math.floor(this.nextFloat() * (end - start));\n};\n\nLcg.prototype.nextFloat = function (start, end) {\n  if (end === undefined) {\n    end = start;\n    start = 0;\n  }\n  end = end === undefined ? 1 : end;\n  return start + (end - start) * this._nextInt() / this._max;\n};\n\nLcg.prototype.nextString = function(len, flags) {\n  len |= 0;\n  flags = flags || 'aA';\n  var mask = '';\n  if (flags.indexOf('a') > -1) {\n    mask += 'abcdefghijklmnopqrstuvwxyz';\n  }\n  if (flags.indexOf('A') > -1) {\n    mask += 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  }\n  if (flags.indexOf('#') > -1) {\n    mask += '0123456789';\n  }\n  if (flags.indexOf('!') > -1) {\n    mask += '~`!@#$%^&*()_+-={}[]:\";\\'<>?,./|\\\\';\n  }\n  var result = [];\n  for (var i = 0; i < len; i++) {\n    result.push(this.choice(mask));\n  }\n  return result.join('');\n};\n\nLcg.prototype.nextBuffer = function (len) {\n  var arr = [];\n  var i;\n  for (i = 0; i < len; i++) {\n    arr.push(this.nextInt(256));\n  }\n  return bufferFrom(arr);\n};\n\nLcg.prototype.choice = function (arr) {\n  var len = arr.length;\n  if (!len) {\n    throw new Error('choosing from empty array');\n  }\n  return arr[this.nextInt(len)];\n};\n\n/**\n * Ordered queue which returns items consecutively.\n *\n * This is actually a heap by index, with the added requirements that elements\n * can only be retrieved consecutively.\n */\nfunction OrderedQueue() {\n  this._index = 0;\n  this._items = [];\n}\n\nOrderedQueue.prototype.push = function (item) {\n  var items = this._items;\n  var i = items.length | 0;\n  var j;\n  items.push(item);\n  while (i > 0 && items[i].index < items[j = ((i - 1) >> 1)].index) {\n    item = items[i];\n    items[i] = items[j];\n    items[j] = item;\n    i = j;\n  }\n};\n\nOrderedQueue.prototype.pop = function () {\n  var items = this._items;\n  var len = (items.length - 1) | 0;\n  var first = items[0];\n  if (!first || first.index > this._index) {\n    return null;\n  }\n  this._index++;\n  if (!len) {\n    items.pop();\n    return first;\n  }\n  items[0] = items.pop();\n  var mid = len >> 1;\n  var i = 0;\n  var i1, i2, j, item, c, c1, c2;\n  while (i < mid) {\n    item = items[i];\n    i1 = (i << 1) + 1;\n    i2 = (i + 1) << 1;\n    c1 = items[i1];\n    c2 = items[i2];\n    if (!c2 || c1.index <= c2.index) {\n      c = c1;\n      j = i1;\n    } else {\n      c = c2;\n      j = i2;\n    }\n    if (c.index >= item.index) {\n      break;\n    }\n    items[j] = item;\n    items[i] = c;\n    i = j;\n  }\n  return first;\n};\n\n/**\n * A tap is a buffer which remembers what has been already read.\n *\n * It is optimized for performance, at the cost of failing silently when\n * overflowing the buffer. This is a purposeful trade-off given the expected\n * rarity of this case and the large performance hit necessary to enforce\n * validity. See `isValid` below for more information.\n */\nfunction Tap(buf, pos) {\n  this.buf = buf;\n  this.pos = pos | 0;\n  if (this.pos < 0) {\n    throw new Error('negative offset');\n  }\n}\n\n/**\n * Check that the tap is in a valid state.\n *\n * For efficiency reasons, none of the methods below will fail if an overflow\n * occurs (either read, skip, or write). For this reason, it is up to the\n * caller to always check that the read, skip, or write was valid by calling\n * this method.\n */\nTap.prototype.isValid = function () { return this.pos <= this.buf.length; };\n\n// Read, skip, write methods.\n//\n// These should fail silently when the buffer overflows. Note this is only\n// required to be true when the functions are decoding valid objects. For\n// example errors will still be thrown if a bad count is read, leading to a\n// negative position offset (which will typically cause a failure in\n// `readFixed`).\n\nTap.prototype.readBoolean = function () { return !!this.buf[this.pos++]; };\n\nTap.prototype.skipBoolean = function () { this.pos++; };\n\nTap.prototype.writeBoolean = function (b) { this.buf[this.pos++] = !!b; };\n\nTap.prototype.readInt = Tap.prototype.readLong = function () {\n  var n = 0;\n  var k = 0;\n  var buf = this.buf;\n  var b, h, f, fk;\n\n  do {\n    b = buf[this.pos++];\n    h = b & 0x80;\n    n |= (b & 0x7f) << k;\n    k += 7;\n  } while (h && k < 28);\n\n  if (h) {\n    // Switch to float arithmetic, otherwise we might overflow.\n    f = n;\n    fk = 268435456; // 2 ** 28.\n    do {\n      b = buf[this.pos++];\n      f += (b & 0x7f) * fk;\n      fk *= 128;\n    } while (b & 0x80);\n    return (f % 2 ? -(f + 1) : f) / 2;\n  }\n\n  return (n >> 1) ^ -(n & 1);\n};\n\nTap.prototype.skipInt = Tap.prototype.skipLong = function () {\n  var buf = this.buf;\n  while (buf[this.pos++] & 0x80) {}\n};\n\nTap.prototype.writeInt = Tap.prototype.writeLong = function (n) {\n  var buf = this.buf;\n  var f, m;\n\n  if (n >= -1073741824 && n < 1073741824) {\n    // Won't overflow, we can use integer arithmetic.\n    m = n >= 0 ? n << 1 : (~n << 1) | 1;\n    do {\n      buf[this.pos] = m & 0x7f;\n      m >>= 7;\n    } while (m && (buf[this.pos++] |= 0x80));\n  } else {\n    // We have to use slower floating arithmetic.\n    f = n >= 0 ? n * 2 : (-n * 2) - 1;\n    do {\n      buf[this.pos] = f & 0x7f;\n      f /= 128;\n    } while (f >= 1 && (buf[this.pos++] |= 0x80));\n  }\n  this.pos++;\n};\n\nTap.prototype.readFloat = function () {\n  var buf = this.buf;\n  var pos = this.pos;\n  this.pos += 4;\n  if (this.pos > buf.length) {\n    return;\n  }\n  return this.buf.readFloatLE(pos);\n};\n\nTap.prototype.skipFloat = function () { this.pos += 4; };\n\nTap.prototype.writeFloat = function (f) {\n  var buf = this.buf;\n  var pos = this.pos;\n  this.pos += 4;\n  if (this.pos > buf.length) {\n    return;\n  }\n  return this.buf.writeFloatLE(f, pos);\n};\n\nTap.prototype.readDouble = function () {\n  var buf = this.buf;\n  var pos = this.pos;\n  this.pos += 8;\n  if (this.pos > buf.length) {\n    return;\n  }\n  return this.buf.readDoubleLE(pos);\n};\n\nTap.prototype.skipDouble = function () { this.pos += 8; };\n\nTap.prototype.writeDouble = function (d) {\n  var buf = this.buf;\n  var pos = this.pos;\n  this.pos += 8;\n  if (this.pos > buf.length) {\n    return;\n  }\n  return this.buf.writeDoubleLE(d, pos);\n};\n\nTap.prototype.readFixed = function (len) {\n  var pos = this.pos;\n  this.pos += len;\n  if (this.pos > this.buf.length) {\n    return;\n  }\n  var fixed = POOL.alloc(len);\n  this.buf.copy(fixed, 0, pos, pos + len);\n  return fixed;\n};\n\nTap.prototype.skipFixed = function (len) { this.pos += len; };\n\nTap.prototype.writeFixed = function (buf, len) {\n  len = len || buf.length;\n  var pos = this.pos;\n  this.pos += len;\n  if (this.pos > this.buf.length) {\n    return;\n  }\n  buf.copy(this.buf, pos, 0, len);\n};\n\nTap.prototype.readBytes = function () {\n  return this.readFixed(this.readLong());\n};\n\nTap.prototype.skipBytes = function () {\n  var len = this.readLong();\n  this.pos += len;\n};\n\nTap.prototype.writeBytes = function (buf) {\n  var len = buf.length;\n  this.writeLong(len);\n  this.writeFixed(buf, len);\n};\n\n/* istanbul ignore else */\nif (typeof Buffer.prototype.utf8Slice == 'function') {\n  // Use this optimized function when available.\n  Tap.prototype.readString = function () {\n    var len = this.readLong();\n    var pos = this.pos;\n    var buf = this.buf;\n    this.pos += len;\n    if (this.pos > buf.length) {\n      return;\n    }\n    return this.buf.utf8Slice(pos, pos + len);\n  };\n} else {\n  Tap.prototype.readString = function () {\n    var len = this.readLong();\n    var pos = this.pos;\n    var buf = this.buf;\n    this.pos += len;\n    if (this.pos > buf.length) {\n      return;\n    }\n    return this.buf.slice(pos, pos + len).toString();\n  };\n}\n\nTap.prototype.skipString = function () {\n  var len = this.readLong();\n  this.pos += len;\n};\n\nTap.prototype.writeString = function (s) {\n  var len = Buffer.byteLength(s);\n  var buf = this.buf;\n  this.writeLong(len);\n  var pos = this.pos;\n  this.pos += len;\n  if (this.pos > buf.length) {\n    return;\n  }\n  if (len > 64) {\n    this._writeUtf8(s, len);\n  } else {\n    var i, l, c1, c2;\n    for (i = 0, l = len; i < l; i++) {\n      c1 = s.charCodeAt(i);\n      if (c1 < 0x80) {\n        buf[pos++] = c1;\n      } else if (c1 < 0x800) {\n        buf[pos++] = c1 >> 6 | 0xc0;\n        buf[pos++] = c1 & 0x3f | 0x80;\n      } else if (\n        (c1 & 0xfc00) === 0xd800 &&\n        ((c2 = s.charCodeAt(i + 1)) & 0xfc00) === 0xdc00\n      ) {\n        c1 = 0x10000 + ((c1 & 0x03ff) << 10) + (c2 & 0x03ff);\n        i++;\n        buf[pos++] = c1 >> 18 | 0xf0;\n        buf[pos++] = c1 >> 12 & 0x3f | 0x80;\n        buf[pos++] = c1 >> 6 & 0x3f | 0x80;\n        buf[pos++] = c1 & 0x3f | 0x80;\n      } else {\n        buf[pos++] = c1 >> 12 | 0xe0;\n        buf[pos++] = c1 >> 6 & 0x3f | 0x80;\n        buf[pos++] = c1 & 0x3f | 0x80;\n      }\n    }\n  }\n};\n\n/* istanbul ignore else */\nif (typeof Buffer.prototype.utf8Write == 'function') {\n  Tap.prototype._writeUtf8 = function (str, len) {\n    this.buf.utf8Write(str, this.pos - len, len);\n  };\n} else {\n  // `utf8Write` isn't available in the browser.\n  Tap.prototype._writeUtf8 = function (str, len) {\n    this.buf.write(str, this.pos - len, len, 'utf8');\n  };\n}\n\n/* istanbul ignore else */\nif (typeof Buffer.prototype.latin1Write == 'function') {\n  // `binaryWrite` has been renamed to `latin1Write` in Node v6.4.0, see\n  // https://github.com/nodejs/node/pull/7111. Note that the `'binary'`\n  // encoding argument still works however.\n  Tap.prototype.writeBinary = function (str, len) {\n    var pos = this.pos;\n    this.pos += len;\n    if (this.pos > this.buf.length) {\n      return;\n    }\n    this.buf.latin1Write(str, pos, len);\n  };\n} else if (typeof Buffer.prototype.binaryWrite == 'function') {\n  Tap.prototype.writeBinary = function (str, len) {\n    var pos = this.pos;\n    this.pos += len;\n    if (this.pos > this.buf.length) {\n      return;\n    }\n    this.buf.binaryWrite(str, pos, len);\n  };\n} else {\n  // Slowest implementation.\n  Tap.prototype.writeBinary = function (s, len) {\n    var pos = this.pos;\n    this.pos += len;\n    if (this.pos > this.buf.length) {\n      return;\n    }\n    this.buf.write(s, pos, len, 'binary');\n  };\n}\n\n// Binary comparison methods.\n//\n// These are not guaranteed to consume the objects they are comparing when\n// returning a non-zero result (allowing for performance benefits), so no other\n// operations should be done on either tap after a compare returns a non-zero\n// value. Also, these methods do not have the same silent failure requirement\n// as read, skip, and write since they are assumed to be called on valid\n// buffers.\n\nTap.prototype.matchBoolean = function (tap) {\n  return this.buf[this.pos++] - tap.buf[tap.pos++];\n};\n\nTap.prototype.matchInt = Tap.prototype.matchLong = function (tap) {\n  var n1 = this.readLong();\n  var n2 = tap.readLong();\n  return n1 === n2 ? 0 : (n1 < n2 ? -1 : 1);\n};\n\nTap.prototype.matchFloat = function (tap) {\n  var n1 = this.readFloat();\n  var n2 = tap.readFloat();\n  return n1 === n2 ? 0 : (n1 < n2 ? -1 : 1);\n};\n\nTap.prototype.matchDouble = function (tap) {\n  var n1 = this.readDouble();\n  var n2 = tap.readDouble();\n  return n1 === n2 ? 0 : (n1 < n2 ? -1 : 1);\n};\n\nTap.prototype.matchFixed = function (tap, len) {\n  return this.readFixed(len).compare(tap.readFixed(len));\n};\n\nTap.prototype.matchBytes = Tap.prototype.matchString = function (tap) {\n  var l1 = this.readLong();\n  var p1 = this.pos;\n  this.pos += l1;\n  var l2 = tap.readLong();\n  var p2 = tap.pos;\n  tap.pos += l2;\n  var b1 = this.buf.slice(p1, this.pos);\n  var b2 = tap.buf.slice(p2, tap.pos);\n  return b1.compare(b2);\n};\n\n// Functions for supporting custom long classes.\n//\n// The two following methods allow the long implementations to not have to\n// worry about Avro's zigzag encoding, we directly expose longs as unpacked.\n\nTap.prototype.unpackLongBytes = function () {\n  var res = newBuffer(8);\n  var n = 0;\n  var i = 0; // Byte index in target buffer.\n  var j = 6; // Bit offset in current target buffer byte.\n  var buf = this.buf;\n  var b, neg;\n\n  b = buf[this.pos++];\n  neg = b & 1;\n  res.fill(0);\n\n  n |= (b & 0x7f) >> 1;\n  while (b & 0x80) {\n    b = buf[this.pos++];\n    n |= (b & 0x7f) << j;\n    j += 7;\n    if (j >= 8) {\n      // Flush byte.\n      j -= 8;\n      res[i++] = n;\n      n >>= 8;\n    }\n  }\n  res[i] = n;\n\n  if (neg) {\n    invert(res, 8);\n  }\n\n  return res;\n};\n\nTap.prototype.packLongBytes = function (buf) {\n  var neg = (buf[7] & 0x80) >> 7;\n  var res = this.buf;\n  var j = 1;\n  var k = 0;\n  var m = 3;\n  var n;\n\n  if (neg) {\n    invert(buf, 8);\n    n = 1;\n  } else {\n    n = 0;\n  }\n\n  var parts = [\n    buf.readUIntLE(0, 3),\n    buf.readUIntLE(3, 3),\n    buf.readUIntLE(6, 2)\n  ];\n  // Not reading more than 24 bits because we need to be able to combine the\n  // \"carry\" bits from the previous part and JavaScript only supports bitwise\n  // operations on 32 bit integers.\n  while (m && !parts[--m]) {} // Skip trailing 0s.\n\n  // Leading parts (if any), we never bail early here since we need the\n  // continuation bit to be set.\n  while (k < m) {\n    n |= parts[k++] << j;\n    j += 24;\n    while (j > 7) {\n      res[this.pos++] = (n & 0x7f) | 0x80;\n      n >>= 7;\n      j -= 7;\n    }\n  }\n\n  // Final part, similar to normal packing aside from the initial offset.\n  n |= parts[m] << j;\n  do {\n    res[this.pos] = n & 0x7f;\n    n >>= 7;\n  } while (n && (res[this.pos++] |= 0x80));\n  this.pos++;\n\n  // Restore original buffer (could make this optional?).\n  if (neg) {\n    invert(buf, 8);\n  }\n};\n\n// Helpers.\n\n/**\n * Invert all bits in a buffer.\n *\n * @param buf {Buffer} Non-empty buffer to invert.\n * @param len {Number} Buffer length (must be positive).\n */\nfunction invert(buf, len) {\n  while (len--) {\n    buf[len] = ~buf[len];\n  }\n}\n\n\nmodule.exports = {\n  abstractFunction: abstractFunction,\n  addDeprecatedGetters: addDeprecatedGetters,\n  bufferFrom: bufferFrom,\n  capitalize: capitalize,\n  copyOwnProperties: copyOwnProperties,\n  getHash: getHash,\n  compare: compare,\n  getOption: getOption,\n  jsonEnd: jsonEnd,\n  newBuffer: newBuffer,\n  objectValues: objectValues,\n  toMap: toMap,\n  singleIndexOf: singleIndexOf,\n  hasDuplicates: hasDuplicates,\n  Lcg: Lcg,\n  OrderedQueue: OrderedQueue,\n  Tap: Tap\n};","/*\n * The MIT License (MIT)\n * Copyright (c) 2017 Heat Ledger Ltd.\n * Copyright (c) 2015-2017, Matthieu Monsch.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n\n/* jshint node: true */\n\n// TODO: Make it easier to implement custom types. This will likely require\n// exposing the `Tap` object, perhaps under another name. Probably worth a\n// major release.\n// TODO: Allow configuring when to write the size when writing arrays and maps,\n// and customizing their block size.\n// TODO: Code-generate `compare` and `clone` record and union methods.\n\n'use strict';\n\n/**\n * This module defines all Avro data types and their serialization logic.\n *\n */\n\nvar utils = require('./avro-utils'),\n    buffer = require('buffer'), // For `SlowBuffer`.\n    util = require('util');\n\n\n// Convenience imports.\nvar Tap = utils.Tap;\nvar debug = util.debuglog('avsc:types');\nvar f = util.format;\n\n// All non-union concrete (i.e. non-logical) Avro types.\nvar TYPES = {\n  'array': ArrayType,\n  'boolean': BooleanType,\n  'bytes': BytesType,\n  'double': DoubleType,\n  'enum': EnumType,\n  'error': RecordType,\n  'fixed': FixedType,\n  'float': FloatType,\n  'int': IntType,\n  'long': LongType,\n  'map': MapType,\n  'null': NullType,\n  'record': RecordType,\n  'string': StringType\n};\n\n// Valid (field, type, and symbol) name regex.\nvar NAME_PATTERN = /^[A-Za-z_][A-Za-z0-9_]*$/;\n\n// Random generator.\nvar RANDOM = new utils.Lcg();\n\n// Encoding tap (shared for performance).\nvar TAP = new Tap(new buffer.SlowBuffer(1024));\n\n// Currently active logical type, used for name redirection.\nvar LOGICAL_TYPE = null;\n\n// Underlying types of logical types currently being instantiated. This is used\n// to be able to reference names (i.e. for branches) during instantiation.\nvar UNDERLYING_TYPES = [];\n\n/**\n * \"Abstract\" base Avro type.\n *\n * This class' constructor will register any named types to support recursive\n * schemas. All type values are represented in memory similarly to their JSON\n * representation, except for:\n *\n * + `bytes` and `fixed` which are represented as `Buffer`s.\n * + `union`s which will be \"unwrapped\" unless the `wrapUnions` option is set.\n *\n *  See individual subclasses for details.\n */\nfunction Type(schema, opts) {\n  var type;\n  if (LOGICAL_TYPE) {\n    type = LOGICAL_TYPE;\n    UNDERLYING_TYPES.push([LOGICAL_TYPE, this]);\n    LOGICAL_TYPE = null;\n  } else {\n    type = this;\n  }\n\n  // Lazily instantiated hash string. It will be generated the first time the\n  // type's default fingerprint is computed (for example when using `equals`).\n  // We use a mutable object since types are frozen after instantiation.\n  this._hash = new Hash();\n  this.name = undefined;\n  this.aliases = undefined;\n  this.doc = (schema && schema.doc) ? '' + schema.doc : undefined;\n\n  if (schema) {\n    // This is a complex (i.e. non-primitive) type.\n    var name = schema.name;\n    var namespace = schema.namespace === undefined ?\n      opts && opts.namespace :\n      schema.namespace;\n    if (name !== undefined) {\n      // This isn't an anonymous type.\n      name = qualify(name, namespace);\n      if (isPrimitive(name)) {\n        // Avro doesn't allow redefining primitive names.\n        throw new Error(f('cannot rename primitive type: %j', name));\n      }\n      var registry = opts && opts.registry;\n      if (registry) {\n        if (registry[name] !== undefined) {\n          throw new Error(f('duplicate type name: %s', name));\n        }\n        registry[name] = type;\n      }\n    } else if (opts && opts.noAnonymousTypes) {\n      throw new Error(f('missing name property in schema: %j', schema));\n    }\n    this.name = name;\n    this.aliases = schema.aliases ?\n      schema.aliases.map(function (s) { return qualify(s, namespace); }) :\n      [];\n  }\n}\n\nType.forSchema = function (schema, opts) {\n  opts = opts || {};\n  opts.registry = opts.registry || {};\n\n  var UnionType = (function (wrapUnions) {\n    if (wrapUnions === true) {\n      wrapUnions = 'always';\n    } else if (wrapUnions === false) {\n      wrapUnions = 'never';\n    } else if (wrapUnions === undefined) {\n      wrapUnions = 'auto';\n    } else if (typeof wrapUnions == 'string') {\n      wrapUnions = wrapUnions.toLowerCase();\n    }\n    switch (wrapUnions) {\n      case 'always':\n        return WrappedUnionType;\n      case 'never':\n        return UnwrappedUnionType;\n      case 'auto':\n        return undefined; // Determined dynamically later on.\n      default:\n        throw new Error(f('invalid wrap unions option: %j', wrapUnions));\n    }\n  })(opts.wrapUnions);\n\n  if (schema === null) {\n    // Let's be helpful for this common error.\n    throw new Error('invalid type: null (did you mean \"null\"?)');\n  }\n\n  if (Type.isType(schema)) {\n    return schema;\n  }\n\n  var type;\n  if (opts.typeHook && (type = opts.typeHook(schema, opts))) {\n    if (!Type.isType(type)) {\n      throw new Error(f('invalid typehook return value: %j', type));\n    }\n    return type;\n  }\n\n  if (typeof schema == 'string') { // Type reference.\n    schema = qualify(schema, opts.namespace);\n    type = opts.registry[schema];\n    if (type) {\n      // Type was already defined, return it.\n      return type;\n    }\n    if (isPrimitive(schema)) {\n      // Reference to a primitive type. These are also defined names by default\n      // so we create the appropriate type and it to the registry for future\n      // reference.\n      return opts.registry[schema] = Type.forSchema({type: schema}, opts);\n    }\n    throw new Error(f('undefined type name: %s', schema));\n  }\n\n  if (schema.logicalType && opts.logicalTypes && !LOGICAL_TYPE) {\n    var DerivedType = opts.logicalTypes[schema.logicalType];\n    if (DerivedType) {\n      var namespace = opts.namespace;\n      var registry = {};\n      Object.keys(opts.registry).forEach(function (key) {\n        registry[key] = opts.registry[key];\n      });\n      try {\n        debug('instantiating logical type for %s', schema.logicalType);\n        return new DerivedType(schema, opts);\n      } catch (err) {\n        debug('failed to instantiate logical type for %s', schema.logicalType);\n        if (opts.assertLogicalTypes) {\n          // The spec mandates that we fall through to the underlying type if\n          // the logical type is invalid. We provide this option to ease\n          // debugging.\n          throw err;\n        }\n        LOGICAL_TYPE = null;\n        opts.namespace = namespace;\n        opts.registry = registry;\n      }\n    }\n  }\n\n  if (Array.isArray(schema)) { // Union.\n    var types = schema.map(function (obj) {\n      return Type.forSchema(obj, opts);\n    });\n    if (!UnionType) {\n      UnionType = isAmbiguous(types) ? WrappedUnionType : UnwrappedUnionType;\n    }\n    type = new UnionType(types, opts);\n  } else { // New type definition.\n    type = (function (typeName) {\n      var Type = TYPES[typeName];\n      if (Type === undefined) {\n        throw new Error(f('unknown type: %j', typeName));\n      }\n      return new Type(schema, opts);\n    })(schema.type);\n  }\n  return type;\n};\n\nType.forValue = function (val, opts) {\n  opts = opts || {};\n\n  // Sentinel used when inferring the types of empty arrays.\n  opts.emptyArrayType = opts.emptyArrayType || Type.forSchema({\n    type: 'array', items: 'null'\n  });\n\n  // Optional custom inference hook.\n  if (opts.valueHook) {\n    var type = opts.valueHook(val, opts);\n    if (type !== undefined) {\n      if (!Type.isType(type)) {\n        throw new Error(f('invalid value hook return value: %j', type));\n      }\n      return type;\n    }\n  }\n\n  // Default inference logic.\n  switch (typeof val) {\n    case 'string':\n      return Type.forSchema('string', opts);\n    case 'boolean':\n      return Type.forSchema('boolean', opts);\n    case 'number':\n      if ((val | 0) === val) {\n        return Type.forSchema('int', opts);\n      } else if (Math.abs(val) < 9007199254740991) {\n        return Type.forSchema('float', opts);\n      }\n      return Type.forSchema('double', opts);\n    case 'object':\n      if (val === null) {\n        return Type.forSchema('null', opts);\n      } else if (Array.isArray(val)) {\n        if (!val.length) {\n          return opts.emptyArrayType;\n        }\n        return Type.forSchema({\n          type: 'array',\n          items: Type.forTypes(\n            val.map(function (v) { return Type.forValue(v, opts); })\n          )\n        }, opts);\n      } else if (Buffer.isBuffer(val)) {\n        return Type.forSchema('bytes', opts);\n      }\n      var fieldNames = Object.keys(val);\n      if (fieldNames.some(function (s) { return !isValidName(s); })) {\n        // We have to fall back to a map.\n        return Type.forSchema({\n          type: 'map',\n          values: Type.forTypes(fieldNames.map(function (s) {\n            return Type.forValue(val[s], opts);\n          }), opts)\n        }, opts);\n      }\n      return Type.forSchema({\n        type: 'record',\n        fields: fieldNames.map(function (s) {\n          return {name: s, type: Type.forValue(val[s], opts)};\n        })\n      }, opts);\n    default:\n      throw new Error(f('cannot infer type from: %j', val));\n  }\n};\n\nType.forTypes = function (types, opts) {\n  if (!types.length) {\n    throw new Error('no types to combine');\n  }\n  if (types.length === 1) {\n    return types[0]; // Nothing to do.\n  }\n  opts = opts || {};\n\n  // Extract any union types, with special care for wrapped unions (see below).\n  var expanded = [];\n  var numWrappedUnions = 0;\n  var isValidWrappedUnion = true;\n  types.forEach(function (type) {\n    switch (type.typeName) {\n      case 'union:unwrapped':\n        isValidWrappedUnion = false;\n        expanded = expanded.concat(type.types);\n        break;\n      case 'union:wrapped':\n        numWrappedUnions++;\n        expanded = expanded.concat(type.types);\n        break;\n      case 'null':\n        expanded.push(type);\n        break;\n      default:\n        isValidWrappedUnion = false;\n        expanded.push(type);\n    }\n  });\n  if (numWrappedUnions) {\n    if (!isValidWrappedUnion) {\n      // It is only valid to combine wrapped unions when no other type is\n      // present other than wrapped unions and nulls (otherwise the values of\n      // others wouldn't be valid in the resulting union).\n      throw new Error('cannot combine wrapped union');\n    }\n    var branchTypes = {};\n    expanded.forEach(function (type) {\n      var name = type.branchName;\n      var branchType = branchTypes[name];\n      if (!branchType) {\n        branchTypes[name] = type;\n      } else if (!type.equals(branchType)) {\n        throw new Error('inconsistent branch type');\n      }\n    });\n    var wrapUnions = opts.wrapUnions;\n    var unionType;\n    opts.wrapUnions = true;\n    try {\n      unionType = Type.forSchema(Object.keys(branchTypes).map(function (name) {\n        return branchTypes[name];\n      }), opts);\n    } catch (err) {\n      opts.wrapUnions = wrapUnions;\n      throw err;\n    }\n    opts.wrapUnions = wrapUnions;\n    return unionType;\n  }\n\n  // Group types by category, similar to the logic for unwrapped unions.\n  var bucketized = {};\n  expanded.forEach(function (type) {\n    var bucket = getTypeBucket(type);\n    var bucketTypes = bucketized[bucket];\n    if (!bucketTypes) {\n      bucketized[bucket] = bucketTypes = [];\n    }\n    bucketTypes.push(type);\n  });\n\n  // Generate the \"augmented\" type for each group.\n  var buckets = Object.keys(bucketized);\n  var augmented = buckets.map(function (bucket) {\n    var bucketTypes = bucketized[bucket];\n    if (bucketTypes.length === 1) {\n      return bucketTypes[0];\n    } else {\n      switch (bucket) {\n        case 'null':\n        case 'boolean':\n          return bucketTypes[0];\n        case 'number':\n          return combineNumbers(bucketTypes);\n        case 'string':\n          return combineStrings(bucketTypes, opts);\n        case 'buffer':\n          return combineBuffers(bucketTypes, opts);\n        case 'array':\n          // Remove any sentinel arrays (used when inferring from empty arrays)\n          // to avoid making things nullable when they shouldn't be.\n          bucketTypes = bucketTypes.filter(function (t) {\n            return t !== opts.emptyArrayType;\n          });\n          if (!bucketTypes.length) {\n            // We still don't have a real type, just return the sentinel.\n            return opts.emptyArrayType;\n          }\n          return Type.forSchema({\n            type: 'array',\n            items: Type.forTypes(bucketTypes.map(function (t) {\n              return t.itemsType;\n            }))\n          }, opts);\n        default:\n          return combineObjects(bucketTypes, opts);\n      }\n    }\n  });\n\n  if (augmented.length === 1) {\n    return augmented[0];\n  } else {\n    // We return an (unwrapped) union of all augmented types.\n    return Type.forSchema(augmented, opts);\n  }\n};\n\nType.isType = function (/* any, [prefix] ... */) {\n  var l = arguments.length;\n  if (!l) {\n    return false;\n  }\n\n  var any = arguments[0];\n  if (\n    !any ||\n    typeof any._update != 'function' ||\n    typeof any.fingerprint != 'function'\n  ) {\n    // Not fool-proof, but most likely good enough.\n    return false;\n  }\n\n  if (l === 1) {\n    // No type names specified, we are done.\n    return true;\n  }\n\n  // We check if at least one of the prefixes matches.\n  var typeName = any.typeName;\n  var i;\n  for (i = 1; i < l; i++) {\n    if (typeName.indexOf(arguments[i]) === 0) {\n      return true;\n    }\n  }\n  return false;\n};\n\nType.__reset = function (size) {\n  debug('resetting type buffer to %d', size);\n  TAP.buf = new buffer.SlowBuffer(size);\n};\n\nObject.defineProperty(Type.prototype, 'branchName', {\n  enumerable: true,\n  get: function () {\n    if (this.name) {\n      return this.name;\n    }\n    var type = Type.isType(this, 'logical') ? this.underlyingType : this;\n    if (Type.isType(type, 'abstract')) {\n      return type._concreteTypeName;\n    }\n    return Type.isType(type, 'union') ? undefined : type.typeName;\n  }\n});\n\nType.prototype.clone = function (val, opts) {\n  if (opts) {\n    opts = {\n      coerce: !!opts.coerceBuffers | 0, // Coerce JSON to Buffer.\n      fieldHook: opts.fieldHook,\n      qualifyNames: !!opts.qualifyNames,\n      skip: !!opts.skipMissingFields,\n      wrap: !!opts.wrapUnions | 0 // Wrap first match into union.\n    };\n    return this._copy(val, opts);\n  } else {\n    // If no modifications are required, we can get by with a serialization\n    // roundtrip (generally much faster than a standard deep copy).\n    return this.fromBuffer(this.toBuffer(val));\n  }\n};\n\nType.prototype.compare = utils.abstractFunction;\n\nType.prototype.compareBuffers = function (buf1, buf2) {\n  return this._match(new Tap(buf1), new Tap(buf2));\n};\n\nType.prototype.createResolver = function (type, opts) {\n  if (!Type.isType(type)) {\n    // More explicit error message than the \"incompatible type\" thrown\n    // otherwise (especially because of the overridden `toJSON` method).\n    throw new Error(f('not a type: %j', type));\n  }\n\n  if (!Type.isType(this, 'union', 'logical') && Type.isType(type, 'logical')) {\n    // Trying to read a logical type as a built-in: unwrap the logical type.\n    // Note that we exclude unions to support resolving into unions containing\n    // logical types.\n    return this.createResolver(type.underlyingType, opts);\n  }\n\n  opts = opts || {};\n  opts.registry = opts.registry || {};\n\n  var resolver, key;\n  if (\n    Type.isType(this, 'record', 'error') &&\n    Type.isType(type, 'record', 'error')\n  ) {\n    // We allow conversions between records and errors.\n    key = this.name + ':' + type.name; // ':' is illegal in Avro type names.\n    resolver = opts.registry[key];\n    if (resolver) {\n      return resolver;\n    }\n  }\n\n  resolver = new Resolver(this);\n  if (key) { // Register resolver early for recursive schemas.\n    opts.registry[key] = resolver;\n  }\n\n  if (Type.isType(type, 'union')) {\n    var resolvers = type.types.map(function (t) {\n      return this.createResolver(t, opts);\n    }, this);\n    resolver._read = function (tap) {\n      var index = tap.readLong();\n      var resolver = resolvers[index];\n      if (resolver === undefined) {\n        throw new Error(f('invalid union index: %s', index));\n      }\n      return resolvers[index]._read(tap);\n    };\n  } else {\n    this._update(resolver, type, opts);\n  }\n\n  if (!resolver._read) {\n    throw new Error(f('cannot read %s as %s', type, this));\n  }\n  return Object.freeze(resolver);\n};\n\nType.prototype.decode = function (buf, pos, resolver) {\n  var tap = new Tap(buf, pos);\n  var val = readValue(this, tap, resolver);\n  if (!tap.isValid()) {\n    return {value: undefined, offset: -1};\n  }\n  return {value: val, offset: tap.pos};\n};\n\nType.prototype.encode = function (val, buf, pos) {\n  var tap = new Tap(buf, pos);\n  this._write(tap, val);\n  if (!tap.isValid()) {\n    // Don't throw as there is no way to predict this. We also return the\n    // number of missing bytes to ease resizing.\n    return buf.length - tap.pos;\n  }\n  return tap.pos;\n};\n\nType.prototype.equals = function (type) {\n  return (\n    Type.isType(type) &&\n    this.fingerprint().equals(type.fingerprint())\n  );\n};\n\nType.prototype.fingerprint = function (algorithm) {\n  if (!algorithm) {\n    if (!this._hash.str) {\n      var schemaStr = JSON.stringify(this.schema());\n      this._hash.str = utils.getHash(schemaStr).toString('binary');\n    }\n    return utils.bufferFrom(this._hash.str, 'binary');\n  } else {\n    return utils.getHash(JSON.stringify(this.schema()), algorithm);\n  }\n};\n\nType.prototype.fromBuffer = function (buf, resolver, noCheck) {\n  var tap = new Tap(buf);\n  var val = readValue(this, tap, resolver, noCheck);\n  if (!tap.isValid()) {\n    throw new Error('truncated buffer');\n  }\n  if (!noCheck && tap.pos < buf.length) {\n    throw new Error('trailing data');\n  }\n  return val;\n};\n\nType.prototype.fromString = function (str) {\n  return this._copy(JSON.parse(str), {coerce: 2});\n};\n\nType.prototype.inspect = function () {\n  var typeName = this.typeName;\n  var className = getClassName(typeName);\n  if (isPrimitive(typeName)) {\n    // The class name is sufficient to identify the type.\n    return f('<%s>', className);\n  } else {\n    // We add a little metadata for convenience.\n    var obj = this.schema({exportAttrs: true, noDeref: true});\n    if (typeof obj == 'object' && !Type.isType(this, 'logical')) {\n      obj.type = undefined; // Would be redundant with constructor name.\n    }\n    return f('<%s %j>', className, obj);\n  }\n};\n\nType.prototype.isValid = function (val, opts) {\n  // We only have a single flag for now, so no need to complicate things.\n  var flags = (opts && opts.noUndeclaredFields) | 0;\n  var errorHook = opts && opts.errorHook;\n  var hook, path;\n  if (errorHook) {\n    path = [];\n    hook = function (any, type) {\n      errorHook.call(this, path.slice(), any, type, val);\n    };\n  }\n  return this._check(val, flags, hook, path);\n};\n\nType.prototype.random = utils.abstractFunction;\n\nType.prototype.schema = function (opts) {\n  // Copy the options to avoid mutating the original options object when we add\n  // the registry of dereferenced types.\n  return this._attrs({\n    exportAttrs: !!(opts && opts.exportAttrs),\n    noDeref: !!(opts && opts.noDeref)\n  });\n};\n\nType.prototype.toBuffer = function (val) {\n  TAP.pos = 0;\n  this._write(TAP, val);\n  var buf = utils.newBuffer(TAP.pos);\n  if (TAP.isValid()) {\n    TAP.buf.copy(buf, 0, 0, TAP.pos);\n  } else {\n    this._write(new Tap(buf), val);\n  }\n  return buf;\n};\n\nType.prototype.toJSON = function () {\n  // Convenience to allow using `JSON.stringify(type)` to get a type's schema.\n  return this.schema({exportAttrs: true});\n};\n\nType.prototype.toString = function (val) {\n  if (val === undefined) {\n    // Consistent behavior with standard `toString` expectations.\n    return JSON.stringify(this.schema({noDeref: true}));\n  }\n  return JSON.stringify(this._copy(val, {coerce: 3}));\n};\n\nType.prototype.wrap = function (val) {\n  var Branch = this._branchConstructor;\n  return Branch === null ? null : new Branch(val);\n};\n\nType.prototype._attrs = function (opts) {\n  // This function handles a lot of the common logic to schema generation\n  // across types, for example keeping track of which types have already been\n  // de-referenced (i.e. derefed).\n  opts.derefed = opts.derefed || {};\n  var name = this.name;\n  if (name !== undefined) {\n    if (opts.noDeref || opts.derefed[name]) {\n      return name;\n    }\n    opts.derefed[name] = true;\n  }\n  var schema = {};\n  // The order in which we add fields to the `schema` object matters here.\n  // Since JS objects are unordered, this implementation (unfortunately) relies\n  // on engines returning properties in the same order that they are inserted\n  // in. This is not in the JS spec, but can be \"somewhat\" safely assumed (see\n  // http://stackoverflow.com/q/5525795/1062617).\n  if (this.name !== undefined) {\n    schema.name = name;\n  }\n  schema.type = this.typeName;\n  var derefedSchema = this._deref(schema, opts);\n  if (derefedSchema !== undefined) {\n    // We allow the original schema to be overridden (this will happen for\n    // primitive types and logical types).\n    schema = derefedSchema;\n  }\n  if (opts.exportAttrs) {\n    if (this.aliases && this.aliases.length) {\n      schema.aliases = this.aliases;\n    }\n    if (this.doc !== undefined) {\n      schema.doc = this.doc;\n    }\n  }\n  return schema;\n};\n\nType.prototype._createBranchConstructor = function () {\n  // jshint -W054\n  var name = this.branchName;\n  if (name === 'null') {\n    return null;\n  }\n  var attr = ~name.indexOf('.') ? 'this[\\'' + name + '\\']' : 'this.' + name;\n  var body = 'return function Branch$(val) { ' + attr + ' = val; };';\n  var Branch = (new Function(body))();\n  Branch.type = this;\n  Branch.prototype.unwrap = new Function('return ' + attr + ';');\n  Branch.prototype.unwrapped = Branch.prototype.unwrap; // Deprecated.\n  return Branch;\n};\n\nType.prototype._peek = function (tap) {\n  var pos = tap.pos;\n  var val = this._read(tap);\n  tap.pos = pos;\n  return val;\n};\n\nType.prototype._check = utils.abstractFunction;\nType.prototype._copy = utils.abstractFunction;\nType.prototype._deref = utils.abstractFunction;\nType.prototype._match = utils.abstractFunction;\nType.prototype._read = utils.abstractFunction;\nType.prototype._skip = utils.abstractFunction;\nType.prototype._update = utils.abstractFunction;\nType.prototype._write = utils.abstractFunction;\n\n// \"Deprecated\" getters (will be explicitly deprecated in 5.1).\n\nType.prototype.getAliases = function () { return this.aliases; };\n\nType.prototype.getFingerprint = Type.prototype.fingerprint;\n\nType.prototype.getName = function (asBranch) {\n  return (this.name || !asBranch) ? this.name : this.branchName;\n};\n\nType.prototype.getSchema = Type.prototype.schema;\n\nType.prototype.getTypeName = function () { return this.typeName; };\n\n// Implementations.\n\n/**\n * Base primitive Avro type.\n *\n * Most of the primitive types share the same cloning and resolution\n * mechanisms, provided by this class. This class also lets us conveniently\n * check whether a type is a primitive using `instanceof`.\n */\nfunction PrimitiveType(noFreeze) {\n  Type.call(this);\n  this._branchConstructor = this._createBranchConstructor();\n  if (!noFreeze) {\n    // Abstract long types can't be frozen at this stage.\n    Object.freeze(this);\n  }\n}\nutil.inherits(PrimitiveType, Type);\n\nPrimitiveType.prototype._update = function (resolver, type) {\n  if (type.typeName === this.typeName) {\n    resolver._read = this._read;\n  }\n};\n\nPrimitiveType.prototype._copy = function (val) {\n  this._check(val, undefined, throwInvalidError);\n  return val;\n};\n\nPrimitiveType.prototype._deref = function () { return this.typeName; };\n\nPrimitiveType.prototype.compare = utils.compare;\n\n/** Nulls. */\nfunction NullType() { PrimitiveType.call(this); }\nutil.inherits(NullType, PrimitiveType);\n\nNullType.prototype._check = function (val, flags, hook) {\n  var b = val === null;\n  if (!b && hook) {\n    hook(val, this);\n  }\n  return b;\n};\n\nNullType.prototype._read = function () { return null; };\n\nNullType.prototype._skip = function () {};\n\nNullType.prototype._write = function (tap, val) {\n  if (val !== null) {\n    throwInvalidError(val, this);\n  }\n};\n\nNullType.prototype._match = function () { return 0; };\n\nNullType.prototype.compare = NullType.prototype._match;\n\nNullType.prototype.typeName = 'null';\n\nNullType.prototype.random = NullType.prototype._read;\n\n/** Booleans. */\nfunction BooleanType() { PrimitiveType.call(this); }\nutil.inherits(BooleanType, PrimitiveType);\n\nBooleanType.prototype._check = function (val, flags, hook) {\n  var b = typeof val == 'boolean';\n  if (!b && hook) {\n    hook(val, this);\n  }\n  return b;\n};\n\nBooleanType.prototype._read = function (tap) { return tap.readBoolean(); };\n\nBooleanType.prototype._skip = function (tap) { tap.skipBoolean(); };\n\nBooleanType.prototype._write = function (tap, val) {\n  if (typeof val != 'boolean') {\n    throwInvalidError(val, this);\n  }\n  tap.writeBoolean(val);\n};\n\nBooleanType.prototype._match = function (tap1, tap2) {\n  return tap1.matchBoolean(tap2);\n};\n\nBooleanType.prototype.typeName = 'boolean';\n\nBooleanType.prototype.random = function () { return RANDOM.nextBoolean(); };\n\n/** Integers. */\nfunction IntType() { PrimitiveType.call(this); }\nutil.inherits(IntType, PrimitiveType);\n\nIntType.prototype._check = function (val, flags, hook) {\n  var b = val === (val | 0);\n  if (!b && hook) {\n    hook(val, this);\n  }\n  return b;\n};\n\nIntType.prototype._read = function (tap) { return tap.readInt(); };\n\nIntType.prototype._skip = function (tap) { tap.skipInt(); };\n\nIntType.prototype._write = function (tap, val) {\n  if (val !== (val | 0)) {\n    throwInvalidError(val, this);\n  }\n  tap.writeInt(val);\n};\n\nIntType.prototype._match = function (tap1, tap2) {\n  return tap1.matchInt(tap2);\n};\n\nIntType.prototype.typeName = 'int';\n\nIntType.prototype.random = function () { return RANDOM.nextInt(1000) | 0; };\n\n/**\n * Longs.\n *\n * We can't capture all the range unfortunately since JavaScript represents all\n * numbers internally as `double`s, so the default implementation plays safe\n * and throws rather than potentially silently change the data. See `__with` or\n * `AbstractLongType` below for a way to implement a custom long type.\n */\nfunction LongType() { PrimitiveType.call(this); }\nutil.inherits(LongType, PrimitiveType);\n\nLongType.prototype._check = function (val, flags, hook) {\n  var b = typeof val == 'number' && val % 1 === 0 && isSafeLong(val);\n  if (!b && hook) {\n    hook(val, this);\n  }\n  return b;\n};\n\nLongType.prototype._read = function (tap) {\n  var n = tap.readLong();\n  if (!isSafeLong(n)) {\n    throw new Error('potential precision loss');\n  }\n  return n;\n};\n\nLongType.prototype._skip = function (tap) { tap.skipLong(); };\n\nLongType.prototype._write = function (tap, val) {\n  if (typeof val != 'number' || val % 1 || !isSafeLong(val)) {\n    throwInvalidError(val, this);\n  }\n  tap.writeLong(val);\n};\n\nLongType.prototype._match = function (tap1, tap2) {\n  return tap1.matchLong(tap2);\n};\n\nLongType.prototype._update = function (resolver, type) {\n  switch (type.typeName) {\n    case 'int':\n      resolver._read = type._read;\n      break;\n    case 'abstract:long':\n    case 'long':\n      resolver._read = this._read; // In case `type` is an `AbstractLongType`.\n  }\n};\n\nLongType.prototype.typeName = 'long';\n\nLongType.prototype.random = function () { return RANDOM.nextInt(); };\n\nLongType.__with = function (methods, noUnpack) {\n  methods = methods || {}; // Will give a more helpful error message.\n  // We map some of the methods to a different name to be able to intercept\n  // their input and output (otherwise we wouldn't be able to perform any\n  // unpacking logic, and the type wouldn't work when nested).\n  var mapping = {\n    toBuffer: '_toBuffer',\n    fromBuffer: '_fromBuffer',\n    fromJSON: '_fromJSON',\n    toJSON: '_toJSON',\n    isValid: '_isValid',\n    compare: 'compare'\n  };\n  var type = new AbstractLongType(noUnpack);\n  Object.keys(mapping).forEach(function (name) {\n    if (methods[name] === undefined) {\n      throw new Error(f('missing method implementation: %s', name));\n    }\n    type[mapping[name]] = methods[name];\n  });\n  return Object.freeze(type);\n};\n\n/** Floats. */\nfunction FloatType() { PrimitiveType.call(this); }\nutil.inherits(FloatType, PrimitiveType);\n\nFloatType.prototype._check = function (val, flags, hook) {\n  var b = typeof val == 'number';\n  if (!b && hook) {\n    hook(val, this);\n  }\n  return b;\n};\n\nFloatType.prototype._read = function (tap) { return tap.readFloat(); };\n\nFloatType.prototype._skip = function (tap) { tap.skipFloat(); };\n\nFloatType.prototype._write = function (tap, val) {\n  if (typeof val != 'number') {\n    throwInvalidError(val, this);\n  }\n  tap.writeFloat(val);\n};\n\nFloatType.prototype._match = function (tap1, tap2) {\n  return tap1.matchFloat(tap2);\n};\n\nFloatType.prototype._update = function (resolver, type) {\n  switch (type.typeName) {\n    case 'float':\n    case 'int':\n      resolver._read = type._read;\n      break;\n    case 'abstract:long':\n    case 'long':\n      // No need to worry about precision loss here since we're always rounding\n      // to float anyway.\n      resolver._read = function (tap) { return tap.readLong(); };\n  }\n};\n\nFloatType.prototype.typeName = 'float';\n\nFloatType.prototype.random = function () { return RANDOM.nextFloat(1e3); };\n\n/** Doubles. */\nfunction DoubleType() { PrimitiveType.call(this); }\nutil.inherits(DoubleType, PrimitiveType);\n\nDoubleType.prototype._check = function (val, flags, hook) {\n  var b = typeof val == 'number';\n  if (!b && hook) {\n    hook(val, this);\n  }\n  return b;\n};\n\nDoubleType.prototype._read = function (tap) { return tap.readDouble(); };\n\nDoubleType.prototype._skip = function (tap) { tap.skipDouble(); };\n\nDoubleType.prototype._write = function (tap, val) {\n  if (typeof val != 'number') {\n    throwInvalidError(val, this);\n  }\n  tap.writeDouble(val);\n};\n\nDoubleType.prototype._match = function (tap1, tap2) {\n  return tap1.matchDouble(tap2);\n};\n\nDoubleType.prototype._update = function (resolver, type) {\n  switch (type.typeName) {\n    case 'double':\n    case 'float':\n    case 'int':\n      resolver._read = type._read;\n      break;\n    case 'abstract:long':\n    case 'long':\n      // Similar to inside `FloatType`, no need to worry about precision loss\n      // here since we're always rounding to double anyway.\n      resolver._read = function (tap) { return tap.readLong(); };\n  }\n};\n\nDoubleType.prototype.typeName = 'double';\n\nDoubleType.prototype.random = function () { return RANDOM.nextFloat(); };\n\n/** Strings. */\nfunction StringType() { PrimitiveType.call(this); }\nutil.inherits(StringType, PrimitiveType);\n\nStringType.prototype._check = function (val, flags, hook) {\n  var b = typeof val == 'string';\n  if (!b && hook) {\n    hook(val, this);\n  }\n  return b;\n};\n\nStringType.prototype._read = function (tap) { return tap.readString(); };\n\nStringType.prototype._skip = function (tap) { tap.skipString(); };\n\nStringType.prototype._write = function (tap, val) {\n  if (typeof val != 'string') {\n    throwInvalidError(val, this);\n  }\n  tap.writeString(val);\n};\n\nStringType.prototype._match = function (tap1, tap2) {\n  return tap1.matchString(tap2);\n};\n\nStringType.prototype._update = function (resolver, type) {\n  switch (type.typeName) {\n    case 'bytes':\n    case 'string':\n      resolver._read = this._read;\n  }\n};\n\nStringType.prototype.typeName = 'string';\n\nStringType.prototype.random = function () {\n  return RANDOM.nextString(RANDOM.nextInt(32));\n};\n\n/**\n * Bytes.\n *\n * These are represented in memory as `Buffer`s rather than binary-encoded\n * strings. This is more efficient (when decoding/encoding from bytes, the\n * common use-case), idiomatic, and convenient.\n *\n * Note the coercion in `_copy`.\n */\nfunction BytesType() { PrimitiveType.call(this); }\nutil.inherits(BytesType, PrimitiveType);\n\nBytesType.prototype._check = function (val, flags, hook) {\n  var b = Buffer.isBuffer(val);\n  if (!b && hook) {\n    hook(val, this);\n  }\n  return b;\n};\n\nBytesType.prototype._read = function (tap) { return tap.readBytes(); };\n\nBytesType.prototype._skip = function (tap) { tap.skipBytes(); };\n\nBytesType.prototype._write = function (tap, val) {\n  if (!Buffer.isBuffer(val)) {\n    throwInvalidError(val, this);\n  }\n  tap.writeBytes(val);\n};\n\nBytesType.prototype._match = function (tap1, tap2) {\n  return tap1.matchBytes(tap2);\n};\n\nBytesType.prototype._update = StringType.prototype._update;\n\nBytesType.prototype._copy = function (obj, opts) {\n  var buf;\n  switch ((opts && opts.coerce) | 0) {\n    case 3: // Coerce buffers to strings.\n      this._check(obj, undefined, throwInvalidError);\n      return obj.toString('binary');\n    case 2: // Coerce strings to buffers.\n      if (typeof obj != 'string') {\n        throw new Error(f('cannot coerce to buffer: %j', obj));\n      }\n      buf = utils.bufferFrom(obj, 'binary');\n      this._check(buf, undefined, throwInvalidError);\n      return buf;\n    case 1: // Coerce buffer JSON representation to buffers.\n      if (!isJsonBuffer(obj)) {\n        throw new Error(f('cannot coerce to buffer: %j', obj));\n      }\n      buf = utils.bufferFrom(obj.data);\n      this._check(buf, undefined, throwInvalidError);\n      return buf;\n    default: // Copy buffer.\n      this._check(obj, undefined, throwInvalidError);\n      return utils.bufferFrom(obj);\n  }\n};\n\nBytesType.prototype.compare = Buffer.compare;\n\nBytesType.prototype.typeName = 'bytes';\n\nBytesType.prototype.random = function () {\n  return RANDOM.nextBuffer(RANDOM.nextInt(32));\n};\n\n/** Base \"abstract\" Avro union type. */\nfunction UnionType(schema, opts) {\n  Type.call(this);\n\n  if (!Array.isArray(schema)) {\n    throw new Error(f('non-array union schema: %j', schema));\n  }\n  if (!schema.length) {\n    throw new Error('empty union');\n  }\n  this.types = Object.freeze(schema.map(function (obj) {\n    return Type.forSchema(obj, opts);\n  }));\n\n  this._branchIndices = {};\n  this.types.forEach(function (type, i) {\n    if (Type.isType(type, 'union')) {\n      throw new Error('unions cannot be directly nested');\n    }\n    var branch = type.branchName;\n    if (this._branchIndices[branch] !== undefined) {\n      throw new Error(f('duplicate union branch name: %j', branch));\n    }\n    this._branchIndices[branch] = i;\n  }, this);\n}\nutil.inherits(UnionType, Type);\n\nUnionType.prototype._branchConstructor = function () {\n  throw new Error('unions cannot be directly wrapped');\n};\n\nUnionType.prototype._skip = function (tap) {\n  this.types[tap.readLong()]._skip(tap);\n};\n\nUnionType.prototype._match = function (tap1, tap2) {\n  var n1 = tap1.readLong();\n  var n2 = tap2.readLong();\n  if (n1 === n2) {\n    return this.types[n1]._match(tap1, tap2);\n  } else {\n    return n1 < n2 ? -1 : 1;\n  }\n};\n\nUnionType.prototype._deref = function (schema, opts) {\n  return this.types.map(function (t) { return t._attrs(opts); });\n};\n\nUnionType.prototype.getTypes = function () { return this.types; };\n\n/**\n * \"Natural\" union type.\n *\n * This representation doesn't require a wrapping object and is therefore\n * simpler and generally closer to what users expect. However it cannot be used\n * to represent all Avro unions since some lead to ambiguities (e.g. if two\n * number types are in the union).\n *\n * Currently, this union supports at most one type in each of the categories\n * below:\n *\n * + `null`\n * + `boolean`\n * + `int`, `long`, `float`, `double`\n * + `string`, `enum`\n * + `bytes`, `fixed`\n * + `array`\n * + `map`, `record`\n */\nfunction UnwrappedUnionType(schema, opts) {\n  UnionType.call(this, schema, opts);\n\n  this._dynamicBranches = null;\n  this._bucketIndices = {};\n  this.types.forEach(function (type, index) {\n    if (Type.isType(type, 'abstract', 'logical')) {\n      if (!this._dynamicBranches) {\n        this._dynamicBranches = [];\n      }\n      this._dynamicBranches.push({index: index, type: type});\n    } else {\n      var bucket = getTypeBucket(type);\n      if (this._bucketIndices[bucket] !== undefined) {\n        throw new Error(f('ambiguous unwrapped union: %j', this));\n      }\n      this._bucketIndices[bucket] = index;\n    }\n  }, this);\n\n  Object.freeze(this);\n}\nutil.inherits(UnwrappedUnionType, UnionType);\n\nUnwrappedUnionType.prototype._getIndex = function (val) {\n  var index = this._bucketIndices[getValueBucket(val)];\n  if (this._dynamicBranches) {\n    // Slower path, we must run the value through all branches.\n    index = this._getBranchIndex(val, index);\n  }\n  return index;\n};\n\nUnwrappedUnionType.prototype._getBranchIndex = function (any, index) {\n  var logicalBranches = this._dynamicBranches;\n  var i, l, branch;\n  for (i = 0, l = logicalBranches.length; i < l; i++) {\n    branch = logicalBranches[i];\n    if (branch.type._check(any)) {\n      if (index === undefined) {\n        index = branch.index;\n      } else {\n        // More than one branch matches the value so we aren't guaranteed to\n        // infer the correct type. We throw rather than corrupt data. This can\n        // be fixed by \"tightening\" the logical types.\n        throw new Error('ambiguous conversion');\n      }\n    }\n  }\n  return index;\n};\n\nUnwrappedUnionType.prototype._check = function (val, flags, hook, path) {\n  var index = this._getIndex(val);\n  var b = index !== undefined;\n  if (b) {\n    return this.types[index]._check(val, flags, hook, path);\n  }\n  if (hook) {\n    hook(val, this);\n  }\n  return b;\n};\n\nUnwrappedUnionType.prototype._read = function (tap) {\n  var index = tap.readLong();\n  var branchType = this.types[index];\n  if (branchType) {\n    return branchType._read(tap);\n  } else {\n    throw new Error(f('invalid union index: %s', index));\n  }\n};\n\nUnwrappedUnionType.prototype._write = function (tap, val) {\n  var index = this._getIndex(val);\n  if (index === undefined) {\n    throwInvalidError(val, this);\n  }\n  tap.writeLong(index);\n  if (val !== null) {\n    this.types[index]._write(tap, val);\n  }\n};\n\nUnwrappedUnionType.prototype._update = function (resolver, type, opts) {\n  // jshint -W083\n  // (The loop exits after the first function is created.)\n  var i, l, typeResolver;\n  for (i = 0, l = this.types.length; i < l; i++) {\n    try {\n      typeResolver = this.types[i].createResolver(type, opts);\n    } catch (err) {\n      continue;\n    }\n    resolver._read = function (tap) { return typeResolver._read(tap); };\n    return;\n  }\n};\n\nUnwrappedUnionType.prototype._copy = function (val, opts) {\n  var coerce = opts && opts.coerce | 0;\n  var wrap = opts && opts.wrap | 0;\n  var index;\n  if (wrap === 2) {\n    // We are parsing a default, so always use the first branch's type.\n    index = 0;\n  } else {\n    switch (coerce) {\n      case 1:\n        // Using the `coerceBuffers` option can cause corruption and erroneous\n        // failures with unwrapped unions (in rare cases when the union also\n        // contains a record which matches a buffer's JSON representation).\n        if (isJsonBuffer(val) && this._bucketIndices.buffer !== undefined) {\n          index = this._bucketIndices.buffer;\n        } else {\n          index = this._getIndex(val);\n        }\n        break;\n      case 2:\n        // Decoding from JSON, we must unwrap the value.\n        if (val === null) {\n          index = this._bucketIndices['null'];\n        } else if (typeof val === 'object') {\n          var keys = Object.keys(val);\n          if (keys.length === 1) {\n            index = this._branchIndices[keys[0]];\n            val = val[keys[0]];\n          }\n        }\n        break;\n      default:\n        index = this._getIndex(val);\n    }\n    if (index === undefined) {\n      throwInvalidError(val, this);\n    }\n  }\n  var type = this.types[index];\n  if (val === null || wrap === 3) {\n    return type._copy(val, opts);\n  } else {\n    switch (coerce) {\n      case 3:\n        // Encoding to JSON, we wrap the value.\n        var obj = {};\n        obj[type.branchName] = type._copy(val, opts);\n        return obj;\n      default:\n        return type._copy(val, opts);\n    }\n  }\n};\n\nUnwrappedUnionType.prototype.compare = function (val1, val2) {\n  var index1 = this._getIndex(val1);\n  var index2 = this._getIndex(val2);\n  if (index1 === undefined) {\n    throwInvalidError(val1, this);\n  } else if (index2 === undefined) {\n    throwInvalidError(val2, this);\n  } else if (index1 === index2) {\n    return this.types[index1].compare(val1, val2);\n  } else {\n    return utils.compare(index1, index2);\n  }\n};\n\nUnwrappedUnionType.prototype.typeName = 'union:unwrapped';\n\nUnwrappedUnionType.prototype.random = function () {\n  var index = RANDOM.nextInt(this.types.length);\n  return this.types[index].random();\n};\n\n/**\n * Compatible union type.\n *\n * Values of this type are represented in memory similarly to their JSON\n * representation (i.e. inside an object with single key the name of the\n * contained type).\n *\n * This is not ideal, but is the most efficient way to unambiguously support\n * all unions. Here are a few reasons why the wrapping object is necessary:\n *\n * + Unions with multiple number types would have undefined behavior, unless\n *   numbers are wrapped (either everywhere, leading to large performance and\n *   convenience costs; or only when necessary inside unions, making it hard to\n *   understand when numbers are wrapped or not).\n * + Fixed types would have to be wrapped to be distinguished from bytes.\n * + Using record's constructor names would work (after a slight change to use\n *   the fully qualified name), but would mean that generic objects could no\n *   longer be valid records (making it inconvenient to do simple things like\n *   creating new records).\n */\nfunction WrappedUnionType(schema, opts) {\n  UnionType.call(this, schema, opts);\n  Object.freeze(this);\n}\nutil.inherits(WrappedUnionType, UnionType);\n\nWrappedUnionType.prototype._check = function (val, flags, hook, path) {\n  var b = false;\n  if (val === null) {\n    // Shortcut type lookup in this case.\n    b = this._branchIndices['null'] !== undefined;\n  } else if (typeof val == 'object') {\n    var keys = Object.keys(val);\n    if (keys.length === 1) {\n      // We require a single key here to ensure that writes are correct and\n      // efficient as soon as a record passes this check.\n      var name = keys[0];\n      var index = this._branchIndices[name];\n      if (index !== undefined) {\n        if (hook) {\n          // Slow path.\n          path.push(name);\n          b = this.types[index]._check(val[name], flags, hook, path);\n          path.pop();\n          return b;\n        } else {\n          return this.types[index]._check(val[name], flags);\n        }\n      }\n    }\n  }\n  if (!b && hook) {\n    hook(val, this);\n  }\n  return b;\n};\n\nWrappedUnionType.prototype._read = function (tap) {\n  var type = this.types[tap.readLong()];\n  if (!type) {\n    throw new Error(f('invalid union index'));\n  }\n  var Branch = type._branchConstructor;\n  if (Branch === null) {\n    return null;\n  } else {\n    return new Branch(type._read(tap));\n  }\n};\n\nWrappedUnionType.prototype._write = function (tap, val) {\n  var index, keys, name;\n  if (val === null) {\n    index = this._branchIndices['null'];\n    if (index === undefined) {\n      throwInvalidError(val, this);\n    }\n    tap.writeLong(index);\n  } else {\n    keys = Object.keys(val);\n    if (keys.length === 1) {\n      name = keys[0];\n      index = this._branchIndices[name];\n    }\n    if (index === undefined) {\n      throwInvalidError(val, this);\n    }\n    tap.writeLong(index);\n    this.types[index]._write(tap, val[name]);\n  }\n};\n\nWrappedUnionType.prototype._update = function (resolver, type, opts) {\n  // jshint -W083\n  // (The loop exits after the first function is created.)\n  var i, l, typeResolver, Branch;\n  for (i = 0, l = this.types.length; i < l; i++) {\n    try {\n      typeResolver = this.types[i].createResolver(type, opts);\n    } catch (err) {\n      continue;\n    }\n    Branch = this.types[i]._branchConstructor;\n    if (Branch) {\n      resolver._read = function (tap) {\n        return new Branch(typeResolver._read(tap));\n      };\n    } else {\n      resolver._read = function () { return null; };\n    }\n    return;\n  }\n};\n\nWrappedUnionType.prototype._copy = function (val, opts) {\n  var wrap = opts && opts.wrap | 0;\n  if (wrap === 2) {\n    var firstType = this.types[0];\n    // Promote into first type (used for schema defaults).\n    if (val === null && firstType.typeName === 'null') {\n      return null;\n    }\n    return new firstType._branchConstructor(firstType._copy(val, opts));\n  }\n  if (val === null && this._branchIndices['null'] !== undefined) {\n    return null;\n  }\n\n  var i, l, obj;\n  if (typeof val == 'object') {\n    var keys = Object.keys(val);\n    if (keys.length === 1) {\n      var name = keys[0];\n      i = this._branchIndices[name];\n      if (i === undefined && opts.qualifyNames) {\n        // We are a bit more flexible than in `_check` here since we have\n        // to deal with other serializers being less strict, so we fall\n        // back to looking up unqualified names.\n        var j, type;\n        for (j = 0, l = this.types.length; j < l; j++) {\n          type = this.types[j];\n          if (type.name && name === unqualify(type.name)) {\n            i = j;\n            break;\n          }\n        }\n      }\n      if (i !== undefined) {\n        obj = this.types[i]._copy(val[name], opts);\n      }\n    }\n  }\n  if (wrap === 1 && obj === undefined) {\n    // Try promoting into first match (convenience, slow).\n    i = 0;\n    l = this.types.length;\n    while (i < l && obj === undefined) {\n      try {\n        obj = this.types[i]._copy(val, opts);\n      } catch (err) {\n        i++;\n      }\n    }\n  }\n  if (obj !== undefined) {\n    return wrap === 3 ? obj : new this.types[i]._branchConstructor(obj);\n  }\n  throwInvalidError(val, this);\n};\n\nWrappedUnionType.prototype.compare = function (val1, val2) {\n  var name1 = val1 === null ? 'null' : Object.keys(val1)[0];\n  var name2 = val2 === null ? 'null' : Object.keys(val2)[0];\n  var index = this._branchIndices[name1];\n  if (name1 === name2) {\n    return name1 === 'null' ?\n      0 :\n      this.types[index].compare(val1[name1], val2[name1]);\n  } else {\n    return utils.compare(index, this._branchIndices[name2]);\n  }\n};\n\nWrappedUnionType.prototype.typeName = 'union:wrapped';\n\nWrappedUnionType.prototype.random = function () {\n  var index = RANDOM.nextInt(this.types.length);\n  var type = this.types[index];\n  var Branch = type._branchConstructor;\n  if (!Branch) {\n    return null;\n  }\n  return new Branch(type.random());\n};\n\n/**\n * Avro enum type.\n *\n * Represented as strings (with allowed values from the set of symbols). Using\n * integers would be a reasonable option, but the performance boost is arguably\n * offset by the legibility cost and the extra deviation from the JSON encoding\n * convention.\n *\n * An integer representation can still be used (e.g. for compatibility with\n * TypeScript `enum`s) by overriding the `EnumType` with a `LongType` (e.g. via\n * `parse`'s registry).\n */\nfunction EnumType(schema, opts) {\n  Type.call(this, schema, opts);\n  if (!Array.isArray(schema.symbols) || !schema.symbols.length) {\n    throw new Error(f('invalid enum symbols: %j', schema.symbols));\n  }\n  this.symbols = Object.freeze(schema.symbols.slice());\n  this._indices = {};\n  this.symbols.forEach(function (symbol, i) {\n    if (!isValidName(symbol)) {\n      throw new Error(f('invalid %s symbol: %j', this, symbol));\n    }\n    if (this._indices[symbol] !== undefined) {\n      throw new Error(f('duplicate %s symbol: %j', this, symbol));\n    }\n    this._indices[symbol] = i;\n  }, this);\n  this._branchConstructor = this._createBranchConstructor();\n  Object.freeze(this);\n}\nutil.inherits(EnumType, Type);\n\nEnumType.prototype._check = function (val, flags, hook) {\n  var b = this._indices[val] !== undefined;\n  if (!b && hook) {\n    hook(val, this);\n  }\n  return b;\n};\n\nEnumType.prototype._read = function (tap) {\n  var index = tap.readLong();\n  var symbol = this.symbols[index];\n  if (symbol === undefined) {\n    throw new Error(f('invalid %s enum index: %s', this.name, index));\n  }\n  return symbol;\n};\n\nEnumType.prototype._skip = function (tap) { tap.skipLong(); };\n\nEnumType.prototype._write = function (tap, val) {\n  var index = this._indices[val];\n  if (index === undefined) {\n    throwInvalidError(val, this);\n  }\n  tap.writeLong(index);\n};\n\nEnumType.prototype._match = function (tap1, tap2) {\n  return tap1.matchLong(tap2);\n};\n\nEnumType.prototype.compare = function (val1, val2) {\n  return utils.compare(this._indices[val1], this._indices[val2]);\n};\n\nEnumType.prototype._update = function (resolver, type) {\n  var symbols = this.symbols;\n  if (\n    type.typeName === 'enum' &&\n    (!type.name || ~getAliases(this).indexOf(type.name)) &&\n    type.symbols.every(function (s) { return ~symbols.indexOf(s); })\n  ) {\n    resolver.symbols = type.symbols;\n    resolver._read = type._read;\n  }\n};\n\nEnumType.prototype._copy = function (val) {\n  this._check(val, undefined, throwInvalidError);\n  return val;\n};\n\nEnumType.prototype._deref = function (schema) {\n  schema.symbols = this.symbols;\n};\n\nEnumType.prototype.getSymbols = function () { return this.symbols; };\n\nEnumType.prototype.typeName = 'enum';\n\nEnumType.prototype.random = function () {\n  return RANDOM.choice(this.symbols);\n};\n\n/** Avro fixed type. Represented simply as a `Buffer`. */\nfunction FixedType(schema, opts) {\n  Type.call(this, schema, opts);\n  if (schema.size !== (schema.size | 0) || schema.size < 1) {\n    throw new Error(f('invalid %s size', this.branchName));\n  }\n  this.size = schema.size | 0;\n  this._branchConstructor = this._createBranchConstructor();\n  Object.freeze(this);\n}\nutil.inherits(FixedType, Type);\n\nFixedType.prototype._check = function (val, flags, hook) {\n  var b = Buffer.isBuffer(val) && val.length === this.size;\n  if (!b && hook) {\n    hook(val, this);\n  }\n  return b;\n};\n\nFixedType.prototype._read = function (tap) {\n  return tap.readFixed(this.size);\n};\n\nFixedType.prototype._skip = function (tap) {\n  tap.skipFixed(this.size);\n};\n\nFixedType.prototype._write = function (tap, val) {\n  if (!Buffer.isBuffer(val) || val.length !== this.size) {\n    throwInvalidError(val, this);\n  }\n  tap.writeFixed(val, this.size);\n};\n\nFixedType.prototype._match = function (tap1, tap2) {\n  return tap1.matchFixed(tap2, this.size);\n};\n\nFixedType.prototype.compare = Buffer.compare;\n\nFixedType.prototype._update = function (resolver, type) {\n  if (\n    type.typeName === 'fixed' &&\n    this.size === type.size &&\n    (!type.name || ~getAliases(this).indexOf(type.name))\n  ) {\n    resolver.size = this.size;\n    resolver._read = this._read;\n  }\n};\n\nFixedType.prototype._copy = BytesType.prototype._copy;\n\nFixedType.prototype._deref = function (schema) { schema.size = this.size; };\n\nFixedType.prototype.getSize = function () { return this.size; };\n\nFixedType.prototype.typeName = 'fixed';\n\nFixedType.prototype.random = function () {\n  return RANDOM.nextBuffer(this.size);\n};\n\n/** Avro map. Represented as vanilla objects. */\nfunction MapType(schema, opts) {\n  Type.call(this);\n  if (!schema.values) {\n    throw new Error(f('missing map values: %j', schema));\n  }\n  this.valuesType = Type.forSchema(schema.values, opts);\n  this._branchConstructor = this._createBranchConstructor();\n  Object.freeze(this);\n}\nutil.inherits(MapType, Type);\n\nMapType.prototype._check = function (val, flags, hook, path) {\n  if (!val || typeof val != 'object' || Array.isArray(val)) {\n    if (hook) {\n      hook(val, this);\n    }\n    return false;\n  }\n\n  var keys = Object.keys(val);\n  var b = true;\n  var i, l, j, key;\n  if (hook) {\n    // Slow path.\n    j = path.length;\n    path.push('');\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = path[j] = keys[i];\n      if (!this.valuesType._check(val[key], flags, hook, path)) {\n        b = false;\n      }\n    }\n    path.pop();\n  } else {\n    for (i = 0, l = keys.length; i < l; i++) {\n      if (!this.valuesType._check(val[keys[i]], flags)) {\n        return false;\n      }\n    }\n  }\n  return b;\n};\n\nMapType.prototype._read = function (tap) {\n  var values = this.valuesType;\n  var val = {};\n  var n;\n  while ((n = readArraySize(tap))) {\n    while (n--) {\n      var key = tap.readString();\n      val[key] = values._read(tap);\n    }\n  }\n  return val;\n};\n\nMapType.prototype._skip = function (tap) {\n  var values = this.valuesType;\n  var len, n;\n  while ((n = tap.readLong())) {\n    if (n < 0) {\n      len = tap.readLong();\n      tap.pos += len;\n    } else {\n      while (n--) {\n        tap.skipString();\n        values._skip(tap);\n      }\n    }\n  }\n};\n\nMapType.prototype._write = function (tap, val) {\n  if (!val || typeof val != 'object' || Array.isArray(val)) {\n    throwInvalidError(val, this);\n  }\n\n  var values = this.valuesType;\n  var keys = Object.keys(val);\n  var n = keys.length;\n  var i, key;\n  if (n) {\n    tap.writeLong(n);\n    for (i = 0; i < n; i++) {\n      key = keys[i];\n      tap.writeString(key);\n      values._write(tap, val[key]);\n    }\n  }\n  tap.writeLong(0);\n};\n\nMapType.prototype._match = function () {\n  throw new Error('maps cannot be compared');\n};\n\nMapType.prototype._update = function (rsv, type, opts) {\n  if (type.typeName === 'map') {\n    rsv.valuesType = this.valuesType.createResolver(type.valuesType, opts);\n    rsv._read = this._read;\n  }\n};\n\nMapType.prototype._copy = function (val, opts) {\n  if (val && typeof val == 'object' && !Array.isArray(val)) {\n    var values = this.valuesType;\n    var keys = Object.keys(val);\n    var i, l, key;\n    var copy = {};\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      copy[key] = values._copy(val[key], opts);\n    }\n    return copy;\n  }\n  throwInvalidError(val, this);\n};\n\nMapType.prototype.compare = MapType.prototype._match;\n\nMapType.prototype.typeName = 'map';\n\nMapType.prototype.getValuesType = function () { return this.valuesType; };\n\nMapType.prototype.random = function () {\n  var val = {};\n  var i, l;\n  for (i = 0, l = RANDOM.nextInt(10); i < l; i++) {\n    val[RANDOM.nextString(RANDOM.nextInt(20))] = this.valuesType.random();\n  }\n  return val;\n};\n\nMapType.prototype._deref = function (schema, opts) {\n  schema.values = this.valuesType._attrs(opts);\n};\n\n/** Avro array. Represented as vanilla arrays. */\nfunction ArrayType(schema, opts) {\n  Type.call(this);\n  if (!schema.items) {\n    throw new Error(f('missing array items: %j', schema));\n  }\n  this.itemsType = Type.forSchema(schema.items, opts);\n  this._branchConstructor = this._createBranchConstructor();\n  Object.freeze(this);\n}\nutil.inherits(ArrayType, Type);\n\nArrayType.prototype._check = function (val, flags, hook, path) {\n  if (!Array.isArray(val)) {\n    if (hook) {\n      hook(val, this);\n    }\n    return false;\n  }\n\n  var b = true;\n  var i, l, j;\n  if (hook) {\n    // Slow path.\n    j = path.length;\n    path.push('');\n    for (i = 0, l = val.length; i < l; i++) {\n      path[j] = '' + i;\n      if (!this.itemsType._check(val[i], flags, hook, path)) {\n        b = false;\n      }\n    }\n    path.pop();\n  } else {\n    for (i = 0, l = val.length; i < l; i++) {\n      if (!this.itemsType._check(val[i], flags)) {\n        return false;\n      }\n    }\n  }\n  return b;\n};\n\nArrayType.prototype._read = function (tap) {\n  var items = this.itemsType;\n  var val = [];\n  var n;\n  while ((n = tap.readLong())) {\n    if (n < 0) {\n      n = -n;\n      tap.skipLong(); // Skip size.\n    }\n    while (n--) {\n      val.push(items._read(tap));\n    }\n  }\n  return val;\n};\n\nArrayType.prototype._skip = function (tap) {\n  var len, n;\n  while ((n = tap.readLong())) {\n    if (n < 0) {\n      len = tap.readLong();\n      tap.pos += len;\n    } else {\n      while (n--) {\n        this.itemsType._skip(tap);\n      }\n    }\n  }\n};\n\nArrayType.prototype._write = function (tap, val) {\n  if (!Array.isArray(val)) {\n    throwInvalidError(val, this);\n  }\n\n  var n = val.length;\n  var i;\n  if (n) {\n    tap.writeLong(n);\n    for (i = 0; i < n; i++) {\n      this.itemsType._write(tap, val[i]);\n    }\n  }\n  tap.writeLong(0);\n};\n\nArrayType.prototype._match = function (tap1, tap2) {\n  var n1 = tap1.readLong();\n  var n2 = tap2.readLong();\n  var f;\n  while (n1 && n2) {\n    f = this.itemsType._match(tap1, tap2);\n    if (f) {\n      return f;\n    }\n    if (!--n1) {\n      n1 = readArraySize(tap1);\n    }\n    if (!--n2) {\n      n2 = readArraySize(tap2);\n    }\n  }\n  return utils.compare(n1, n2);\n};\n\nArrayType.prototype._update = function (resolver, type, opts) {\n  if (type.typeName === 'array') {\n    resolver.itemsType = this.itemsType.createResolver(type.itemsType, opts);\n    resolver._read = this._read;\n  }\n};\n\nArrayType.prototype._copy = function (val, opts) {\n  if (!Array.isArray(val)) {\n    throwInvalidError(val, this);\n  }\n  var items = new Array(val.length);\n  var i, l;\n  for (i = 0, l = val.length; i < l; i++) {\n    items[i] = this.itemsType._copy(val[i], opts);\n  }\n  return items;\n};\n\nArrayType.prototype._deref = function (schema, opts) {\n  schema.items = this.itemsType._attrs(opts);\n};\n\nArrayType.prototype.compare = function (val1, val2) {\n  var n1 = val1.length;\n  var n2 = val2.length;\n  var i, l, f;\n  for (i = 0, l = Math.min(n1, n2); i < l; i++) {\n    if ((f = this.itemsType.compare(val1[i], val2[i]))) {\n      return f;\n    }\n  }\n  return utils.compare(n1, n2);\n};\n\nArrayType.prototype.getItemsType = function () { return this.itemsType; };\n\nArrayType.prototype.typeName = 'array';\n\nArrayType.prototype.random = function () {\n  var arr = [];\n  var i, l;\n  for (i = 0, l = RANDOM.nextInt(10); i < l; i++) {\n    arr.push(this.itemsType.random());\n  }\n  return arr;\n};\n\n/**\n * Avro record.\n *\n * Values are represented as instances of a programmatically generated\n * constructor (similar to a \"specific record\"), available via the\n * `getRecordConstructor` method. This \"specific record class\" gives\n * significant speedups over using generics objects.\n *\n * Note that vanilla objects are still accepted as valid as long as their\n * fields match (this makes it much more convenient to do simple things like\n * update nested records).\n *\n * This type is also used for errors (similar, except for the extra `Error`\n * constructor call) and for messages (see comment below).\n */\nfunction RecordType(schema, opts) {\n  // Force creation of the options object in case we need to register this\n  // record's name.\n  opts = opts || {};\n\n  // Save the namespace to restore it as we leave this record's scope.\n  var namespace = opts.namespace;\n  if (schema.namespace !== undefined) {\n    opts.namespace = schema.namespace;\n  } else if (schema.name) {\n    // Fully qualified names' namespaces are used when no explicit namespace\n    // attribute was specified.\n    var match = /^(.*)\\.[^.]+$/.exec(schema.name);\n    if (match) {\n      opts.namespace = match[1];\n    }\n  }\n  Type.call(this, schema, opts);\n\n  if (!Array.isArray(schema.fields)) {\n    throw new Error(f('non-array record fields: %j', schema.fields));\n  }\n  if (utils.hasDuplicates(schema.fields, function (f) { return f.name; })) {\n    throw new Error(f('duplicate field name: %j', schema.fields));\n  }\n  this._fieldsByName = {};\n  this.fields = Object.freeze(schema.fields.map(function (f) {\n    var field = new Field(f, opts);\n    this._fieldsByName[field.name] = field;\n    return field;\n  }, this));\n  this._branchConstructor = this._createBranchConstructor();\n  this._isError = schema.type === 'error';\n  this.recordConstructor = this._createConstructor(opts.errorStackTraces);\n  this._read = this._createReader();\n  this._skip = this._createSkipper();\n  this._write = this._createWriter();\n  this._check = this._createChecker();\n\n  opts.namespace = namespace;\n  Object.freeze(this);\n}\nutil.inherits(RecordType, Type);\n\nRecordType.prototype._getConstructorName = function () {\n  return this.name ?\n    unqualify(this.name) :\n    this._isError ? 'Error$' : 'Record$';\n};\n\nRecordType.prototype._createConstructor = function (errorStackTraces) {\n  // jshint -W054\n  var outerArgs = [];\n  var innerArgs = [];\n  var ds = []; // Defaults.\n  var innerBody = '';\n  var i, l, field, name, defaultValue, hasDefault, stackField;\n  for (i = 0, l = this.fields.length; i < l; i++) {\n    field = this.fields[i];\n    defaultValue = field.defaultValue;\n    hasDefault = defaultValue() !== undefined;\n    name = field.name;\n    if (\n      errorStackTraces && this._isError && name === 'stack' &&\n      Type.isType(field.type, 'string') && !hasDefault\n    ) {\n      // We keep track of whether we've encountered a valid stack field (in\n      // particular, without a default) to populate a stack trace below.\n      stackField = field;\n    }\n    innerArgs.push('v' + i);\n    innerBody += '  ';\n    if (!hasDefault) {\n      innerBody += 'this.' + name + ' = v' + i + ';\\n';\n    } else {\n      innerBody += 'if (v' + i + ' === undefined) { ';\n      innerBody += 'this.' + name + ' = d' + ds.length + '(); ';\n      innerBody += '} else { this.' + name + ' = v' + i + '; }\\n';\n      outerArgs.push('d' + ds.length);\n      ds.push(defaultValue);\n    }\n  }\n  if (stackField) {\n    // We should populate a stack trace.\n    innerBody += '  if (this.stack === undefined) { ';\n    /* istanbul ignore else */\n    if (typeof Error.captureStackTrace == 'function') {\n      // v8 runtimes, the easy case.\n      innerBody += 'Error.captureStackTrace(this, this.constructor);';\n    } else {\n      // A few other runtimes (e.g. SpiderMonkey), might not work everywhere.\n      innerBody += 'this.stack = Error().stack;';\n    }\n    innerBody += ' }\\n';\n  }\n  var outerBody = 'return function ' + this._getConstructorName() + '(';\n  outerBody += innerArgs.join() + ') {\\n' + innerBody + '};';\n  var Record = new Function(outerArgs.join(), outerBody).apply(undefined, ds);\n\n  var self = this;\n  Record.getType = function () { return self; };\n  Record.type = self;\n  if (this._isError) {\n    util.inherits(Record, Error);\n    Record.prototype.name = this._getConstructorName();\n  }\n  Record.prototype.clone = function (o) { return self.clone(this, o); };\n  Record.prototype.compare = function (v) { return self.compare(this, v); };\n  Record.prototype.isValid = function (o) { return self.isValid(this, o); };\n  Record.prototype.toBuffer = function () { return self.toBuffer(this); };\n  Record.prototype.toString = function () { return self.toString(this); };\n  Record.prototype.wrap = function () { return self.wrap(this); };\n  Record.prototype.wrapped = Record.prototype.wrap; // Deprecated.\n  return Record;\n};\n\nRecordType.prototype._createChecker = function () {\n  // jshint -W054\n  var names = [];\n  var values = [];\n  var name = this._getConstructorName();\n  var body = 'return function check' + name + '(v, f, h, p) {\\n';\n  body += '  if (\\n';\n  body += '    v === null ||\\n';\n  body += '    typeof v != \\'object\\' ||\\n';\n  body += '    (f && !this._checkFields(v))\\n';\n  body += '  ) {\\n';\n  body += '    if (h) { h(v, this); }\\n';\n  body += '    return false;\\n';\n  body += '  }\\n';\n  if (!this.fields.length) {\n    // Special case, empty record. We handle this directly.\n    body += '  return true;\\n';\n  } else {\n    for (i = 0, l = this.fields.length; i < l; i++) {\n      field = this.fields[i];\n      names.push('t' + i);\n      values.push(field.type);\n      if (field.defaultValue() !== undefined) {\n        body += '  var v' + i + ' = v.' + field.name + ';\\n';\n      }\n    }\n    body += '  if (h) {\\n';\n    body += '    var b = 1;\\n';\n    body += '    var j = p.length;\\n';\n    body += '    p.push(\\'\\');\\n';\n    var i, l, field;\n    for (i = 0, l = this.fields.length; i < l; i++) {\n      field = this.fields[i];\n      body += '    p[j] = \\'' + field.name + '\\';\\n';\n      body += '    b &= ';\n      if (field.defaultValue() === undefined) {\n        body += 't' + i + '._check(v.' + field.name + ', f, h, p);\\n';\n      } else {\n        body += 'v' + i + ' === undefined || ';\n        body += 't' + i + '._check(v' + i + ', f, h, p);\\n';\n      }\n    }\n    body += '    p.pop();\\n';\n    body += '    return !!b;\\n';\n    body += '  } else {\\n    return (\\n      ';\n    body += this.fields.map(function (field, i) {\n      return field.defaultValue() === undefined ?\n        't' + i + '._check(v.' + field.name + ', f)' :\n        '(v' + i + ' === undefined || t' + i + '._check(v' + i + ', f))';\n    }).join(' &&\\n      ');\n    body += '\\n    );\\n  }\\n';\n  }\n  body += '};';\n  return new Function(names.join(), body).apply(undefined, values);\n};\n\nRecordType.prototype._createReader = function () {\n  // jshint -W054\n  var names = [];\n  var values = [this.recordConstructor];\n  var i, l;\n  for (i = 0, l = this.fields.length; i < l; i++) {\n    names.push('t' + i);\n    values.push(this.fields[i].type);\n  }\n  var name = this._getConstructorName();\n  var body = 'return function read' + name + '(t) {\\n';\n  body += '  return new ' + name + '(\\n    ';\n  body += names.map(function (s) { return s + '._read(t)'; }).join(',\\n    ');\n  body += '\\n  );\\n};';\n  names.unshift(name);\n  // We can do this since the JS spec guarantees that function arguments are\n  // evaluated from left to right.\n  return new Function(names.join(), body).apply(undefined, values);\n};\n\nRecordType.prototype._createSkipper = function () {\n  // jshint -W054\n  var args = [];\n  var body = 'return function skip' + this._getConstructorName() + '(t) {\\n';\n  var values = [];\n  var i, l;\n  for (i = 0, l = this.fields.length; i < l; i++) {\n    args.push('t' + i);\n    values.push(this.fields[i].type);\n    body += '  t' + i + '._skip(t);\\n';\n  }\n  body += '}';\n  return new Function(args.join(), body).apply(undefined, values);\n};\n\nRecordType.prototype._createWriter = function () {\n  // jshint -W054\n  // We still do default handling here, in case a normal JS object is passed.\n  var args = [];\n  var name = this._getConstructorName();\n  var body = 'return function write' + name + '(t, v) {\\n';\n  var values = [];\n  var i, l, field, value;\n  for (i = 0, l = this.fields.length; i < l; i++) {\n    field = this.fields[i];\n    args.push('t' + i);\n    values.push(field.type);\n    body += '  ';\n    if (field.defaultValue() === undefined) {\n      body += 't' + i + '._write(t, v.' + field.name + ');\\n';\n    } else {\n      value = field.type.toBuffer(field.defaultValue()).toString('binary');\n      // Convert the default value to a binary string ahead of time. We aren't\n      // converting it to a buffer to avoid retaining too much memory. If we\n      // had our own buffer pool, this could be an idea in the future.\n      args.push('d' + i);\n      values.push(value);\n      body += 'var v' + i + ' = v.' + field.name + ';\\n';\n      body += 'if (v' + i + ' === undefined) {\\n';\n      body += '    t.writeBinary(d' + i + ', ' + value.length + ');\\n';\n      body += '  } else {\\n    t' + i + '._write(t, v' + i + ');\\n  }\\n';\n    }\n  }\n  body += '}';\n  return new Function(args.join(), body).apply(undefined, values);\n};\n\nRecordType.prototype._update = function (resolver, type, opts) {\n  // jshint -W054\n  if (type.name && !~getAliases(this).indexOf(type.name)) {\n    throw new Error(f('no alias found for %s', type.name));\n  }\n\n  var rFields = this.fields;\n  var wFields = type.fields;\n  var wFieldsMap = utils.toMap(wFields, function (f) { return f.name; });\n\n  var innerArgs = []; // Arguments for reader constructor.\n  var resolvers = {}; // Resolvers keyed by writer field name.\n  var i, j, field, name, names, matches, fieldResolver;\n  for (i = 0; i < rFields.length; i++) {\n    field = rFields[i];\n    names = getAliases(field);\n    matches = [];\n    for (j = 0; j < names.length; j++) {\n      name = names[j];\n      if (wFieldsMap[name]) {\n        matches.push(name);\n      }\n    }\n    if (matches.length > 1) {\n      throw new Error(\n        f('ambiguous aliasing for %s.%s (%s)', type.name, field.name, matches)\n      );\n    }\n    if (!matches.length) {\n      if (field.defaultValue() === undefined) {\n        throw new Error(\n          f('no matching field for default-less %s.%s', type.name, field.name)\n        );\n      }\n      innerArgs.push('undefined');\n    } else {\n      name = matches[0];\n      fieldResolver = {\n        resolver: field.type.createResolver(wFieldsMap[name].type, opts),\n        name: '_' + field.name, // Reader field name.\n      };\n      if (!resolvers[name]) {\n        resolvers[name] = [fieldResolver];\n      } else {\n        resolvers[name].push(fieldResolver);\n      }\n      innerArgs.push(fieldResolver.name);\n    }\n  }\n\n  // See if we can add a bypass for unused fields at the end of the record.\n  var lazyIndex = -1;\n  i = wFields.length;\n  while (i && resolvers[wFields[--i].name] === undefined) {\n    lazyIndex = i;\n  }\n\n  var uname = this._getConstructorName();\n  var args = [uname];\n  var values = [this.recordConstructor];\n  var body = '  return function read' + uname + '(t, b) {\\n';\n  for (i = 0; i < wFields.length; i++) {\n    if (i === lazyIndex) {\n      body += '  if (!b) {\\n';\n    }\n    field = type.fields[i];\n    name = field.name;\n    if (resolvers[name] === undefined) {\n      body += (~lazyIndex && i >= lazyIndex) ? '    ' : '  ';\n      args.push('r' + i);\n      values.push(field.type);\n      body += 'r' + i + '._skip(t);\\n';\n    } else {\n      j = resolvers[name].length;\n      while (j--) {\n        body += (~lazyIndex && i >= lazyIndex) ? '    ' : '  ';\n        args.push('r' + i + 'f' + j);\n        fieldResolver = resolvers[name][j];\n        values.push(fieldResolver.resolver);\n        body += 'var ' + fieldResolver.name + ' = ';\n        body += 'r' + i + 'f' + j + '._' + (j ? 'peek' : 'read') + '(t);\\n';\n      }\n    }\n  }\n  if (~lazyIndex) {\n    body += '  }\\n';\n  }\n  body += '  return new ' + uname + '(' + innerArgs.join() + ');\\n};';\n\n  resolver._read = new Function(args.join(), body).apply(undefined, values);\n};\n\nRecordType.prototype._match = function (tap1, tap2) {\n  var fields = this.fields;\n  var i, l, field, order, type;\n  for (i = 0, l = fields.length; i < l; i++) {\n    field = fields[i];\n    order = field._order;\n    type = field.type;\n    if (order) {\n      order *= type._match(tap1, tap2);\n      if (order) {\n        return order;\n      }\n    } else {\n      type._skip(tap1);\n      type._skip(tap2);\n    }\n  }\n  return 0;\n};\n\nRecordType.prototype._checkFields = function (obj) {\n  var keys = Object.keys(obj);\n  var i, l;\n  for (i = 0, l = keys.length; i < l; i++) {\n    if (!this._fieldsByName[keys[i]]) {\n      return false;\n    }\n  }\n  return true;\n};\n\nRecordType.prototype._copy = function (val, opts) {\n  // jshint -W058\n  var hook = opts && opts.fieldHook;\n  var values = [undefined];\n  var i, l, field, value;\n  for (i = 0, l = this.fields.length; i < l; i++) {\n    field = this.fields[i];\n    value = val[field.name];\n    if (value === undefined && field.hasOwnProperty('defaultValue')) {\n      value = field.defaultValue();\n    }\n    if ((opts && !opts.skip) || value !== undefined) {\n      value = field.type._copy(value, opts);\n    }\n    if (hook) {\n      value = hook(field, value, this);\n    }\n    values.push(value);\n  }\n  var Record = this.recordConstructor;\n  return new (Record.bind.apply(Record, values))();\n};\n\nRecordType.prototype._deref = function (schema, opts) {\n  schema.fields = this.fields.map(function (field) {\n    var fieldType = field.type;\n    var fieldSchema = {\n      name: field.name,\n      type: fieldType._attrs(opts)\n    };\n    if (opts.exportAttrs) {\n      var val = field.defaultValue();\n      if (val !== undefined) {\n        // We must both unwrap all unions and coerce buffers to strings.\n        fieldSchema['default'] = fieldType._copy(val, {coerce: 3, wrap: 3});\n      }\n      var fieldOrder = field.order;\n      if (fieldOrder !== 'ascending') {\n        fieldSchema.order = fieldOrder;\n      }\n      var fieldAliases = field.aliases;\n      if (fieldAliases.length) {\n        fieldSchema.aliases = fieldAliases;\n      }\n      var fieldDoc = field.doc;\n      if (fieldDoc !== undefined) {\n        fieldSchema.doc = fieldDoc;\n      }\n    }\n    return fieldSchema;\n  });\n};\n\nRecordType.prototype.compare = function (val1, val2) {\n  var fields = this.fields;\n  var i, l, field, name, order, type;\n  for (i = 0, l = fields.length; i < l; i++) {\n    field = fields[i];\n    name = field.name;\n    order = field._order;\n    type = field.type;\n    if (order) {\n      order *= type.compare(val1[name], val2[name]);\n      if (order) {\n        return order;\n      }\n    }\n  }\n  return 0;\n};\n\nRecordType.prototype.random = function () {\n  // jshint -W058\n  var fields = this.fields.map(function (f) { return f.type.random(); });\n  fields.unshift(undefined);\n  var Record = this.recordConstructor;\n  return new (Record.bind.apply(Record, fields))();\n};\n\nRecordType.prototype.field = function (name) {\n  return this._fieldsByName[name];\n};\n\nRecordType.prototype.getField = RecordType.prototype.field;\n\nRecordType.prototype.getFields = function () { return this.fields; };\n\nRecordType.prototype.getRecordConstructor = function () {\n  return this.recordConstructor;\n};\n\nObject.defineProperty(RecordType.prototype, 'typeName', {\n  enumerable: true,\n  get: function () { return this._isError ? 'error' : 'record'; }\n});\n\n/** Derived type abstract class. */\nfunction LogicalType(schema, opts) {\n  this._logicalTypeName = schema.logicalType;\n  Type.call(this);\n  LOGICAL_TYPE = this;\n  try {\n    this._underlyingType = Type.forSchema(schema, opts);\n  } finally {\n    LOGICAL_TYPE = null;\n    // Remove the underlying type now that we're done instantiating. Note that\n    // in some (rare) cases, it might not have been inserted; for example, if\n    // this constructor was manually called with an already instantiated type.\n    var l = UNDERLYING_TYPES.length;\n    if (l && UNDERLYING_TYPES[l - 1][0] === this) {\n      UNDERLYING_TYPES.pop();\n    }\n  }\n  // We create a separate branch constructor for logical types to keep them\n  // monomorphic.\n  if (Type.isType(this.underlyingType, 'union')) {\n    this._branchConstructor = this.underlyingType._branchConstructor;\n  } else {\n    this._branchConstructor = this.underlyingType._createBranchConstructor();\n  }\n  // We don't freeze derived types to allow arbitrary properties. Implementors\n  // can still do so in the subclass' constructor at their convenience.\n}\nutil.inherits(LogicalType, Type);\n\nObject.defineProperty(LogicalType.prototype, 'typeName', {\n  enumerable: true,\n  get: function () { return 'logical:' + this._logicalTypeName; }\n});\n\nObject.defineProperty(LogicalType.prototype, 'underlyingType', {\n  enumerable: true,\n  get: function () {\n    if (this._underlyingType) {\n      return this._underlyingType;\n    }\n    // If the field wasn't present, it means the logical type isn't complete\n    // yet: we're waiting on its underlying type to be fully instantiated. In\n    // this case, it will be present in the `UNDERLYING_TYPES` array.\n    var i, l, arr;\n    for (i = 0, l = UNDERLYING_TYPES.length; i < l; i++) {\n      arr = UNDERLYING_TYPES[i];\n      if (arr[0] === this) {\n        return arr[1];\n      }\n    }\n  }\n});\n\nLogicalType.prototype.getUnderlyingType = function () {\n  return this.underlyingType;\n};\n\nLogicalType.prototype._read = function (tap) {\n  return this._fromValue(this.underlyingType._read(tap));\n};\n\nLogicalType.prototype._write = function (tap, any) {\n  this.underlyingType._write(tap, this._toValue(any));\n};\n\nLogicalType.prototype._check = function (any, flags, hook, path) {\n  try {\n    var val = this._toValue(any);\n  } catch (err) {\n    // Handled below.\n  }\n  if (val === undefined) {\n    if (hook) {\n      hook(any, this);\n    }\n    return false;\n  }\n  return this.underlyingType._check(val, flags, hook, path);\n};\n\nLogicalType.prototype._copy = function (any, opts) {\n  var type = this.underlyingType;\n  switch (opts && opts.coerce) {\n    case 3: // To string.\n      return type._copy(this._toValue(any), opts);\n    case 2: // From string.\n      return this._fromValue(type._copy(any, opts));\n    default: // Normal copy.\n      return this._fromValue(type._copy(this._toValue(any), opts));\n  }\n};\n\nLogicalType.prototype._update = function (resolver, type, opts) {\n  var _fromValue = this._resolve(type, opts);\n  if (_fromValue) {\n    resolver._read = function (tap) { return _fromValue(type._read(tap)); };\n  }\n};\n\nLogicalType.prototype.compare = function (obj1, obj2) {\n  var val1 = this._toValue(obj1);\n  var val2 = this._toValue(obj2);\n  return this.underlyingType.compare(val1, val2);\n};\n\nLogicalType.prototype.random = function () {\n  return this._fromValue(this.underlyingType.random());\n};\n\nLogicalType.prototype._deref = function (schema, opts) {\n  var type = this.underlyingType;\n  var isVisited = type.name !== undefined && opts.derefed[type.name];\n  schema = type._attrs(opts);\n  if (!isVisited && opts.exportAttrs) {\n    if (typeof schema == 'string') {\n      schema = {type: schema};\n    }\n    schema.logicalType = this._logicalTypeName;\n    this._export(schema);\n  }\n  return schema;\n};\n\nLogicalType.prototype._skip = function (tap) {\n  this.underlyingType._skip(tap);\n};\n\n// Unlike the other methods below, `_export` has a reasonable default which we\n// can provide (not exporting anything).\nLogicalType.prototype._export = function (/* schema */) {};\n\n// Methods to be implemented.\nLogicalType.prototype._fromValue = utils.abstractFunction;\nLogicalType.prototype._toValue = utils.abstractFunction;\nLogicalType.prototype._resolve = utils.abstractFunction;\n\n\n// General helpers.\n\n/**\n * Customizable long.\n *\n * This allows support of arbitrarily large long (e.g. larger than\n * `Number.MAX_SAFE_INTEGER`). See `LongType.__with` method above. Note that we\n * can't use a logical type because we need a \"lower-level\" hook here: passing\n * through through the standard long would cause a loss of precision.\n */\nfunction AbstractLongType(noUnpack) {\n  this._concreteTypeName = 'long';\n  PrimitiveType.call(this, true);\n  // Note that this type \"inherits\" `LongType` (i.e. gain its prototype\n  // methods) but only \"subclasses\" `PrimitiveType` to avoid being prematurely\n  // frozen.\n  this._noUnpack = !!noUnpack;\n}\nutil.inherits(AbstractLongType, LongType);\n\nAbstractLongType.prototype.typeName = 'abstract:long';\n\nAbstractLongType.prototype._check = function (val, flags, hook) {\n  var b = this._isValid(val);\n  if (!b && hook) {\n    hook(val, this);\n  }\n  return b;\n};\n\nAbstractLongType.prototype._read = function (tap) {\n  var buf, pos;\n  if (this._noUnpack) {\n    pos = tap.pos;\n    tap.skipLong();\n    buf = tap.buf.slice(pos, tap.pos);\n  } else {\n    buf = tap.unpackLongBytes(tap);\n  }\n  if (tap.isValid()) {\n    return this._fromBuffer(buf);\n  }\n};\n\nAbstractLongType.prototype._write = function (tap, val) {\n  if (!this._isValid(val)) {\n    throwInvalidError(val, this);\n  }\n  var buf = this._toBuffer(val);\n  if (this._noUnpack) {\n    tap.writeFixed(buf);\n  } else {\n    tap.packLongBytes(buf);\n  }\n};\n\nAbstractLongType.prototype._copy = function (val, opts) {\n  switch (opts && opts.coerce) {\n    case 3: // To string.\n      return this._toJSON(val);\n    case 2: // From string.\n      return this._fromJSON(val);\n    default: // Normal copy.\n      // Slow but guarantees most consistent results. Faster alternatives would\n      // require assumptions on the long class used (e.g. immutability).\n      return this._fromJSON(this._toJSON(val));\n  }\n};\n\nAbstractLongType.prototype._deref = function () { return 'long'; }\n\nAbstractLongType.prototype._update = function (resolver, type) {\n  var self = this;\n  switch (type.typeName) {\n    case 'int':\n      resolver._read = function (tap) {\n        return self._fromJSON(type._read(tap));\n      };\n      break;\n    case 'long':\n      resolver._read = function (tap) { return self._read(tap); };\n  }\n};\n\nAbstractLongType.prototype.random = function () {\n  return this._fromJSON(LongType.prototype.random());\n};\n\n// Methods to be implemented by the user.\nAbstractLongType.prototype._fromBuffer = utils.abstractFunction;\nAbstractLongType.prototype._toBuffer = utils.abstractFunction;\nAbstractLongType.prototype._fromJSON = utils.abstractFunction;\nAbstractLongType.prototype._toJSON = utils.abstractFunction;\nAbstractLongType.prototype._isValid = utils.abstractFunction;\nAbstractLongType.prototype.compare = utils.abstractFunction;\n\n/** A record field. */\nfunction Field(schema, opts) {\n  var name = schema.name;\n  if (typeof name != 'string' || !isValidName(name)) {\n    throw new Error(f('invalid field name: %s', name));\n  }\n\n  this.name = name;\n  this.type = Type.forSchema(schema.type, opts);\n  this.aliases = schema.aliases || [];\n  this.doc = schema.doc !== undefined ? '' + schema.doc : undefined;\n\n  this._order = (function (order) {\n    switch (order) {\n      case 'ascending':\n        return 1;\n      case 'descending':\n        return -1;\n      case 'ignore':\n        return 0;\n      default:\n        throw new Error(f('invalid order: %j', order));\n    }\n  })(schema.order === undefined ? 'ascending' : schema.order);\n\n  var value = schema['default'];\n  if (value !== undefined) {\n    // We need to convert defaults back to a valid format (unions are\n    // disallowed in default definitions, only the first type of each union is\n    // allowed instead).\n    // http://apache-avro.679487.n3.nabble.com/field-union-default-in-Java-td1175327.html\n    var type = this.type;\n    var val = type._copy(value, {coerce: 2, wrap: 2});\n    // The clone call above will throw an error if the default is invalid.\n    if (isPrimitive(type.typeName) && type.typeName !== 'bytes') {\n      // These are immutable.\n      this.defaultValue = function () { return val; };\n    } else {\n      this.defaultValue = function () { return type._copy(val); };\n    }\n  }\n\n  Object.freeze(this);\n}\n\nField.prototype.defaultValue = function () {}; // Undefined default.\n\nObject.defineProperty(Field.prototype, 'order', {\n  enumerable: true,\n  get: function () {\n    return ['descending', 'ignore', 'ascending'][this._order + 1];\n  }\n});\n\nField.prototype.getAliases = function () { return this.aliases; };\n\nField.prototype.getDefault = Field.prototype.defaultValue;\n\nField.prototype.getName = function () { return this.name; };\n\nField.prototype.getOrder = function () { return this.order; };\n\nField.prototype.getType = function () { return this.type; };\n\n/**\n * Resolver to read a writer's schema as a new schema.\n *\n * @param readerType {Type} The type to convert to.\n */\nfunction Resolver(readerType) {\n  // Add all fields here so that all resolvers share the same hidden class.\n  this._readerType = readerType;\n  this._read = null;\n  this.itemsType = null;\n  this.size = 0;\n  this.symbols = null;\n  this.valuesType = null;\n}\n\nResolver.prototype._peek = Type.prototype._peek;\n\nResolver.prototype.inspect = function () { return '<Resolver>'; };\n\n/** Mutable hash container. */\nfunction Hash() {\n  this.str = undefined;\n}\n\n/**\n * Read a value from a tap.\n *\n * @param type {Type} The type to decode.\n * @param tap {Tap} The tap to read from. No checks are performed here.\n * @param resolver {Resolver} Optional resolver. It must match the input type.\n * @param lazy {Boolean} Skip trailing fields when using a resolver.\n */\nfunction readValue(type, tap, resolver, lazy) {\n  if (resolver) {\n    if (resolver._readerType !== type) {\n      throw new Error('invalid resolver');\n    }\n    return resolver._read(tap, lazy);\n  } else {\n    return type._read(tap);\n  }\n}\n\n/**\n * Remove namespace from a name.\n *\n * @param name {String} Full or short name.\n */\nfunction unqualify(name) {\n  var parts = name.split('.');\n  return parts[parts.length - 1];\n}\n\n/**\n * Verify and return fully qualified name.\n *\n * @param name {String} Full or short name. It can be prefixed with a dot to\n * force global namespace.\n * @param namespace {String} Optional namespace.\n */\nfunction qualify(name, namespace) {\n  if (~name.indexOf('.')) {\n    name = name.replace(/^\\./, ''); // Allow absolute referencing.\n  } else if (namespace) {\n    name = namespace + '.' + name;\n  }\n  name.split('.').forEach(function (part) {\n    if (!isValidName(part)) {\n      throw new Error(f('invalid name: %j', name));\n    }\n  });\n  var tail = unqualify(name);\n  // Primitives are always in the global namespace.\n  return isPrimitive(tail) ? tail : name;\n}\n\n/**\n * Get all aliases for a type (including its name).\n *\n * @param obj {Type|Object} Typically a type or a field. Its aliases property\n * must exist and be an array.\n */\nfunction getAliases(obj) {\n  var names = {};\n  if (obj.name) {\n    names[obj.name] = true;\n  }\n  var aliases = obj.aliases;\n  var i, l;\n  for (i = 0, l = aliases.length; i < l; i++) {\n    names[aliases[i]] = true;\n  }\n  return Object.keys(names);\n}\n\n/**\n * Check whether a type's name is a primitive.\n *\n * @param name {String} Type name (e.g. `'string'`, `'array'`).\n */\nfunction isPrimitive(typeName) {\n  // Since we use this module's own `TYPES` object, we can use `instanceof`.\n  var type = TYPES[typeName];\n  return type && type.prototype instanceof PrimitiveType;\n}\n\n/**\n * Return a type's class name from its Avro type name.\n *\n * We can't simply use `constructor.name` since it isn't supported in all\n * browsers.\n *\n * @param typeName {String} Type name.\n */\nfunction getClassName(typeName) {\n  if (typeName === 'error') {\n    typeName = 'record';\n  } else {\n    var match = /^([^:]+):(.*)$/.exec(typeName);\n    if (match) {\n      if (match[1] === 'union') {\n        typeName = match[2] + 'Union';\n      } else {\n        // Logical type.\n        typeName = match[1];\n      }\n    }\n  }\n  return utils.capitalize(typeName) + 'Type';\n}\n\n/**\n * Get the number of elements in an array block.\n *\n * @param tap {Tap} A tap positioned at the beginning of an array block.\n */\nfunction readArraySize(tap) {\n  var n = tap.readLong();\n  if (n < 0) {\n    n = -n;\n    tap.skipLong(); // Skip size.\n  }\n  return n;\n}\n\n/**\n * Check whether a long can be represented without precision loss.\n *\n * @param n {Number} The number.\n *\n * Two things to note:\n *\n * + We are not using the `Number` constants for compatibility with older\n *   browsers.\n * + We must remove one from each bound because of rounding errors.\n */\nfunction isSafeLong(n) {\n  return n >= -9007199254740990 && n <= 9007199254740990;\n}\n\n/**\n * Check whether an object is the JSON representation of a buffer.\n */\nfunction isJsonBuffer(obj) {\n  return obj && obj.type === 'Buffer' && Array.isArray(obj.data);\n}\n\n/**\n * Check whether a string is a valid Avro identifier.\n */\nfunction isValidName(str) { return NAME_PATTERN.test(str); }\n\n/**\n * Throw a somewhat helpful error on invalid object.\n *\n * @param path {Array} Passed from hook, but unused (because empty where this\n * function is used, since we aren't keeping track of it for effiency).\n * @param val {...} The object to reject.\n * @param type {Type} The type to check against.\n *\n * This method is mostly used from `_write` to signal an invalid object for a\n * given type. Note that this provides less information than calling `isValid`\n * with a hook since the path is not propagated (for efficiency reasons).\n */\nfunction throwInvalidError(val, type) {\n  throw new Error(f('invalid %s: %j', type, val));\n}\n\n/**\n * Get a type's bucket when included inside an unwrapped union.\n *\n * @param type {Type} Any type.\n */\nfunction getTypeBucket(type) {\n  var typeName = type.typeName;\n  switch (typeName) {\n    case 'double':\n    case 'float':\n    case 'int':\n    case 'long':\n      return 'number';\n    case 'bytes':\n    case 'fixed':\n      return 'buffer';\n    case 'enum':\n      return 'string';\n    case 'map':\n    case 'error':\n    case 'record':\n      return 'object';\n    default:\n      return typeName;\n  }\n}\n\n/**\n * Infer a value's bucket (see unwrapped unions for more details).\n *\n * @param val {...} Any value.\n */\nfunction getValueBucket(val) {\n  if (val === null) {\n    return 'null';\n  }\n  var bucket = typeof val;\n  if (bucket === 'object') {\n    // Could be bytes, fixed, array, map, or record.\n    if (Array.isArray(val)) {\n      return 'array';\n    } else if (Buffer.isBuffer(val)) {\n      return 'buffer';\n    }\n  }\n  return bucket;\n}\n\n/**\n * Check whether a collection of types leads to an ambiguous union.\n *\n * @param types {Array} Array of types.\n */\nfunction isAmbiguous(types) {\n  var buckets = {};\n  var i, l, bucket, type;\n  for (i = 0, l = types.length; i < l; i++) {\n    type = types[i];\n    if (!Type.isType(type, 'logical')) {\n      bucket = getTypeBucket(type);\n      if (buckets[bucket]) {\n        return true;\n      }\n      buckets[bucket] = true;\n    }\n  }\n  return false;\n}\n\n/**\n * Combine number types.\n *\n * Note that never have to create a new type here, we are guaranteed to be able\n * to reuse one of the input types as super-type.\n */\nfunction combineNumbers(types) {\n  var typeNames = ['int', 'long', 'float', 'double'];\n  var superIndex = -1;\n  var superType = null;\n  var i, l, type, index;\n  for (i = 0, l = types.length; i < l; i++) {\n    type = types[i];\n    index = typeNames.indexOf(type.typeName);\n    if (index > superIndex) {\n      superIndex = index;\n      superType = type;\n    }\n  }\n  return superType;\n}\n\n/**\n * Combine enums and strings.\n *\n * The order of the returned symbols is undefined and the returned enum is\n *\n */\nfunction combineStrings(types, opts) {\n  var symbols = {};\n  var i, l, type, typeSymbols;\n  for (i = 0, l = types.length; i < l; i++) {\n    type = types[i];\n    if (type.typeName === 'string') {\n      // If at least one of the types is a string, it will be the supertype.\n      return type;\n    }\n    typeSymbols = type.symbols;\n    var j, m;\n    for (j = 0, m = typeSymbols.length; j < m; j++) {\n      symbols[typeSymbols[j]] = true;\n    }\n  }\n  return Type.forSchema({type: 'enum', symbols: Object.keys(symbols)}, opts);\n}\n\n/**\n * Combine bytes and fixed.\n *\n * This function is optimized to avoid creating new types when possible: in\n * case of a size mismatch between fixed types, it will continue looking\n * through the array to find an existing bytes type (rather than exit early by\n * creating one eagerly).\n */\nfunction combineBuffers(types, opts) {\n  var size = -1;\n  var i, l, type;\n  for (i = 0, l = types.length; i < l; i++) {\n    type = types[i];\n    if (type.typeName === 'bytes') {\n      return type;\n    }\n    if (size === -1) {\n      size = type.size;\n    } else if (type.size !== size) {\n      // Don't create a bytes type right away, we might be able to reuse one\n      // later on in the types array. Just mark this for now.\n      size = -2;\n    }\n  }\n  return size < 0 ? Type.forSchema('bytes', opts) : types[0];\n}\n\n/**\n * Combine maps and records.\n *\n * Field defaults are kept when possible (i.e. when no coercion to a map\n * happens), with later definitions overriding previous ones.\n */\nfunction combineObjects(types, opts) {\n  var allTypes = []; // Field and value types.\n  var fieldTypes = {}; // Record field types grouped by field name.\n  var fieldDefaults = {};\n  var isValidRecord = true;\n\n  // Check whether the final type will be a map or a record.\n  var i, l, type, fields;\n  for (i = 0, l = types.length; i < l; i++) {\n    type = types[i];\n    if (type.typeName === 'map') {\n      isValidRecord = false;\n      allTypes.push(type.valuesType);\n    } else {\n      fields = type.fields;\n      var j, m, field, fieldDefault, fieldName, fieldType;\n      for (j = 0, m = fields.length; j < m; j++) {\n        field = fields[j];\n        fieldName = field.name;\n        fieldType = field.type;\n        allTypes.push(fieldType);\n        if (isValidRecord) {\n          if (!fieldTypes[fieldName]) {\n            fieldTypes[fieldName] = [];\n          }\n          fieldTypes[fieldName].push(fieldType);\n          fieldDefault = field.defaultValue();\n          if (fieldDefault !== undefined) {\n            // Later defaults will override any previous ones.\n            fieldDefaults[fieldName] = fieldDefault;\n          }\n        }\n      }\n    }\n  }\n\n  if (isValidRecord) {\n    // Check that no fields are missing and that we have the approriate\n    // defaults for those which are.\n    var fieldNames = Object.keys(fieldTypes);\n    for (i = 0, l = fieldNames.length; i < l; i++) {\n      fieldName = fieldNames[i];\n      if (\n        fieldTypes[fieldName].length < types.length &&\n        fieldDefaults[fieldName] === undefined\n      ) {\n        // At least one of the records is missing a field with no default.\n        if (opts && opts.strictDefaults) {\n          isValidRecord = false;\n        } else {\n          fieldTypes[fieldName].unshift(Type.forSchema('null', opts));\n          fieldDefaults[fieldName] = null;\n        }\n      }\n    }\n  }\n\n  var schema;\n  if (isValidRecord) {\n    schema = {\n      type: 'record',\n      fields: fieldNames.map(function (s) {\n        var fieldType = Type.forTypes(fieldTypes[s], opts);\n        var fieldDefault = fieldDefaults[s];\n        if (\n          fieldDefault !== undefined &&\n          ~fieldType.typeName.indexOf('union')\n        ) {\n          // Ensure that the default's corresponding type is first.\n          var unionTypes = fieldType.types.slice();\n          var i, l;\n          for (i = 0, l = unionTypes.length; i < l; i++) {\n            if (unionTypes[i].isValid(fieldDefault)) {\n              break;\n            }\n          }\n          if (i > 0) {\n            var unionType = unionTypes[0];\n            unionTypes[0] = unionTypes[i];\n            unionTypes[i] = unionType;\n            fieldType = Type.forSchema(unionTypes, opts);\n          }\n        }\n        return {\n          name: s,\n          type: fieldType,\n          'default': fieldDefaults[s]\n        };\n      })\n    };\n  } else {\n    schema = {\n      type: 'map',\n      values: Type.forTypes(allTypes, opts)\n    };\n  }\n  return Type.forSchema(schema, opts);\n}\n\nmodule.exports = {\n  Type: Type,\n  getTypeBucket: getTypeBucket,\n  getValueBucket: getValueBucket,\n  isPrimitive: isPrimitive,\n  isValidName: isValidName,\n  qualify: qualify,\n  types: (function () {\n    var types = {\n      LogicalType: LogicalType,\n      UnwrappedUnionType: UnwrappedUnionType,\n      WrappedUnionType: WrappedUnionType\n    };\n    var typeNames = Object.keys(TYPES);\n    var i, l, typeName;\n    for (i = 0, l = typeNames.length; i < l; i++) {\n      typeName = typeNames[i];\n      types[getClassName(typeName)] = TYPES[typeName];\n    }\n    return types;\n  })()\n}","/*\n * The MIT License (MIT)\n * Copyright (c) 2017 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\nimport Long from \"long\"\nimport { Buffer } from \"buffer\"\nimport avro from \"./avro-types/avro-types\"\n// import a_ from './avro-types'\n// const avro:any = a_\n\nexport const Type = {\n  forSchema(schema: any) {\n    return avro.Type.forSchema(schema, { registry: { long: longType } })\n  }\n}\n\nconst longType = avro.types.LongType.__with({\n  fromBuffer: (buf: any) => {\n    return new Long(buf.readInt32LE(0), buf.readInt32LE(4))\n    //return Long.fromBits(buf.readInt32LE(0), buf.readInt32LE(4))\n  },\n  toBuffer: (n: any) => {\n    //const buf: any = Buffer.alloc(8)\n    const buf: any = new Buffer(8)\n    buf.writeInt32LE(n.getLowBits(), 0)\n    buf.writeInt32LE(n.getHighBits(), 4)\n    return buf\n  },\n  fromJSON: Long.fromValue,\n  toJSON: (n: any) => {\n    return +n\n  },\n  isValid: Long.isLong,\n  compare: (n1: any, n2: any) => {\n    return n1.compare(n2)\n  }\n})\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2017 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n\nimport { Type } from \"./avro\"\nimport { Buffer } from \"buffer\"\n\nexport interface RpcError {\n  exceptionClass: string\n  message: string\n}\nexport const RpcErrorType = Type.forSchema({\n  type: \"record\",\n  fields: [{ name: \"exceptionClass\", type: \"string\" }, { name: \"message\", type: \"string\" }]\n})\n\nexport interface Transaction {\n  type: number\n  subtype: number\n  version: number\n  timestamp: number\n  deadline: number\n  senderPublicKey: Buffer\n  recipientId: Long\n  amountHQT: Long\n  feeHQT: Long\n  signature: Buffer\n  flags: number\n  ecBlockHeight: number\n  ecBlockId: Long\n  attachmentBytes: Buffer\n  appendixBytes: Buffer\n}\nexport const TransactionType = Type.forSchema({\n  type: \"record\",\n  fields: [\n    { name: \"type\", type: \"int\" },\n    { name: \"subtype\", type: \"int\" },\n    { name: \"version\", type: \"int\" },\n    { name: \"timestamp\", type: \"int\" },\n    { name: \"deadline\", type: \"int\" },\n    { name: \"senderPublicKey\", type: \"bytes\", size: 32 },\n    { name: \"recipientId\", type: \"long\" },\n    { name: \"amountHQT\", type: \"long\" },\n    { name: \"feeHQT\", type: \"long\" },\n    { name: \"signature\", type: \"bytes\", size: 64 },\n    { name: \"flags\", type: \"int\" },\n    { name: \"ecBlockHeight\", type: \"int\" },\n    { name: \"ecBlockId\", type: \"long\" },\n    { name: \"attachmentBytes\", type: \"bytes\" },\n    { name: \"appendixBytes\", type: \"bytes\" }\n  ]\n})\n\nexport interface BroadcastRequest {\n  transaction: Transaction\n}\n//may broadcast one or multiple transactions by filled appropriate field\nexport const BroadcastRequestType = Type.forSchema({\n  type: \"record\",\n  fields: [\n    {\n      name: \"transaction\",\n      type: [\"null\", TransactionType.schema()],\n      default: null\n    },\n    {\n      name: \"transactions\",\n      type: [\"null\", { type: \"array\", items: TransactionType.schema() }],\n      default: null\n    }\n  ]\n})\n\nexport interface BroadcastResponse {\n  transaction: Long\n}\n//response can have one or multiple transaction ids by filled appropriate field\nexport const BroadcastResponseType = Type.forSchema({\n  type: \"record\",\n  fields: [\n    {\n      name: \"transaction\",\n      type: [\"null\", \"long\"],\n      default: null\n    },\n    {\n      name: \"transactionIds\",\n      type: [\"null\", { type: \"array\", items: \"long\" }],\n      default: null\n    }\n  ]\n})\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2017 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\n\nimport WebSocket from \"ws\"\nimport ByteBuffer from \"bytebuffer\"\nimport * as utils from \"./utils\"\nimport { Buffer } from \"buffer\"\n\nlet MAGIC_NUM = 22102010\n\nexport interface SocketResponse {\n  type: number // 0=response, 33=exception\n  buffer: Buffer\n}\n\nexport class Socket {\n  private connectedSocketPromise: Promise<any> = null\n  private callIdIncr = 0\n  private callbacks: { [key: number]: any } = {}\n\n  constructor(private url: string) {}\n\n  /**\n   * Byte layout of rpc invocation\n   *\n   * --------------------------------------------\n   * |field | magic | callid | method | payload |\n   * |-------------------------------------------\n   * |size  | 4     | 4      | 2      | N       |\n   * --------------------------------------------\n   */\n  public invoke(method: number, request: ArrayBuffer): Promise<SocketResponse> {\n    let promise = new Promise((resolve, reject) => {\n      let callId = this.callIdIncr++\n      this.callbacks[callId] = {\n        resolve: resolve,\n        reject: reject\n      }\n      this.getConnectedSocket()\n        .then(websocket => {\n          let buffer = ByteBuffer.allocate(4 + 4 + 2 + request.byteLength).order(\n            ByteBuffer.LITTLE_ENDIAN\n          )\n          buffer.writeInt32(MAGIC_NUM)\n          buffer.writeInt32(callId)\n          buffer.writeInt16(method)\n          buffer.append(request)\n          websocket.send(buffer.buffer)\n        })\n        .catch(reject)\n    })\n    return utils.setPromiseTimeout(10 * 1000, promise)\n  }\n\n  /**\n   * Byte layout of rpc response\n   *\n   * --------------------------------------------\n   * |field | magic | callid | type | payload |\n   * |-------------------------------------------\n   * |size  | 4     | 4      | 1    | N       |\n   * --------------------------------------------\n   *\n   * The type field is either byte:0 (success) or byte:33 (failure). In case of\n   * success payload is response object, in case of failure is error object and\n   * needs to be decoded with error decoder.\n   */\n\n  private onMessage(message: any) {\n    var buffer = ByteBuffer.wrap(message).order(ByteBuffer.LITTLE_ENDIAN)\n    let magicNum = buffer.readInt32()\n    let callId = buffer.readInt32()\n    let type = buffer.readByte()\n    if (magicNum != MAGIC_NUM) {\n      console.log(\"Wrong magic number\")\n      return\n    }\n    let cb = this.callbacks[callId]\n    if (!cb) {\n      console.log(`No such callback callId=${callId}`)\n      return\n    }\n    try {\n      let response: SocketResponse = {\n        type: type,\n        buffer: Buffer.from(message, 9)\n      }\n      cb.resolve(response)\n    } catch (e) {\n      console.error(e)\n      cb.reject(e)\n    }\n  }\n\n  private getConnectedSocket() {\n    if (this.connectedSocketPromise) {\n      return this.connectedSocketPromise\n    }\n    this.connectedSocketPromise = new Promise((resolve, reject) => {\n      var websocket = new WebSocket(this.url, undefined)\n      websocket.binaryType = \"arraybuffer\"\n      var onclose = (event: any) => {\n        reject(event)\n        this.connectedSocketPromise = null\n        websocket.onclose = null\n        websocket.onopen = null\n        websocket.onerror = null\n        websocket.onmessage = null\n      }\n      var onerror = onclose\n      var onopen = (event: any) => {\n        resolve(websocket)\n      }\n      var onmessage = (message: any) => {\n        // var buffer = new Uint8Array(message.data)\n        // this.onMessage(buffer)\n        this.onMessage(message.data)\n      }\n      websocket.onclose = onclose\n      websocket.onopen = onopen\n      websocket.onerror = onerror\n      websocket.onmessage = onmessage\n    })\n    return this.connectedSocketPromise\n  }\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2017 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\nimport {\n  RpcError,\n  RpcErrorType,\n  Transaction,\n  TransactionType,\n  BroadcastRequest,\n  BroadcastRequestType,\n  BroadcastResponse,\n  BroadcastResponseType\n} from \"./types\"\nimport { Socket, SocketResponse } from \"./socket\"\nimport { TransactionImpl } from \"./builder\"\nimport { Buffer } from \"buffer\"\n\nlet TYPE_RESP = 0\nlet TYPE_ERR = 33\n\ninterface RemoteProcedure<R1, R2> {\n  method: number\n  request: any // avro.Type\n  response: any // avro.Type\n}\n\nexport class HeatRpc {\n  private socket: Socket\n\n  constructor(url: string) {\n    this.socket = new Socket(url)\n  }\n\n  private send(proc: RemoteProcedure<any, any>, request: any): Promise<any> {\n    let bufferIn = proc.request.toBuffer(request)\n    return this.socket.invoke(proc.method, bufferIn).then(response => {\n      if (response.type == TYPE_RESP) return proc.response.fromBuffer(response.buffer)\n      else if (response.type == TYPE_ERR) return RpcErrorType.fromBuffer(response.buffer)\n\n      console.log(`Wrong type arg ${response.type}`)\n      return null\n    })\n  }\n\n  public broadcast(request: BroadcastRequest): Promise<BroadcastResponse> {\n    return this.send(\n      { method: 1, request: BroadcastRequestType, response: BroadcastResponseType },\n      request\n    )\n  }\n\n  public broadcast2(t: TransactionImpl): Promise<BroadcastResponse> {\n    return this.send(\n      { method: 1, request: BroadcastRequestType, response: BroadcastResponseType },\n      { transaction: t.getRaw() }\n    )\n  }\n}\n","/*\n * The MIT License (MIT)\n * Copyright (c) 2017 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * */\nimport * as converters from \"./converters\"\nimport * as crypto from \"./crypto\"\nimport * as utils from \"./utils\"\nimport * as _attachment from \"./attachment\"\nimport * as builder from \"./builder\"\nimport * as transaction from \"./transaction\"\nimport { HeatApi } from \"./heat-api\"\nimport { HeatSubscriber } from \"./heat-subscriber\"\nimport { SecretGenerator } from \"./secret-generator\"\nimport {\n  AssetIssuance,\n  AssetTransfer,\n  ColoredCoinsAskOrderPlacement,\n  ColoredCoinsBidOrderPlacement,\n  ColoredCoinsAskOrderCancellation,\n  ColoredCoinsBidOrderCancellation,\n  AtomicMultiTransfer\n} from \"./attachment\"\nimport { Fee } from \"./fee\"\nimport { setRandomSource } from \"./random-bytes\"\nimport { HeatRpc } from \"./heat-rpc\"\nimport * as types from \"./types\"\nimport * as avro from \"./avro\"\nimport { AtomicTransfer } from \"./attachment\"\n\nexport const attachment = _attachment\nexport const Builder = builder.Builder\nexport const TransactionImpl = builder.TransactionImpl\nexport const Transaction = transaction.Transaction\nexport const Type = avro.Type\n\nexport interface ConfigArgs {\n  isTestnet?: boolean\n  baseURL?: string\n  websocketURL?: string\n  genesisKey?: Array<number>\n}\n\nexport class Configuration {\n  isTestnet = false\n  baseURL: string\n  websocketURL: string\n  genesisKey: Array<number>\n  constructor(args?: ConfigArgs) {\n    if (args) {\n      if (utils.isDefined(args.isTestnet)) this.isTestnet = !!args.isTestnet\n      if (utils.isDefined(args.baseURL)) this.baseURL = <string>args.baseURL\n      if (utils.isDefined(args.websocketURL)) this.websocketURL = <string>args.websocketURL\n      if (utils.isDefined(args.genesisKey)) this.genesisKey = <Array<number>>args.genesisKey\n    }\n    if (!utils.isDefined(this.baseURL))\n      this.baseURL = this.isTestnet\n        ? \"https://alpha.heatledger.com:7734/api/v1\"\n        : \"https://heatwallet.com:7734/api/v1\"\n    if (!utils.isDefined(this.websocketURL))\n      this.websocketURL = this.isTestnet\n        ? \"wss://alpha.heatledger.com:7755/ws/\"\n        : \"wss://heatwallet.com:7755/ws/\"\n    if (!utils.isDefined(this.genesisKey)) {\n      if (this.isTestnet) {\n        this.genesisKey = [255, 255, 255, 255, 255, 255, 255, 127]\n      }\n    }\n  }\n}\n\nexport class HeatSDK {\n  public api: HeatApi\n  public subscriber: HeatSubscriber\n  public rpc: HeatRpc\n  public types = types\n  public utils = utils\n  public crypto = crypto\n  public converters = converters\n  public config: Configuration\n  public secretGenerator = new SecretGenerator()\n  public setRandomSource = setRandomSource\n\n  constructor(config?: Configuration) {\n    const config_ = config ? config : new Configuration()\n    this.config = config_\n    this.api = new HeatApi({ baseURL: this.config.baseURL })\n    this.subscriber = new HeatSubscriber(this.config.websocketURL)\n    this.rpc = new HeatRpc(this.config.websocketURL)\n  }\n\n  public parseTransactionBytes(transactionBytesHex: string) {\n    return TransactionImpl.parse(transactionBytesHex, this.config.isTestnet)\n  }\n\n  public parseTransactionJSON(json: { [key: string]: any }) {\n    return TransactionImpl.parseJSON(json, this.config.isTestnet)\n  }\n\n  public passphraseEncrypt(plainText: string, passphrase: string) {\n    return crypto.passphraseEncrypt(plainText, passphrase).encode()\n  }\n\n  public passphraseDecrypt(cipherText: string, passphrase: string) {\n    let encrypted = crypto.PassphraseEncryptedMessage.decode(cipherText)\n    return crypto.passphraseDecrypt(encrypted, passphrase)\n  }\n\n  public payment(recipientOrRecipientPublicKey: string, amount: string) {\n    return new Transaction(\n      this,\n      recipientOrRecipientPublicKey,\n      new Builder()\n        .isTestnet(this.config.isTestnet)\n        .genesisKey(this.config.genesisKey)\n        .attachment(attachment.ORDINARY_PAYMENT)\n        .amountHQT(utils.convertToQNT(amount))\n    )\n  }\n\n  public arbitraryMessage(recipientOrRecipientPublicKey: string, message: string) {\n    return new Transaction(\n      this,\n      recipientOrRecipientPublicKey,\n      new Builder()\n        .isTestnet(this.config.isTestnet)\n        .genesisKey(this.config.genesisKey)\n        .attachment(attachment.ARBITRARY_MESSAGE)\n        .amountHQT(\"0\")\n    ).publicMessage(message)\n  }\n\n  public privateMessage(recipientPublicKey: string, message: string) {\n    return new Transaction(\n      this,\n      recipientPublicKey,\n      new Builder()\n        .isTestnet(this.config.isTestnet)\n        .genesisKey(this.config.genesisKey)\n        .attachment(attachment.ARBITRARY_MESSAGE)\n        .amountHQT(\"0\")\n    ).privateMessage(message)\n  }\n\n  public privateMessageToSelf(message: string) {\n    return new Transaction(\n      this,\n      null, // if null and provide private message then to send encrypted message to self\n      new Builder()\n        .isTestnet(this.config.isTestnet)\n        .genesisKey(this.config.genesisKey)\n        .attachment(attachment.ARBITRARY_MESSAGE)\n        .amountHQT(\"0\")\n    ).privateMessageToSelf(message)\n  }\n\n  public assetIssuance(\n    descriptionUrl: string,\n    descriptionHash: number[],\n    quantity: string,\n    decimals: number,\n    dillutable: boolean,\n    feeHQT?: string\n  ) {\n    let builder = new Builder()\n      .isTestnet(this.config.isTestnet)\n      .genesisKey(this.config.genesisKey)\n      .attachment(\n        new AssetIssuance().init(descriptionUrl, descriptionHash, quantity, decimals, dillutable)\n      )\n      .amountHQT(\"0\")\n      .feeHQT(feeHQT ? feeHQT : Fee.ASSET_ISSUANCE_FEE)\n    return new Transaction(this, \"0\", builder)\n  }\n\n  public assetTransfer(\n    recipientOrRecipientPublicKey: string,\n    assetId: string,\n    quantity: string,\n    feeHQT?: string\n  ) {\n    let builder = new Builder()\n      .isTestnet(this.config.isTestnet)\n      .genesisKey(this.config.genesisKey)\n      .attachment(new AssetTransfer().init(assetId, quantity))\n      .amountHQT(\"0\")\n      .feeHQT(feeHQT ? feeHQT : Fee.ASSET_TRANSFER_FEE)\n    return new Transaction(this, recipientOrRecipientPublicKey, builder)\n  }\n\n  public atomicMultiTransfer(\n    recipientOrRecipientPublicKey: string,\n    transfers: AtomicTransfer[],\n    feeHQT?: string\n  ) {\n    let builder = new Builder()\n      .isTestnet(this.config.isTestnet)\n      .genesisKey(this.config.genesisKey)\n      .attachment(new AtomicMultiTransfer().init(transfers))\n      .amountHQT(\"0\")\n      .feeHQT(feeHQT ? feeHQT : Fee.ATOMIC_MULTI_TRANSFER_FEE)\n    return new Transaction(this, recipientOrRecipientPublicKey, builder)\n  }\n\n  public placeAskOrder(\n    currencyId: string,\n    assetId: string,\n    quantity: string,\n    price: string,\n    expiration: number\n  ) {\n    let builder = new Builder()\n      .isTestnet(this.config.isTestnet)\n      .genesisKey(this.config.genesisKey)\n      .attachment(\n        new ColoredCoinsAskOrderPlacement().init(currencyId, assetId, quantity, price, expiration)\n      )\n      .amountHQT(\"0\")\n      .feeHQT(\"1000000\")\n    return new Transaction(this, \"0\", builder)\n  }\n\n  public placeBidOrder(\n    currencyId: string,\n    assetId: string,\n    quantity: string,\n    price: string,\n    expiration: number\n  ) {\n    let builder = new Builder()\n      .isTestnet(this.config.isTestnet)\n      .genesisKey(this.config.genesisKey)\n      .attachment(\n        new ColoredCoinsBidOrderPlacement().init(currencyId, assetId, quantity, price, expiration)\n      )\n      .amountHQT(\"0\")\n      .feeHQT(\"1000000\")\n    return new Transaction(this, \"0\", builder)\n  }\n\n  public cancelAskOrder(orderId: string) {\n    let builder = new Builder()\n      .isTestnet(this.config.isTestnet)\n      .genesisKey(this.config.genesisKey)\n      .attachment(new ColoredCoinsAskOrderCancellation().init(orderId))\n      .amountHQT(\"0\")\n      .feeHQT(\"1000000\")\n    return new Transaction(this, \"0\", builder)\n  }\n\n  public cancelBidOrder(orderId: string) {\n    let builder = new Builder()\n      .isTestnet(this.config.isTestnet)\n      .genesisKey(this.config.genesisKey)\n      .attachment(new ColoredCoinsBidOrderCancellation().init(orderId))\n      .amountHQT(\"0\")\n      .feeHQT(\"1000000\")\n    return new Transaction(this, \"0\", builder)\n  }\n}\n"],"names":["define","this","Z_FIXED","Z_UNKNOWN","zero","MIN_MATCH","MAX_MATCH","LENGTH_CODES","LITERALS","L_CODES","D_CODES","BL_CODES","HEAP_SIZE","MAX_BITS","utils","Z_NO_FLUSH","Z_FINISH","Z_OK","Z_STREAM_END","Z_DEFAULT_COMPRESSION","Z_DEFAULT_STRATEGY","Z_DEFLATED","msg","adler32","crc32","deflate","ZStream","zlib_deflate","BAD","TYPE","ENOUGH_LENS","ENOUGH_DISTS","CODES","LENS","DISTS","Z_BLOCK","Z_STREAM_ERROR","Z_DATA_ERROR","Z_BUF_ERROR","MAX_WBITS","inflate_table","inflate","inflate_fast","toString","zlib_inflate","c","GZheader","require$$0","crypto","Big","Long","byteArrayToBigInteger","pako","converters.hexStringToByteArray","tslib_1.__extends","constants.MAX_INT32","constants.MIN_INT32","converters.stringToByteArray","converters.byteArrayToString","converters.byteArrayToHexString","constants.MAX_ENCRYPTED_MESSAGE_LENGTH","utils.readBytes","utils.writeBytes","crypto.fullNameToLong","attachment.ORDINARY_PAYMENT","attachment.ARBITRARY_MESSAGE","AssetIssuance","attachment.AssetIssuance","AssetIssueMore","attachment.AssetIssueMore","AssetTransfer","attachment.AssetTransfer","AtomicMultiTransfer","attachment.AtomicMultiTransfer","ColoredCoinsOrderPlacement","attachment.ColoredCoinsAskOrderPlacement","attachment.ColoredCoinsBidOrderPlacement","ColoredCoinsOrderCancellation","attachment.ColoredCoinsAskOrderCancellation","attachment.ColoredCoinsBidOrderCancellation","attachment.ColoredCoinsWhitelistAccountAddition","attachment.ColoredCoinsWhitelistAccountRemoval","attachment.ColoredCoinsWhitelistMarket","attachment.AccountControlEffectiveBalanceLeasing","appendix.AbstractAppendix","transactionType.ORDINARY_PAYMENT_TRANSACTION_TYPE","transactionType.ARBITRARY_MESSAGE_TRANSACTION_TYPE","transactionType.COLORED_COINS_ASSET_ISSUANCE_TRANSACTION_TYPE","transactionType.COLORED_COINS_ASSET_ISSUE_MORE_TRANSACTION_TYPE","transactionType.COLORED_COINS_ASSET_TRANSFER_TRANSACTION_TYPE","transactionType.COLORED_COINS_ATOMIC_MULTI_TRANSFER_TRANSACTION_TYPE","transactionType.COLORED_COINS_ASK_ORDER_PLACEMENT_TRANSACTION_TYPE","transactionType.COLORED_COINS_BID_ORDER_PLACEMENT_TRANSACTION_TYPE","transactionType.ASK_ORDER_CANCELLATION_TRANSACTION_TYPE","transactionType.BID_ORDER_CANCELLATION_TRANSACTION_TYPE","transactionType.WHITELIST_ACCOUNT_ADDITION_TRANSACTION_TYPE","transactionType.WHITELIST_ACCOUNT_REMOVAL_TRANSACTION_TYPE","transactionType.WHITELIST_MARKET_TRANSACTION_TYPE","transactionType.EFFECTIVE_BALANCE_LEASING_TRANSACTION_TYPE","buffer","require$$1","TransactionImpl","utils.isDefined","crypto.secretPhraseToPublicKey","crypto.signBytes","converters.stringToHexString","ByteBuffer","Buffer","utils.extend","utils.isEmpty","crypto.verifyBytes","Builder","appendix.AppendixMessage","appendix.AppendixEncryptedMessage","appendix.AppendixPublicKeyAnnouncement","appendix.AppendixEncryptToSelfMessage","appendix.AppendixPrivateNameAnnouncement","appendix.AppendixPrivateNameAssignment","appendix.AppendixPublicNameAnnouncement","appendix.AppendixPublicNameAssignment","utils.epochTime","utils.isPublicKey","crypto.getAccountIdFromPublicKey","crypto\r\n                        .encryptMessage","StringDecoder","i","require$$2","require$$3","require$$4","require$$5","require$$6","require$$7","convert","Iconv","iconvLite","FetchError","encoding","bodyStream","global","body","Headers","Body","url","Request","headers","stream","Response","fetch","Limiter","bufferUtil","constants","PerMessageDeflate","isValidUTF8","WebSocket","EventEmitter","Receiver","Sender","Ultron","EventTarget","utils.isString","utils.isObject","crypto.random32Values","Tap","Type","avro","TransactionType","utils.setPromiseTimeout","builder.Builder","builder.TransactionImpl","transaction.Transaction","avro.Type","crypto.passphraseEncrypt","crypto.PassphraseEncryptedMessage","crypto.passphraseDecrypt","utils.convertToQNT"],"mappings":"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CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,IAAI,MAAM,CAAA;IAC3F,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,IAAI,MAAM,CAAA;IAC3F,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,IAAI,MAAM,CAAA;IAC3F,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,IAAI,MAAM,CAAA;IAC3F,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,IAAI,MAAM,CAAA;IAC3F,CAAC,CAAC,EAAE,CAAC,GAAG,QAAQ,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,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AAG,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAA;IAClF,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAA;IACnD,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAA;IACnD,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAA;IACnD,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAA;IACnD,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAA;IACnD,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAA;IACnD,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAA;IACnD,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAA;IACnD,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAA;IACnD,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,MAAM,CAAA;IACtD,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,MAAM,CAAA;IACtD,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,MAAM,CAAA;IACtD,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,MAAM,CAAA;IACtD,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,MAAM,CAAA;IACtD,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,MAAM,CAAA;CAC1D,CAAA;AAED,IAAI,kBAAkB,GAAG,UAAS,CAAM,EAAE,CAAM,EAAE,CAAM;IACtD,IAAI,CAAC,GAAG,CAAC,CAAA;IACT,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAA;IAChG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,GAAG,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAA;IAC7D,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,GAAG,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAA;IAC7D,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,GAAG,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAA;IAC7D,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,GAAG,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAA;IAC7D,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,GAAG,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAA;IAC7D,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,GAAG,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAA;IAC7D,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,GAAG,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAA;IAC7D,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC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CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EACb,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EACb,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EACR,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EACR,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EACR,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EACR,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAC7B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAC9B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAC9B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAC9B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAC7B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAC9B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAC9B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAC9B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAC7B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAC9B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC/B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC/B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC9B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC/B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC/B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC/B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC9B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC9B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC/B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC/B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC9B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC9B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC/B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC/B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC9B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC9B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC/B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC/B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC9B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC9B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC/B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC/B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC9B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC/B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC/B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC/B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC9B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC/B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC/B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC/B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC9B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC/B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC/B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC/B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC9B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC/B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC/B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC/B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC9B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC/B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC/B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC/B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC9B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC/B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC/B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC/B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC9B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC/B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC/B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC/B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC9B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC/B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAA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"}